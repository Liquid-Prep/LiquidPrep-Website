{"ast":null,"code":"import _slicedToArray from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// src/providers.tsx\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport { css, toCSSVar } from \"@chakra-ui/styled-system\";\nimport { memoizedGet as get, runIfFn } from \"@chakra-ui/utils\";\nimport { Global, ThemeProvider as EmotionThemeProvider } from \"@emotion/react\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction ThemeProvider(props) {\n  var cssVarsRoot = props.cssVarsRoot,\n    theme = props.theme,\n    children = props.children;\n  var computedTheme = useMemo(function () {\n    return toCSSVar(theme);\n  }, [theme]);\n  return /* @__PURE__ */jsxs(EmotionThemeProvider, {\n    theme: computedTheme,\n    children: [/* @__PURE__ */jsx(CSSVars, {\n      root: cssVarsRoot\n    }), children]\n  });\n}\nfunction CSSVars(_ref) {\n  var _ref$root = _ref.root,\n    root = _ref$root === void 0 ? \":host, :root\" : _ref$root;\n  var selector = [root, \"[data-theme]\"].join(\",\");\n  return /* @__PURE__ */jsx(Global, {\n    styles: function styles(theme) {\n      return _defineProperty({}, selector, theme.__cssVars);\n    }\n  });\n}\nvar _createContext = createContext({\n    name: \"StylesContext\",\n    errorMessage: \"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  StylesProvider = _createContext2[0],\n  useStyles = _createContext2[1];\nfunction createStylesContext(componentName) {\n  return createContext({\n    name: \"\".concat(componentName, \"StylesContext\"),\n    errorMessage: \"useStyles: \\\"styles\\\" is undefined. Seems you forgot to wrap the components in \\\"<\".concat(componentName, \" />\\\" \")\n  });\n}\nfunction GlobalStyle() {\n  var _useColorMode = useColorMode(),\n    colorMode = _useColorMode.colorMode;\n  return /* @__PURE__ */jsx(Global, {\n    styles: function styles(theme) {\n      var styleObjectOrFn = get(theme, \"styles.global\");\n      var globalStyles = runIfFn(styleObjectOrFn, {\n        theme: theme,\n        colorMode: colorMode\n      });\n      if (!globalStyles) return void 0;\n      var styles = css(globalStyles)(theme);\n      return styles;\n    }\n  });\n}\nexport { ThemeProvider, CSSVars, StylesProvider, useStyles, createStylesContext, GlobalStyle };","map":null,"metadata":{},"sourceType":"module"}
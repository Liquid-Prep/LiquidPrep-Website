{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  contains: function contains() {\n    return _contains;\n  },\n  getActiveElement: function getActiveElement() {\n    return _getActiveElement;\n  },\n  getAllFocusable: function getAllFocusable() {\n    return _getAllFocusable;\n  },\n  getAllTabbable: function getAllTabbable() {\n    return _getAllTabbable;\n  },\n  getEventWindow: function getEventWindow() {\n    return _getEventWindow;\n  },\n  getFirstFocusable: function getFirstFocusable() {\n    return _getFirstFocusable;\n  },\n  getFirstTabbableIn: function getFirstTabbableIn() {\n    return _getFirstTabbableIn;\n  },\n  getLastTabbableIn: function getLastTabbableIn() {\n    return _getLastTabbableIn;\n  },\n  getNextTabbable: function getNextTabbable() {\n    return _getNextTabbable;\n  },\n  getOwnerDocument: function getOwnerDocument() {\n    return _getOwnerDocument;\n  },\n  getOwnerWindow: function getOwnerWindow() {\n    return _getOwnerWindow;\n  },\n  getPreviousTabbable: function getPreviousTabbable() {\n    return _getPreviousTabbable;\n  },\n  hasDisplayNone: function hasDisplayNone() {\n    return _hasDisplayNone;\n  },\n  hasFocusWithin: function hasFocusWithin() {\n    return _hasFocusWithin;\n  },\n  hasNegativeTabIndex: function hasNegativeTabIndex() {\n    return _hasNegativeTabIndex;\n  },\n  hasTabIndex: function hasTabIndex() {\n    return _hasTabIndex;\n  },\n  isActiveElement: function isActiveElement() {\n    return _isActiveElement;\n  },\n  isBrowser: function isBrowser() {\n    return _isBrowser;\n  },\n  isContentEditable: function isContentEditable() {\n    return _isContentEditable;\n  },\n  isDisabled: function isDisabled() {\n    return _isDisabled;\n  },\n  isElement: function isElement() {\n    return _isElement;\n  },\n  isFocusable: function isFocusable() {\n    return _isFocusable;\n  },\n  isHTMLElement: function isHTMLElement() {\n    return _isHTMLElement;\n  },\n  isHidden: function isHidden() {\n    return _isHidden;\n  },\n  isInputElement: function isInputElement() {\n    return _isInputElement;\n  },\n  isTabbable: function isTabbable() {\n    return _isTabbable;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/dom.ts\nfunction _isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction _isHTMLElement(el) {\n  var _a;\n  if (!_isElement(el)) return false;\n  var win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction _getOwnerWindow(node) {\n  var _a, _b;\n  return (_b = (_a = _getOwnerDocument(node)) == null ? void 0 : _a.defaultView) != null ? _b : window;\n}\nfunction _getOwnerDocument(node) {\n  return _isElement(node) ? node.ownerDocument : document;\n}\nfunction _getEventWindow(event) {\n  var _a;\n  return (_a = event.view) != null ? _a : window;\n}\nfunction _isBrowser() {\n  return Boolean(globalThis == null ? void 0 : globalThis.document);\n}\nfunction _getActiveElement(node) {\n  return _getOwnerDocument(node).activeElement;\n}\nfunction _contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\n\n// src/tabbable.ts\nvar _hasDisplayNone = function _hasDisplayNone(element) {\n  return window.getComputedStyle(element).display === \"none\";\n};\nvar _hasTabIndex = function _hasTabIndex(element) {\n  return element.hasAttribute(\"tabindex\");\n};\nvar _hasNegativeTabIndex = function _hasNegativeTabIndex(element) {\n  return _hasTabIndex(element) && element.tabIndex === -1;\n};\nfunction _isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction _isInputElement(element) {\n  return _isHTMLElement(element) && element.localName === \"input\" && \"select\" in element;\n}\nfunction _isActiveElement(element) {\n  var doc = _isHTMLElement(element) ? _getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction _hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nfunction _isHidden(element) {\n  if (element.parentElement && _isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nfunction _isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction _isFocusable(element) {\n  if (!_isHTMLElement(element) || _isHidden(element) || _isDisabled(element)) {\n    return false;\n  }\n  var localName = element.localName;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: function a() {\n      return element.hasAttribute(\"href\");\n    },\n    audio: function audio() {\n      return element.hasAttribute(\"controls\");\n    },\n    video: function video() {\n      return element.hasAttribute(\"controls\");\n    }\n  };\n  if (localName in others) {\n    return others[localName]();\n  }\n  if (_isContentEditable(element)) return true;\n  return _hasTabIndex(element);\n}\nfunction _isTabbable(element) {\n  if (!element) return false;\n  return _isHTMLElement(element) && _isFocusable(element) && !_hasNegativeTabIndex(element);\n}\n\n// src/index.ts\nvar focusableElList = [\"input:not(:disabled):not([disabled])\", \"select:not(:disabled):not([disabled])\", \"textarea:not(:disabled):not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not(:disabled):not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nvar isVisible = function isVisible(el) {\n  return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\nfunction _getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(function (el) {\n    return _isFocusable(el) && isVisible(el);\n  });\n}\nfunction _getFirstFocusable(container) {\n  var allFocusable = _getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction _getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(_isTabbable);\n  if (_isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n  return allTabbable;\n}\nfunction _getFirstTabbableIn(container, fallbackToFocusable) {\n  var _getAllTabbable2 = _getAllTabbable(container, fallbackToFocusable),\n    _getAllTabbable3 = _slicedToArray(_getAllTabbable2, 1),\n    first = _getAllTabbable3[0];\n  return first || null;\n}\nfunction _getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = _getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction _getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = _getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(_isTabbable) || allFocusable.find(_isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction _getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = _getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(_isTabbable) || allFocusable.find(_isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  contains: _contains,\n  getActiveElement: _getActiveElement,\n  getAllFocusable: _getAllFocusable,\n  getAllTabbable: _getAllTabbable,\n  getEventWindow: _getEventWindow,\n  getFirstFocusable: _getFirstFocusable,\n  getFirstTabbableIn: _getFirstTabbableIn,\n  getLastTabbableIn: _getLastTabbableIn,\n  getNextTabbable: _getNextTabbable,\n  getOwnerDocument: _getOwnerDocument,\n  getOwnerWindow: _getOwnerWindow,\n  getPreviousTabbable: _getPreviousTabbable,\n  hasDisplayNone: _hasDisplayNone,\n  hasFocusWithin: _hasFocusWithin,\n  hasNegativeTabIndex: _hasNegativeTabIndex,\n  hasTabIndex: _hasTabIndex,\n  isActiveElement: _isActiveElement,\n  isBrowser: _isBrowser,\n  isContentEditable: _isContentEditable,\n  isDisabled: _isDisabled,\n  isElement: _isElement,\n  isFocusable: _isFocusable,\n  isHTMLElement: _isHTMLElement,\n  isHidden: _isHidden,\n  isInputElement: _isInputElement,\n  isTabbable: _isTabbable\n});","map":null,"metadata":{},"sourceType":"script"}
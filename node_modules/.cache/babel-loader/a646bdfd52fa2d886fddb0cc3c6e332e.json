{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AlertDialog: function AlertDialog() {\n    return _AlertDialog;\n  },\n  AlertDialogBody: function AlertDialogBody() {\n    return _ModalBody;\n  },\n  AlertDialogCloseButton: function AlertDialogCloseButton() {\n    return _ModalCloseButton;\n  },\n  AlertDialogContent: function AlertDialogContent() {\n    return _AlertDialogContent;\n  },\n  AlertDialogFooter: function AlertDialogFooter() {\n    return _ModalFooter;\n  },\n  AlertDialogHeader: function AlertDialogHeader() {\n    return _ModalHeader;\n  },\n  AlertDialogOverlay: function AlertDialogOverlay() {\n    return _ModalOverlay;\n  },\n  Drawer: function Drawer() {\n    return _Drawer;\n  },\n  DrawerBody: function DrawerBody() {\n    return _ModalBody;\n  },\n  DrawerCloseButton: function DrawerCloseButton() {\n    return _ModalCloseButton;\n  },\n  DrawerContent: function DrawerContent() {\n    return _DrawerContent;\n  },\n  DrawerFooter: function DrawerFooter() {\n    return _ModalFooter;\n  },\n  DrawerHeader: function DrawerHeader() {\n    return _ModalHeader;\n  },\n  DrawerOverlay: function DrawerOverlay() {\n    return _ModalOverlay;\n  },\n  Modal: function Modal() {\n    return _Modal;\n  },\n  ModalBody: function ModalBody() {\n    return _ModalBody;\n  },\n  ModalCloseButton: function ModalCloseButton() {\n    return _ModalCloseButton;\n  },\n  ModalContent: function ModalContent() {\n    return _ModalContent;\n  },\n  ModalContextProvider: function ModalContextProvider() {\n    return _ModalContextProvider;\n  },\n  ModalFocusScope: function ModalFocusScope() {\n    return _ModalFocusScope;\n  },\n  ModalFooter: function ModalFooter() {\n    return _ModalFooter;\n  },\n  ModalHeader: function ModalHeader() {\n    return _ModalHeader;\n  },\n  ModalOverlay: function ModalOverlay() {\n    return _ModalOverlay;\n  },\n  useDrawerContext: function useDrawerContext() {\n    return _useDrawerContext;\n  },\n  useModal: function useModal() {\n    return _useModal;\n  },\n  useModalContext: function useModalContext() {\n    return _useModalContext;\n  },\n  useModalStyles: function useModalStyles() {\n    return _useModalStyles;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/alert-dialog.tsx\nvar import_system9 = require(\"@chakra-ui/system\");\n\n// src/modal.tsx\nvar import_portal = require(\"@chakra-ui/portal\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\nvar import_framer_motion = require(\"framer-motion\");\n\n// src/use-modal.ts\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_aria_hidden = require(\"aria-hidden\");\nvar import_react2 = require(\"react\");\n\n// src/modal-manager.ts\nvar import_react = require(\"react\");\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n    __publicField(this, \"modals\");\n    this.modals = /* @__PURE__ */new Map();\n  }\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal) {\n      this.modals.set(modal, this.modals.size + 1);\n      return this.modals.size;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      this.modals.delete(modal);\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      if (!modal) return false;\n      return this.modals.get(modal) === this.modals.size;\n    }\n  }]);\n  return ModalManager;\n}();\nvar manager = new ModalManager();\nfunction useModalManager(ref, isOpen) {\n  var _ref = (0, import_react.useState)(0),\n    _ref2 = _slicedToArray(_ref, 2),\n    index = _ref2[0],\n    setIndex = _ref2[1];\n  (0, import_react.useEffect)(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (isOpen) {\n      var index2 = manager.add(node);\n      setIndex(index2);\n    }\n    return function () {\n      manager.remove(node);\n      setIndex(0);\n    };\n  }, [isOpen, ref]);\n  return index;\n}\n\n// src/use-modal.ts\nfunction _useModal(props) {\n  var isOpen = props.isOpen,\n    onClose = props.onClose,\n    id = props.id,\n    _props$closeOnOverlay = props.closeOnOverlayClick,\n    closeOnOverlayClick = _props$closeOnOverlay === void 0 ? true : _props$closeOnOverlay,\n    _props$closeOnEsc = props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    _props$useInert = props.useInert,\n    useInert = _props$useInert === void 0 ? true : _props$useInert,\n    onOverlayClickProp = props.onOverlayClick,\n    onEsc = props.onEsc;\n  var dialogRef = (0, import_react2.useRef)(null);\n  var overlayRef = (0, import_react2.useRef)(null);\n  var _useIds = useIds(id, \"chakra-modal\", \"chakra-modal--header\", \"chakra-modal--body\"),\n    _useIds2 = _slicedToArray(_useIds, 3),\n    dialogId = _useIds2[0],\n    headerId = _useIds2[1],\n    bodyId = _useIds2[2];\n  useAriaHidden(dialogRef, isOpen && useInert);\n  useModalManager(dialogRef, isOpen);\n  var mouseDownTarget = (0, import_react2.useRef)(null);\n  var onMouseDown = (0, import_react2.useCallback)(function (event) {\n    mouseDownTarget.current = event.target;\n  }, []);\n  var onKeyDown = (0, import_react2.useCallback)(function (event) {\n    if (event.key === \"Escape\") {\n      event.stopPropagation();\n      if (closeOnEsc) {\n        onClose == null ? void 0 : onClose();\n      }\n      onEsc == null ? void 0 : onEsc();\n    }\n  }, [closeOnEsc, onClose, onEsc]);\n  var _ref3 = (0, import_react2.useState)(false),\n    _ref4 = _slicedToArray(_ref3, 2),\n    headerMounted = _ref4[0],\n    setHeaderMounted = _ref4[1];\n  var _ref5 = (0, import_react2.useState)(false),\n    _ref6 = _slicedToArray(_ref5, 2),\n    bodyMounted = _ref6[0],\n    setBodyMounted = _ref6[1];\n  var getDialogProps = (0, import_react2.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({\n      role: \"dialog\"\n    }, props2, {\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, dialogRef),\n      id: dialogId,\n      tabIndex: -1,\n      \"aria-modal\": true,\n      \"aria-labelledby\": headerMounted ? headerId : void 0,\n      \"aria-describedby\": bodyMounted ? bodyId : void 0,\n      onClick: (0, import_shared_utils.callAllHandlers)(props2.onClick, function (event) {\n        return event.stopPropagation();\n      })\n    });\n  }, [bodyId, bodyMounted, dialogId, headerId, headerMounted]);\n  var onOverlayClick = (0, import_react2.useCallback)(function (event) {\n    event.stopPropagation();\n    if (mouseDownTarget.current !== event.target) return;\n    if (!manager.isTopModal(dialogRef.current)) return;\n    if (closeOnOverlayClick) {\n      onClose == null ? void 0 : onClose();\n    }\n    onOverlayClickProp == null ? void 0 : onOverlayClickProp();\n  }, [onClose, closeOnOverlayClick, onOverlayClickProp]);\n  var getDialogContainerProps = (0, import_react2.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, overlayRef),\n      onClick: (0, import_shared_utils.callAllHandlers)(props2.onClick, onOverlayClick),\n      onKeyDown: (0, import_shared_utils.callAllHandlers)(props2.onKeyDown, onKeyDown),\n      onMouseDown: (0, import_shared_utils.callAllHandlers)(props2.onMouseDown, onMouseDown)\n    });\n  }, [onKeyDown, onMouseDown, onOverlayClick]);\n  return {\n    isOpen: isOpen,\n    onClose: onClose,\n    headerId: headerId,\n    bodyId: bodyId,\n    setBodyMounted: setBodyMounted,\n    setHeaderMounted: setHeaderMounted,\n    dialogRef: dialogRef,\n    overlayRef: overlayRef,\n    getDialogProps: getDialogProps,\n    getDialogContainerProps: getDialogContainerProps\n  };\n}\nfunction useAriaHidden(ref, shouldHide) {\n  var currentElement = ref.current;\n  (0, import_react2.useEffect)(function () {\n    if (!ref.current || !shouldHide) return void 0;\n    return (0, import_aria_hidden.hideOthers)(ref.current);\n  }, [shouldHide, ref, currentElement]);\n}\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n  var reactId = (0, import_react2.useId)();\n  var id = idProp || reactId;\n  return (0, import_react2.useMemo)(function () {\n    return prefixes.map(function (prefix) {\n      return \"\".concat(prefix, \"-\").concat(id);\n    });\n  }, [id, prefixes]);\n}\n\n// src/modal.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar _ref7 = (0, import_react_context.createContext)({\n    name: \"ModalStylesContext\",\n    errorMessage: \"useModalStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Modal />\\\" \"\n  }),\n  _ref8 = _slicedToArray(_ref7, 2),\n  ModalStylesProvider = _ref8[0],\n  _useModalStyles = _ref8[1];\nvar _ref9 = (0, import_react_context.createContext)({\n    strict: true,\n    name: \"ModalContext\",\n    errorMessage: \"useModalContext: `context` is undefined. Seems you forgot to wrap modal components in `<Modal />`\"\n  }),\n  _ref10 = _slicedToArray(_ref9, 2),\n  _ModalContextProvider = _ref10[0],\n  _useModalContext = _ref10[1];\nvar _Modal = function _Modal(props) {\n  var modalProps = _objectSpread({\n    scrollBehavior: \"outside\",\n    autoFocus: true,\n    trapFocus: true,\n    returnFocusOnClose: true,\n    blockScrollOnMount: true,\n    allowPinchZoom: false,\n    motionPreset: \"scale\",\n    lockFocusAcrossFrames: true\n  }, props);\n  var portalProps = modalProps.portalProps,\n    children = modalProps.children,\n    autoFocus = modalProps.autoFocus,\n    trapFocus = modalProps.trapFocus,\n    initialFocusRef = modalProps.initialFocusRef,\n    finalFocusRef = modalProps.finalFocusRef,\n    returnFocusOnClose = modalProps.returnFocusOnClose,\n    blockScrollOnMount = modalProps.blockScrollOnMount,\n    allowPinchZoom = modalProps.allowPinchZoom,\n    preserveScrollBarGap = modalProps.preserveScrollBarGap,\n    motionPreset = modalProps.motionPreset,\n    lockFocusAcrossFrames = modalProps.lockFocusAcrossFrames,\n    onCloseComplete = modalProps.onCloseComplete;\n  var styles = (0, import_system.useMultiStyleConfig)(\"Modal\", modalProps);\n  var modal = _useModal(modalProps);\n  var context = _objectSpread({}, modal, {\n    autoFocus: autoFocus,\n    trapFocus: trapFocus,\n    initialFocusRef: initialFocusRef,\n    finalFocusRef: finalFocusRef,\n    returnFocusOnClose: returnFocusOnClose,\n    blockScrollOnMount: blockScrollOnMount,\n    allowPinchZoom: allowPinchZoom,\n    preserveScrollBarGap: preserveScrollBarGap,\n    motionPreset: motionPreset,\n    lockFocusAcrossFrames: lockFocusAcrossFrames\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(_ModalContextProvider, {\n    value: context,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(ModalStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.AnimatePresence, {\n        onExitComplete: onCloseComplete,\n        children: context.isOpen && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_portal.Portal, _objectSpread({}, portalProps, {\n          children: children\n        }))\n      })\n    })\n  });\n};\n_Modal.displayName = \"Modal\";\n\n// src/modal-content.tsx\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_system3 = require(\"@chakra-ui/system\");\n\n// src/modal-focus.tsx\nvar import_focus_lock = require(\"@chakra-ui/focus-lock\");\nvar import_framer_motion2 = require(\"framer-motion\");\nvar import_react3 = require(\"react\");\nvar import_react_remove_scroll = require(\"react-remove-scroll\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction _ModalFocusScope(props) {\n  var _useModalContext2 = _useModalContext(),\n    autoFocus = _useModalContext2.autoFocus,\n    trapFocus = _useModalContext2.trapFocus,\n    dialogRef = _useModalContext2.dialogRef,\n    initialFocusRef = _useModalContext2.initialFocusRef,\n    blockScrollOnMount = _useModalContext2.blockScrollOnMount,\n    allowPinchZoom = _useModalContext2.allowPinchZoom,\n    finalFocusRef = _useModalContext2.finalFocusRef,\n    returnFocusOnClose = _useModalContext2.returnFocusOnClose,\n    preserveScrollBarGap = _useModalContext2.preserveScrollBarGap,\n    lockFocusAcrossFrames = _useModalContext2.lockFocusAcrossFrames,\n    isOpen = _useModalContext2.isOpen;\n  var _ref11 = (0, import_framer_motion2.usePresence)(),\n    _ref12 = _slicedToArray(_ref11, 2),\n    isPresent = _ref12[0],\n    safeToRemove = _ref12[1];\n  (0, import_react3.useEffect)(function () {\n    if (!isPresent && safeToRemove) {\n      setTimeout(safeToRemove);\n    }\n  }, [isPresent, safeToRemove]);\n  var index = useModalManager(dialogRef, isOpen);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_focus_lock.FocusLock, {\n    autoFocus: autoFocus,\n    isDisabled: !trapFocus,\n    initialFocusRef: initialFocusRef,\n    finalFocusRef: finalFocusRef,\n    restoreFocus: returnFocusOnClose,\n    contentRef: dialogRef,\n    lockFocusAcrossFrames: lockFocusAcrossFrames,\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_react_remove_scroll.RemoveScroll, {\n      removeScrollBar: !preserveScrollBarGap,\n      allowPinchZoom: allowPinchZoom,\n      enabled: index === 1 && blockScrollOnMount,\n      forwardProps: true,\n      children: props.children\n    })\n  });\n}\n\n// src/modal-transition.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_transition = require(\"@chakra-ui/transition\");\nvar import_framer_motion3 = require(\"framer-motion\");\nvar import_react4 = require(\"react\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar transitions = {\n  slideInBottom: _objectSpread({}, import_transition.slideFadeConfig, {\n    custom: {\n      offsetY: 16,\n      reverse: true\n    }\n  }),\n  slideInRight: _objectSpread({}, import_transition.slideFadeConfig, {\n    custom: {\n      offsetX: 16,\n      reverse: true\n    }\n  }),\n  scale: _objectSpread({}, import_transition.scaleFadeConfig, {\n    custom: {\n      initialScale: 0.95,\n      reverse: true\n    }\n  }),\n  none: {}\n};\nvar MotionSection = (0, import_system2.chakra)(import_framer_motion3.motion.section);\nvar getMotionProps = function getMotionProps(preset) {\n  return transitions[preset || \"none\"];\n};\nvar ModalTransition = (0, import_react4.forwardRef)(function (props, ref) {\n  var preset = props.preset,\n    _props$motionProps = props.motionProps,\n    motionProps = _props$motionProps === void 0 ? getMotionProps(preset) : _props$motionProps,\n    rest = _objectWithoutProperties(props, [\"preset\", \"motionProps\"]);\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(MotionSection, _objectSpread({\n    ref: ref\n  }, motionProps, rest));\n});\nModalTransition.displayName = \"ModalTransition\";\n\n// src/modal-content.tsx\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar _ModalContent = (0, import_system3.forwardRef)(function (props, ref) {\n  var className = props.className,\n    children = props.children,\n    rootProps = props.containerProps,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, [\"className\", \"children\", \"containerProps\", \"motionProps\"]);\n  var _useModalContext3 = _useModalContext(),\n    getDialogProps = _useModalContext3.getDialogProps,\n    getDialogContainerProps = _useModalContext3.getDialogContainerProps;\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n  var _className = (0, import_shared_utils2.cx)(\"chakra-modal__content\", className);\n  var styles = _useModalStyles();\n  var dialogStyles = _objectSpread({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n  var dialogContainerStyles = _objectSpread({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n  var _useModalContext4 = _useModalContext(),\n    motionPreset = _useModalContext4.motionPreset;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(_ModalFocusScope, {\n    children: /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system3.chakra.div, _objectSpread({}, containerProps, {\n      className: \"chakra-modal__content-container\",\n      tabIndex: -1,\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */(0, import_jsx_runtime4.jsx)(ModalTransition, _objectSpread({\n        preset: motionPreset,\n        motionProps: motionProps,\n        className: _className\n      }, dialogProps, {\n        __css: dialogStyles,\n        children: children\n      }))\n    }))\n  });\n});\n_ModalContent.displayName = \"ModalContent\";\n\n// src/modal-body.tsx\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_react5 = require(\"react\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar _ModalBody = (0, import_system4.forwardRef)(function (props, ref) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, [\"className\"]);\n  var _useModalContext5 = _useModalContext(),\n    bodyId = _useModalContext5.bodyId,\n    setBodyMounted = _useModalContext5.setBodyMounted;\n  (0, import_react5.useEffect)(function () {\n    setBodyMounted(true);\n    return function () {\n      return setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n  var _className = (0, import_shared_utils3.cx)(\"chakra-modal__body\", className);\n  var styles = _useModalStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system4.chakra.div, _objectSpread({\n    ref: ref,\n    className: _className,\n    id: bodyId\n  }, rest, {\n    __css: styles.body\n  }));\n});\n_ModalBody.displayName = \"ModalBody\";\n\n// src/modal-close-button.tsx\nvar import_close_button = require(\"@chakra-ui/close-button\");\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar _ModalCloseButton = (0, import_system5.forwardRef)(function (props, ref) {\n  var onClick = props.onClick,\n    className = props.className,\n    rest = _objectWithoutProperties(props, [\"onClick\", \"className\"]);\n  var _useModalContext6 = _useModalContext(),\n    onClose = _useModalContext6.onClose;\n  var _className = (0, import_shared_utils4.cx)(\"chakra-modal__close-btn\", className);\n  var styles = _useModalStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_close_button.CloseButton, _objectSpread({\n    ref: ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: (0, import_shared_utils4.callAllHandlers)(onClick, function (event) {\n      event.stopPropagation();\n      onClose();\n    })\n  }, rest));\n});\n_ModalCloseButton.displayName = \"ModalCloseButton\";\n\n// src/modal-footer.tsx\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nvar _ModalFooter = (0, import_system6.forwardRef)(function (props, ref) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, [\"className\"]);\n  var _className = (0, import_shared_utils5.cx)(\"chakra-modal__footer\", className);\n  var styles = _useModalStyles();\n  var footerStyles = _objectSpread({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  }, styles.footer);\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system6.chakra.footer, _objectSpread({\n    ref: ref\n  }, rest, {\n    __css: footerStyles,\n    className: _className\n  }));\n});\n_ModalFooter.displayName = \"ModalFooter\";\n\n// src/modal-header.tsx\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_react6 = require(\"react\");\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar _ModalHeader = (0, import_system7.forwardRef)(function (props, ref) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, [\"className\"]);\n  var _useModalContext7 = _useModalContext(),\n    headerId = _useModalContext7.headerId,\n    setHeaderMounted = _useModalContext7.setHeaderMounted;\n  (0, import_react6.useEffect)(function () {\n    setHeaderMounted(true);\n    return function () {\n      return setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  var _className = (0, import_shared_utils6.cx)(\"chakra-modal__header\", className);\n  var styles = _useModalStyles();\n  var headerStyles = _objectSpread({\n    flex: 0\n  }, styles.header);\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsx)(import_system7.chakra.header, _objectSpread({\n    ref: ref,\n    className: _className,\n    id: headerId\n  }, rest, {\n    __css: headerStyles\n  }));\n});\n_ModalHeader.displayName = \"ModalHeader\";\n\n// src/modal-overlay.tsx\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_transition2 = require(\"@chakra-ui/transition\");\nvar import_framer_motion4 = require(\"framer-motion\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar MotionDiv = (0, import_system8.chakra)(import_framer_motion4.motion.div);\nvar _ModalOverlay = (0, import_system8.forwardRef)(function (props, ref) {\n  var className = props.className,\n    transition = props.transition,\n    _motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, [\"className\", \"transition\", \"motionProps\"]);\n  var _className = (0, import_shared_utils7.cx)(\"chakra-modal__overlay\", className);\n  var styles = _useModalStyles();\n  var overlayStyle = _objectSpread({\n    pos: \"fixed\",\n    left: \"0\",\n    top: \"0\",\n    w: \"100vw\",\n    h: \"100vh\"\n  }, styles.overlay);\n  var _useModalContext8 = _useModalContext(),\n    motionPreset = _useModalContext8.motionPreset;\n  var defaultMotionProps = motionPreset === \"none\" ? {} : import_transition2.fadeConfig;\n  var motionProps = _motionProps || defaultMotionProps;\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsx)(MotionDiv, _objectSpread({}, motionProps, {\n    __css: overlayStyle,\n    ref: ref,\n    className: _className\n  }, rest));\n});\n_ModalOverlay.displayName = \"ModalOverlay\";\n\n// src/alert-dialog.tsx\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nfunction _AlertDialog(props) {\n  var leastDestructiveRef = props.leastDestructiveRef,\n    rest = _objectWithoutProperties(props, [\"leastDestructiveRef\"]);\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(_Modal, _objectSpread({}, rest, {\n    initialFocusRef: leastDestructiveRef\n  }));\n}\nvar _AlertDialogContent = (0, import_system9.forwardRef)(function (props, ref) {\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(_ModalContent, _objectSpread({\n    ref: ref,\n    role: \"alertdialog\"\n  }, props));\n});\n\n// src/drawer.tsx\nvar import_react_context2 = require(\"@chakra-ui/react-context\");\nvar import_system10 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime11 = require(\"react/jsx-runtime\");\nvar _ref13 = (0, import_react_context2.createContext)(),\n  _ref14 = _slicedToArray(_ref13, 2),\n  DrawerContextProvider = _ref14[0],\n  _useDrawerContext = _ref14[1];\nvar placementMap = {\n  start: {\n    ltr: \"left\",\n    rtl: \"right\"\n  },\n  end: {\n    ltr: \"right\",\n    rtl: \"left\"\n  }\n};\nfunction getDrawerPlacement(placement, dir) {\n  var _a, _b;\n  if (!placement) return;\n  return (_b = (_a = placementMap[placement]) == null ? void 0 : _a[dir]) != null ? _b : placement;\n}\nfunction _Drawer(props) {\n  var _a;\n  var isOpen = props.isOpen,\n    onClose = props.onClose,\n    _props$placement = props.placement,\n    placementProp = _props$placement === void 0 ? \"right\" : _props$placement,\n    children = props.children,\n    rest = _objectWithoutProperties(props, [\"isOpen\", \"onClose\", \"placement\", \"children\"]);\n  var theme = (0, import_system10.useTheme)();\n  var drawerStyleConfig = (_a = theme.components) == null ? void 0 : _a.Drawer;\n  var placement = getDrawerPlacement(placementProp, theme.direction);\n  return /* @__PURE__ */(0, import_jsx_runtime11.jsx)(DrawerContextProvider, {\n    value: {\n      placement: placement\n    },\n    children: /* @__PURE__ */(0, import_jsx_runtime11.jsx)(_Modal, _objectSpread({\n      isOpen: isOpen,\n      onClose: onClose,\n      styleConfig: drawerStyleConfig\n    }, rest, {\n      children: children\n    }))\n  });\n}\n\n// src/drawer-content.tsx\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_system11 = require(\"@chakra-ui/system\");\nvar import_transition3 = require(\"@chakra-ui/transition\");\nvar import_jsx_runtime12 = require(\"react/jsx-runtime\");\nvar MotionDiv2 = (0, import_system11.chakra)(import_transition3.Slide);\nvar _DrawerContent = (0, import_system11.forwardRef)(function (props, ref) {\n  var className = props.className,\n    children = props.children,\n    motionProps = props.motionProps,\n    rootProps = props.containerProps,\n    rest = _objectWithoutProperties(props, [\"className\", \"children\", \"motionProps\", \"containerProps\"]);\n  var _useModalContext9 = _useModalContext(),\n    getDialogProps = _useModalContext9.getDialogProps,\n    getDialogContainerProps = _useModalContext9.getDialogContainerProps,\n    isOpen = _useModalContext9.isOpen;\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n  var _className = (0, import_shared_utils8.cx)(\"chakra-modal__content\", className);\n  var styles = _useModalStyles();\n  var dialogStyles = _objectSpread({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n  var dialogContainerStyles = _objectSpread({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n  var _useDrawerContext2 = _useDrawerContext(),\n    placement = _useDrawerContext2.placement;\n  return /* @__PURE__ */(0, import_jsx_runtime12.jsx)(_ModalFocusScope, {\n    children: /* @__PURE__ */(0, import_jsx_runtime12.jsx)(import_system11.chakra.div, _objectSpread({}, containerProps, {\n      className: \"chakra-modal__content-container\",\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */(0, import_jsx_runtime12.jsx)(MotionDiv2, _objectSpread({\n        motionProps: motionProps,\n        direction: placement,\n        in: isOpen,\n        className: _className\n      }, dialogProps, {\n        __css: dialogStyles,\n        children: children\n      }))\n    }))\n  });\n});\n_DrawerContent.displayName = \"DrawerContent\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AlertDialog: _AlertDialog,\n  AlertDialogBody: AlertDialogBody,\n  AlertDialogCloseButton: AlertDialogCloseButton,\n  AlertDialogContent: _AlertDialogContent,\n  AlertDialogFooter: AlertDialogFooter,\n  AlertDialogHeader: AlertDialogHeader,\n  AlertDialogOverlay: AlertDialogOverlay,\n  Drawer: _Drawer,\n  DrawerBody: DrawerBody,\n  DrawerCloseButton: DrawerCloseButton,\n  DrawerContent: _DrawerContent,\n  DrawerFooter: DrawerFooter,\n  DrawerHeader: DrawerHeader,\n  DrawerOverlay: DrawerOverlay,\n  Modal: _Modal,\n  ModalBody: _ModalBody,\n  ModalCloseButton: _ModalCloseButton,\n  ModalContent: _ModalContent,\n  ModalContextProvider: _ModalContextProvider,\n  ModalFocusScope: _ModalFocusScope,\n  ModalFooter: _ModalFooter,\n  ModalHeader: _ModalHeader,\n  ModalOverlay: _ModalOverlay,\n  useDrawerContext: _useDrawerContext,\n  useModal: _useModal,\n  useModalContext: _useModalContext,\n  useModalStyles: _useModalStyles\n});","map":null,"metadata":{},"sourceType":"script"}
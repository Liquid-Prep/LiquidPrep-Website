{"ast":null,"code":"import _slicedToArray from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { isArray, isObject } from \"./chunk-Y5FGD7DM.mjs\";\n\n// src/flatten.ts\nfunction flatten(target) {\n  var maxDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  if (!isObject(target) && !Array.isArray(target) || !maxDepth) {\n    return target;\n  }\n  return Object.entries(target).reduce(function (result, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    if (isObject(value) || isArray(value)) {\n      Object.entries(flatten(value, maxDepth - 1)).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          childKey = _ref4[0],\n          childValue = _ref4[1];\n        result[\"\".concat(key, \".\").concat(childKey)] = childValue;\n      });\n    } else {\n      result[key] = value;\n    }\n    return result;\n  }, {});\n}\nexport { flatten };","map":null,"metadata":{},"sourceType":"module"}
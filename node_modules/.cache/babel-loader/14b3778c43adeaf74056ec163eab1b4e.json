{"ast":null,"code":"import { __rest } from 'tslib';\nimport { dispatchViewEvent } from '../utils/events.es.js';\nimport { inView as inView$1 } from '../../gestures/in-view.es.js';\nvar inView = {\n  isActive: function isActive(options) {\n    return Boolean(options.inView);\n  },\n  subscribe: function subscribe(element, _ref, _ref2) {\n    var enable = _ref.enable,\n      disable = _ref.disable;\n    var _ref2$inViewOptions = _ref2.inViewOptions,\n      inViewOptions = _ref2$inViewOptions === void 0 ? {} : _ref2$inViewOptions;\n    var once = inViewOptions.once,\n      viewOptions = __rest(inViewOptions, [\"once\"]);\n    return inView$1(element, function (enterEntry) {\n      enable();\n      dispatchViewEvent(element, \"viewenter\", enterEntry);\n      if (!once) {\n        return function (leaveEntry) {\n          disable();\n          dispatchViewEvent(element, \"viewleave\", leaveEntry);\n        };\n      }\n    }, viewOptions);\n  }\n};\nexport { inView };","map":null,"metadata":{},"sourceType":"module"}
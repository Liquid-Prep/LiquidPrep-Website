{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Menu: function Menu() {\n    return _Menu;\n  },\n  MenuButton: function MenuButton() {\n    return _MenuButton;\n  },\n  MenuCommand: function MenuCommand() {\n    return _MenuCommand;\n  },\n  MenuDescendantsProvider: function MenuDescendantsProvider() {\n    return _MenuDescendantsProvider;\n  },\n  MenuDivider: function MenuDivider() {\n    return _MenuDivider;\n  },\n  MenuGroup: function MenuGroup() {\n    return _MenuGroup;\n  },\n  MenuIcon: function MenuIcon() {\n    return _MenuIcon;\n  },\n  MenuItem: function MenuItem() {\n    return _MenuItem;\n  },\n  MenuItemOption: function MenuItemOption() {\n    return _MenuItemOption;\n  },\n  MenuList: function MenuList() {\n    return _MenuList;\n  },\n  MenuOptionGroup: function MenuOptionGroup() {\n    return _MenuOptionGroup;\n  },\n  useMenu: function useMenu() {\n    return _useMenu;\n  },\n  useMenuButton: function useMenuButton() {\n    return _useMenuButton;\n  },\n  useMenuContext: function useMenuContext() {\n    return _useMenuContext;\n  },\n  useMenuDescendant: function useMenuDescendant() {\n    return _useMenuDescendant;\n  },\n  useMenuDescendants: function useMenuDescendants() {\n    return _useMenuDescendants;\n  },\n  useMenuDescendantsContext: function useMenuDescendantsContext() {\n    return _useMenuDescendantsContext;\n  },\n  useMenuItem: function useMenuItem() {\n    return _useMenuItem;\n  },\n  useMenuList: function useMenuList() {\n    return _useMenuList;\n  },\n  useMenuOption: function useMenuOption() {\n    return _useMenuOption;\n  },\n  useMenuOptionGroup: function useMenuOptionGroup() {\n    return _useMenuOptionGroup;\n  },\n  useMenuPositioner: function useMenuPositioner() {\n    return _useMenuPositioner;\n  },\n  useMenuState: function useMenuState() {\n    return _useMenuState;\n  },\n  useMenuStyles: function useMenuStyles() {\n    return _useMenuStyles;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/menu.tsx\nvar import_react_context2 = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_react3 = require(\"react\");\n\n// src/use-menu.ts\nvar import_clickable = require(\"@chakra-ui/clickable\");\nvar import_descendant = require(\"@chakra-ui/descendant\");\nvar import_react_use_focus_effect = require(\"@chakra-ui/react-use-focus-effect\");\nvar import_popper = require(\"@chakra-ui/popper\");\nvar import_react_use_disclosure = require(\"@chakra-ui/react-use-disclosure\");\nvar import_react_use_outside_click = require(\"@chakra-ui/react-use-outside-click\");\nvar import_react_use_animation_state = require(\"@chakra-ui/react-use-animation-state\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_lazy_utils = require(\"@chakra-ui/lazy-utils\");\nvar import_react2 = require(\"react\");\n\n// src/use-shortcut.ts\nvar import_react = require(\"react\");\nfunction isPrintableCharacter(event) {\n  var key = event.key;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\nfunction useShortcut() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$timeout = props.timeout,\n    timeout = _props$timeout === void 0 ? 300 : _props$timeout,\n    _props$preventDefault = props.preventDefault,\n    preventDefault = _props$preventDefault === void 0 ? function () {\n      return true;\n    } : _props$preventDefault;\n  var _ref = (0, import_react.useState)([]),\n    _ref2 = _slicedToArray(_ref, 2),\n    keys = _ref2[0],\n    setKeys = _ref2[1];\n  var timeoutRef = (0, import_react.useRef)();\n  var flush = function flush() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  var clearKeysAfterDelay = function clearKeysAfterDelay() {\n    flush();\n    timeoutRef.current = setTimeout(function () {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n  (0, import_react.useEffect)(function () {\n    return flush;\n  }, []);\n  function onKeyDown(fn) {\n    return function (event) {\n      if (event.key === \"Backspace\") {\n        var keysCopy = _toConsumableArray(keys);\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n      if (isPrintableCharacter(event)) {\n        var _keysCopy = keys.concat(event.key);\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        setKeys(_keysCopy);\n        fn(_keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n  return onKeyDown;\n}\n\n// src/get-next-item-from-search.ts\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    var foundItem = items.find(function (item) {\n      return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n    });\n    return foundItem;\n  }\n  var matchingItems = items.filter(function (item) {\n    return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n  });\n  if (matchingItems.length > 0) {\n    var nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      var currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\n\n// src/use-menu.ts\nvar _ref3 = (0, import_descendant.createDescendantContext)(),\n  _ref4 = _slicedToArray(_ref3, 4),\n  _MenuDescendantsProvider = _ref4[0],\n  _useMenuDescendantsContext = _ref4[1],\n  _useMenuDescendants = _ref4[2],\n  _useMenuDescendant = _ref4[3];\nvar _ref5 = (0, import_react_context.createContext)({\n    strict: false,\n    name: \"MenuContext\"\n  }),\n  _ref6 = _slicedToArray(_ref5, 2),\n  MenuProvider = _ref6[0],\n  _useMenuContext = _ref6[1];\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n  var reactId = (0, import_react2.useId)();\n  var id = idProp || reactId;\n  return (0, import_react2.useMemo)(function () {\n    return prefixes.map(function (prefix) {\n      return \"\".concat(prefix, \"-\").concat(id);\n    });\n  }, [id, prefixes]);\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\nfunction isActiveElement(element) {\n  var doc = getOwnerDocument(element);\n  return doc.activeElement === element;\n}\nfunction _useMenu() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = props.id,\n    _props$closeOnSelect = props.closeOnSelect,\n    closeOnSelect = _props$closeOnSelect === void 0 ? true : _props$closeOnSelect,\n    _props$closeOnBlur = props.closeOnBlur,\n    closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n    initialFocusRef = props.initialFocusRef,\n    _props$autoSelect = props.autoSelect,\n    autoSelect = _props$autoSelect === void 0 ? true : _props$autoSelect,\n    isLazy = props.isLazy,\n    isOpenProp = props.isOpen,\n    defaultIsOpen = props.defaultIsOpen,\n    onCloseProp = props.onClose,\n    onOpenProp = props.onOpen,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? \"bottom-start\" : _props$placement,\n    _props$lazyBehavior = props.lazyBehavior,\n    lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n    direction = props.direction,\n    _props$computePositio = props.computePositionOnMount,\n    computePositionOnMount = _props$computePositio === void 0 ? false : _props$computePositio,\n    popperProps = _objectWithoutProperties(props, [\"id\", \"closeOnSelect\", \"closeOnBlur\", \"initialFocusRef\", \"autoSelect\", \"isLazy\", \"isOpen\", \"defaultIsOpen\", \"onClose\", \"onOpen\", \"placement\", \"lazyBehavior\", \"direction\", \"computePositionOnMount\"]);\n  var menuRef = (0, import_react2.useRef)(null);\n  var buttonRef = (0, import_react2.useRef)(null);\n  var descendants = _useMenuDescendants();\n  var focusMenu = (0, import_react2.useCallback)(function () {\n    requestAnimationFrame(function () {\n      var _a;\n      (_a = menuRef.current) == null ? void 0 : _a.focus({\n        preventScroll: false\n      });\n    });\n  }, []);\n  var focusFirstItem = (0, import_react2.useCallback)(function () {\n    var id2 = setTimeout(function () {\n      var _a;\n      if (initialFocusRef) {\n        (_a = initialFocusRef.current) == null ? void 0 : _a.focus();\n      } else {\n        var first = descendants.firstEnabled();\n        if (first) setFocusedIndex(first.index);\n      }\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants, initialFocusRef]);\n  var focusLastItem = (0, import_react2.useCallback)(function () {\n    var id2 = setTimeout(function () {\n      var last = descendants.lastEnabled();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants]);\n  var onOpenInternal = (0, import_react2.useCallback)(function () {\n    onOpenProp == null ? void 0 : onOpenProp();\n    if (autoSelect) {\n      focusFirstItem();\n    } else {\n      focusMenu();\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp]);\n  var _ref7 = (0, import_react_use_disclosure.useDisclosure)({\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpen,\n      onClose: onCloseProp,\n      onOpen: onOpenInternal\n    }),\n    isOpen = _ref7.isOpen,\n    onOpen = _ref7.onOpen,\n    onClose = _ref7.onClose,\n    onToggle = _ref7.onToggle;\n  (0, import_react_use_outside_click.useOutsideClick)({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: function handler(event) {\n      var _a;\n      if (!((_a = buttonRef.current) == null ? void 0 : _a.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  var popper = (0, import_popper.usePopper)(_objectSpread({}, popperProps, {\n    enabled: isOpen || computePositionOnMount,\n    placement: placement,\n    direction: direction\n  }));\n  var _ref8 = (0, import_react2.useState)(-1),\n    _ref9 = _slicedToArray(_ref8, 2),\n    focusedIndex = _ref9[0],\n    setFocusedIndex = _ref9[1];\n  (0, import_react_use_update_effect.useUpdateEffect)(function () {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  (0, import_react_use_focus_effect.useFocusOnHide)(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  var animationState = (0, import_react_use_animation_state.useAnimationState)({\n    isOpen: isOpen,\n    ref: menuRef\n  });\n  var _useIds = useIds(id, \"menu-button\", \"menu-list\"),\n    _useIds2 = _slicedToArray(_useIds, 2),\n    buttonId = _useIds2[0],\n    menuId = _useIds2[1];\n  var openAndFocusMenu = (0, import_react2.useCallback)(function () {\n    onOpen();\n    focusMenu();\n  }, [onOpen, focusMenu]);\n  var timeoutIds = (0, import_react2.useRef)( /* @__PURE__ */new Set([]));\n  useUnmountEffect(function () {\n    timeoutIds.current.forEach(function (id2) {\n      return clearTimeout(id2);\n    });\n    timeoutIds.current.clear();\n  });\n  var openAndFocusFirstItem = (0, import_react2.useCallback)(function () {\n    onOpen();\n    focusFirstItem();\n  }, [focusFirstItem, onOpen]);\n  var openAndFocusLastItem = (0, import_react2.useCallback)(function () {\n    onOpen();\n    focusLastItem();\n  }, [onOpen, focusLastItem]);\n  var refocus = (0, import_react2.useCallback)(function () {\n    var _a, _b;\n    var doc = getOwnerDocument(menuRef.current);\n    var hasFocusWithin = (_a = menuRef.current) == null ? void 0 : _a.contains(doc.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var node = (_b = descendants.item(focusedIndex)) == null ? void 0 : _b.node;\n    node == null ? void 0 : node.focus();\n  }, [isOpen, focusedIndex, descendants]);\n  var rafId = (0, import_react2.useRef)(null);\n  return {\n    openAndFocusMenu: openAndFocusMenu,\n    openAndFocusFirstItem: openAndFocusFirstItem,\n    openAndFocusLastItem: openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants: descendants,\n    popper: popper,\n    buttonId: buttonId,\n    menuId: menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen: isOpen,\n    onToggle: onToggle,\n    onOpen: onOpen,\n    onClose: onClose,\n    menuRef: menuRef,\n    buttonRef: buttonRef,\n    focusedIndex: focusedIndex,\n    closeOnSelect: closeOnSelect,\n    closeOnBlur: closeOnBlur,\n    autoSelect: autoSelect,\n    setFocusedIndex: setFocusedIndex,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    initialFocusRef: initialFocusRef,\n    rafId: rafId\n  };\n}\nfunction _useMenuButton() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var externalRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var menu = _useMenuContext();\n  var onToggle = menu.onToggle,\n    popper = menu.popper,\n    openAndFocusFirstItem = menu.openAndFocusFirstItem,\n    openAndFocusLastItem = menu.openAndFocusLastItem;\n  var onKeyDown = (0, import_react2.useCallback)(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n  return _objectSpread({}, props, {\n    ref: (0, import_react_use_merge_refs.mergeRefs)(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": (0, import_shared_utils.dataAttr)(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: (0, import_shared_utils.callAllHandlers)(props.onClick, onToggle),\n    onKeyDown: (0, import_shared_utils.callAllHandlers)(props.onKeyDown, onKeyDown)\n  });\n}\nfunction isTargetMenuItem(target) {\n  var _a;\n  return isHTMLElement(target) && !!((_a = target == null ? void 0 : target.getAttribute(\"role\")) == null ? void 0 : _a.startsWith(\"menuitem\"));\n}\nfunction _useMenuList() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var menu = _useMenuContext();\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n  var focusedIndex = menu.focusedIndex,\n    setFocusedIndex = menu.setFocusedIndex,\n    menuRef = menu.menuRef,\n    isOpen = menu.isOpen,\n    onClose = menu.onClose,\n    menuId = menu.menuId,\n    isLazy = menu.isLazy,\n    lazyBehavior = menu.lazyBehavior,\n    animated = menu.unstable__animationState;\n  var descendants = _useMenuDescendantsContext();\n  var createTypeaheadHandler = useShortcut({\n    preventDefault: function preventDefault(event) {\n      return event.key !== \" \" && isTargetMenuItem(event.target);\n    }\n  });\n  var onKeyDown = (0, import_react2.useCallback)(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      Tab: function Tab(event2) {\n        return event2.preventDefault();\n      },\n      Escape: onClose,\n      ArrowDown: function ArrowDown() {\n        var next = descendants.nextEnabled(focusedIndex);\n        if (next) setFocusedIndex(next.index);\n      },\n      ArrowUp: function ArrowUp() {\n        var prev = descendants.prevEnabled(focusedIndex);\n        if (prev) setFocusedIndex(prev.index);\n      }\n    };\n    var fn = keyMap[eventKey];\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n    var onTypeahead = createTypeaheadHandler(function (character) {\n      var nextItem = getNextItemFromSearch(descendants.values(), character, function (item) {\n        var _a, _b;\n        return (_b = (_a = item == null ? void 0 : item.node) == null ? void 0 : _a.textContent) != null ? _b : \"\";\n      }, descendants.item(focusedIndex));\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem.node);\n        setFocusedIndex(index);\n      }\n    });\n    if (isTargetMenuItem(event.target)) {\n      onTypeahead(event);\n    }\n  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);\n  var hasBeenOpened = (0, import_react2.useRef)(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  var shouldRenderChildren = (0, import_lazy_utils.lazyDisclosure)({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  return _objectSpread({}, props, {\n    ref: (0, import_react_use_merge_refs.mergeRefs)(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _objectSpread({}, props.style, {\n      transformOrigin: \"var(--popper-transform-origin)\"\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: (0, import_shared_utils.callAllHandlers)(props.onKeyDown, onKeyDown)\n  });\n}\nfunction _useMenuPositioner() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _useMenuContext2 = _useMenuContext(),\n    popper = _useMenuContext2.popper,\n    isOpen = _useMenuContext2.isOpen;\n  return popper.getPopperProps(_objectSpread({}, props, {\n    style: _objectSpread({\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }, props.style)\n  }));\n}\nfunction _useMenuItem() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var externalRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var onMouseEnterProp = props.onMouseEnter,\n    onMouseMoveProp = props.onMouseMove,\n    onMouseLeaveProp = props.onMouseLeave,\n    onClickProp = props.onClick,\n    onFocusProp = props.onFocus,\n    isDisabled = props.isDisabled,\n    isFocusable = props.isFocusable,\n    closeOnSelect = props.closeOnSelect,\n    typeProp = props.type,\n    htmlProps = _objectWithoutProperties(props, [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"onFocus\", \"isDisabled\", \"isFocusable\", \"closeOnSelect\", \"type\"]);\n  var menu = _useMenuContext();\n  var setFocusedIndex = menu.setFocusedIndex,\n    focusedIndex = menu.focusedIndex,\n    menuCloseOnSelect = menu.closeOnSelect,\n    onClose = menu.onClose,\n    menuRef = menu.menuRef,\n    isOpen = menu.isOpen,\n    menuId = menu.menuId,\n    rafId = menu.rafId;\n  var ref = (0, import_react2.useRef)(null);\n  var id = \"\".concat(menuId, \"-menuitem-\").concat((0, import_react2.useId)());\n  var _useMenuDescendant2 = _useMenuDescendant({\n      disabled: isDisabled && !isFocusable\n    }),\n    index = _useMenuDescendant2.index,\n    register = _useMenuDescendant2.register;\n  var onMouseEnter = (0, import_react2.useCallback)(function (event) {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = (0, import_react2.useCallback)(function (event) {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n    if (ref.current && !isActiveElement(ref.current)) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = (0, import_react2.useCallback)(function (event) {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = (0, import_react2.useCallback)(function (event) {\n    onClickProp == null ? void 0 : onClickProp(event);\n    if (!isTargetMenuItem(event.currentTarget)) return;\n    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);\n  var onFocus = (0, import_react2.useCallback)(function (event) {\n    onFocusProp == null ? void 0 : onFocusProp(event);\n    setFocusedIndex(index);\n  }, [setFocusedIndex, onFocusProp, index]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  (0, import_react_use_update_effect.useUpdateEffect)(function () {\n    if (!isOpen) return;\n    if (isFocused && !trulyDisabled && ref.current) {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n      rafId.current = requestAnimationFrame(function () {\n        var _a;\n        (_a = ref.current) == null ? void 0 : _a.focus();\n        rafId.current = null;\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus();\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var clickableProps = (0, import_clickable.useClickable)({\n    onClick: onClick,\n    onFocus: onFocus,\n    onMouseEnter: onMouseEnter,\n    onMouseMove: onMouseMove,\n    onMouseLeave: onMouseLeave,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(register, ref, externalRef),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable\n  });\n  return _objectSpread({}, htmlProps, clickableProps, {\n    type: typeProp != null ? typeProp : clickableProps.type,\n    id: id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\nfunction _useMenuOption() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var _props$type = props.type,\n    type = _props$type === void 0 ? \"radio\" : _props$type,\n    isChecked = props.isChecked,\n    rest = _objectWithoutProperties(props, [\"type\", \"isChecked\"]);\n  var ownProps = _useMenuItem(rest, ref);\n  return _objectSpread({}, ownProps, {\n    role: \"menuitem\".concat(type),\n    \"aria-checked\": isChecked\n  });\n}\nfunction _useMenuOptionGroup() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var children = props.children,\n    _props$type2 = props.type,\n    type = _props$type2 === void 0 ? \"radio\" : _props$type2,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    onChangeProp = props.onChange,\n    htmlProps = _objectWithoutProperties(props, [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"]);\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var _ref10 = (0, import_react_use_controllable_state.useControllableState)({\n      defaultValue: defaultValue != null ? defaultValue : fallback,\n      value: valueProp,\n      onChange: onChangeProp\n    }),\n    _ref11 = _slicedToArray(_ref10, 2),\n    value = _ref11[0],\n    setValue = _ref11[1];\n  var onChange = (0, import_react2.useCallback)(function (selectedValue) {\n    if (type === \"radio\" && typeof value === \"string\") {\n      setValue(selectedValue);\n    }\n    if (type === \"checkbox\" && Array.isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? value.filter(function (item) {\n        return item !== selectedValue;\n      }) : value.concat(selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = (0, import_react_children_utils.getValidChildren)(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type.id !== \"MenuItemOption\") return child;\n    var onClick = function onClick(event) {\n      var _a, _b;\n      onChange(child.props.value);\n      (_b = (_a = child.props).onClick) == null ? void 0 : _b.call(_a, event);\n    };\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return (0, import_react2.cloneElement)(child, {\n      type: type,\n      onClick: onClick,\n      isChecked: isChecked\n    });\n  });\n  return _objectSpread({}, htmlProps, {\n    children: clones\n  });\n}\nfunction _useMenuState() {\n  var _useMenuContext3 = _useMenuContext(),\n    isOpen = _useMenuContext3.isOpen,\n    onClose = _useMenuContext3.onClose;\n  return {\n    isOpen: isOpen,\n    onClose: onClose\n  };\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el)) return false;\n  var win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction useUnmountEffect(fn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return (0, import_react2.useEffect)(function () {\n    return function () {\n      return fn();\n    };\n  }, deps);\n}\n\n// src/menu.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar _ref12 = (0, import_react_context2.createContext)({\n    name: \"MenuStylesContext\",\n    errorMessage: \"useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Menu />\\\" \"\n  }),\n  _ref13 = _slicedToArray(_ref12, 2),\n  MenuStylesProvider = _ref13[0],\n  _useMenuStyles = _ref13[1];\nvar _Menu = function _Menu(props) {\n  var children = props.children;\n  var styles = (0, import_system.useMultiStyleConfig)(\"Menu\", props);\n  var ownProps = (0, import_system.omitThemingProps)(props);\n  var _ref14 = (0, import_system.useTheme)(),\n    direction = _ref14.direction;\n  var _useMenu2 = _useMenu(_objectSpread({}, ownProps, {\n      direction: direction\n    })),\n    descendants = _useMenu2.descendants,\n    ctx = _objectWithoutProperties(_useMenu2, [\"descendants\"]);\n  var context = (0, import_react3.useMemo)(function () {\n    return ctx;\n  }, [ctx]);\n  var isOpen = context.isOpen,\n    onClose = context.onClose,\n    forceUpdate = context.forceUpdate;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(_MenuDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuProvider, {\n      value: context,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuStylesProvider, {\n        value: styles,\n        children: (0, import_shared_utils2.runIfFn)(children, {\n          isOpen: isOpen,\n          onClose: onClose,\n          forceUpdate: forceUpdate\n        })\n      })\n    })\n  });\n};\n_Menu.displayName = \"Menu\";\n\n// src/menu-button.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar StyledMenuButton = (0, import_system2.forwardRef)(function (props, ref) {\n  var styles = _useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.button, _objectSpread({\n    ref: ref\n  }, props, {\n    __css: _objectSpread({\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      outline: 0\n    }, styles.button)\n  }));\n});\nvar _MenuButton = (0, import_system2.forwardRef)(function (props, ref) {\n  var children = props.children,\n    As = props.as,\n    rest = _objectWithoutProperties(props, [\"children\", \"as\"]);\n  var buttonProps = _useMenuButton(rest, ref);\n  var Element = As || StyledMenuButton;\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(Element, _objectSpread({}, buttonProps, {\n    className: (0, import_shared_utils3.cx)(\"chakra-menu__menu-button\", props.className),\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.span, {\n      __css: {\n        pointerEvents: \"none\",\n        flex: \"1 1 auto\",\n        minW: 0\n      },\n      children: props.children\n    })\n  }));\n});\n_MenuButton.displayName = \"MenuButton\";\n\n// src/menu-command.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar _MenuCommand = (0, import_system3.forwardRef)(function (props, ref) {\n  var styles = _useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_system3.chakra.span, _objectSpread({\n    ref: ref\n  }, props, {\n    __css: styles.command,\n    className: \"chakra-menu__command\"\n  }));\n});\n_MenuCommand.displayName = \"MenuCommand\";\n\n// src/menu-divider.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar _MenuDivider = function _MenuDivider(props) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, [\"className\"]);\n  var styles = _useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.chakra.hr, _objectSpread({\n    \"aria-orientation\": \"horizontal\",\n    className: (0, import_shared_utils4.cx)(\"chakra-menu__divider\", className)\n  }, rest, {\n    __css: styles.divider\n  }));\n};\n_MenuDivider.displayName = \"MenuDivider\";\n\n// src/menu-group.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar _MenuGroup = (0, import_system5.forwardRef)(function (props, ref) {\n  var title = props.title,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutProperties(props, [\"title\", \"children\", \"className\"]);\n  var _className = (0, import_shared_utils5.cx)(\"chakra-menu__group__title\", className);\n  var styles = _useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsxs)(\"div\", {\n    ref: ref,\n    className: \"chakra-menu__group\",\n    role: \"group\",\n    children: [title && /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system5.chakra.p, _objectSpread({\n      className: _className\n    }, rest, {\n      __css: styles.groupTitle,\n      children: title\n    })), children]\n  });\n});\n_MenuGroup.displayName = \"MenuGroup\";\n\n// src/menu-icon.tsx\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_react4 = require(\"react\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar _MenuIcon = function _MenuIcon(props) {\n  var className = props.className,\n    children = props.children,\n    rest = _objectWithoutProperties(props, [\"className\", \"children\"]);\n  var child = import_react4.Children.only(children);\n  var clone = (0, import_react4.isValidElement)(child) ? (0, import_react4.cloneElement)(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: (0, import_shared_utils6.cx)(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n  var _className = (0, import_shared_utils6.cx)(\"chakra-menu__icon-wrapper\", className);\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.span, _objectSpread({\n    className: _className\n  }, rest, {\n    __css: {\n      flexShrink: 0\n    },\n    children: clone\n  }));\n};\n_MenuIcon.displayName = \"MenuIcon\";\n\n// src/menu-item.tsx\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\n\n// src/styled-menu-item.tsx\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_react5 = require(\"react\");\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nvar StyledMenuItem = (0, import_system7.forwardRef)(function (props, ref) {\n  var type = props.type,\n    rest = _objectWithoutProperties(props, [\"type\"]);\n  var styles = _useMenuStyles();\n  var btnType = rest.as || type ? type != null ? type : void 0 : \"button\";\n  var buttonStyles = (0, import_react5.useMemo)(function () {\n    return _objectSpread({\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0\n    }, styles.item);\n  }, [styles.item]);\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system7.chakra.button, _objectSpread({\n    ref: ref,\n    type: btnType\n  }, rest, {\n    __css: buttonStyles\n  }));\n});\n\n// src/menu-item.tsx\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar _MenuItem = (0, import_system8.forwardRef)(function (props, ref) {\n  var icon = props.icon,\n    _props$iconSpacing = props.iconSpacing,\n    iconSpacing = _props$iconSpacing === void 0 ? \"0.75rem\" : _props$iconSpacing,\n    command = props.command,\n    _props$commandSpacing = props.commandSpacing,\n    commandSpacing = _props$commandSpacing === void 0 ? \"0.75rem\" : _props$commandSpacing,\n    children = props.children,\n    rest = _objectWithoutProperties(props, [\"icon\", \"iconSpacing\", \"command\", \"commandSpacing\", \"children\"]);\n  var menuitemProps = _useMenuItem(rest, ref);\n  var shouldWrap = icon || command;\n  var _children = shouldWrap ? /* @__PURE__ */(0, import_jsx_runtime8.jsx)(\"span\", {\n    style: {\n      pointerEvents: \"none\",\n      flex: 1\n    },\n    children: children\n  }) : children;\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsxs)(StyledMenuItem, _objectSpread({}, menuitemProps, {\n    className: (0, import_shared_utils7.cx)(\"chakra-menu__menuitem\", menuitemProps.className),\n    children: [icon && /* @__PURE__ */(0, import_jsx_runtime8.jsx)(_MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      children: icon\n    }), _children, command && /* @__PURE__ */(0, import_jsx_runtime8.jsx)(_MenuCommand, {\n      marginStart: commandSpacing,\n      children: command\n    })]\n  }));\n});\n_MenuItem.displayName = \"MenuItem\";\n\n// src/menu-item-option.tsx\nvar import_system9 = require(\"@chakra-ui/system\");\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar CheckIcon = function CheckIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsx)(\"svg\", _objectSpread({\n    viewBox: \"0 0 14 14\",\n    width: \"1em\",\n    height: \"1em\"\n  }, props, {\n    children: /* @__PURE__ */(0, import_jsx_runtime9.jsx)(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    })\n  }));\n};\nvar _MenuItemOption = (0, import_system9.forwardRef)(function (props, ref) {\n  var icon = props.icon,\n    _props$iconSpacing2 = props.iconSpacing,\n    iconSpacing = _props$iconSpacing2 === void 0 ? \"0.75rem\" : _props$iconSpacing2,\n    rest = _objectWithoutProperties(props, [\"icon\", \"iconSpacing\"]);\n  var optionProps = _useMenuOption(rest, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsxs)(StyledMenuItem, _objectSpread({}, optionProps, {\n    className: (0, import_shared_utils8.cx)(\"chakra-menu__menuitem-option\", rest.className),\n    children: [icon !== null && /* @__PURE__ */(0, import_jsx_runtime9.jsx)(_MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      opacity: props.isChecked ? 1 : 0,\n      children: icon || /* @__PURE__ */(0, import_jsx_runtime9.jsx)(CheckIcon, {})\n    }), /* @__PURE__ */(0, import_jsx_runtime9.jsx)(\"span\", {\n      style: {\n        flex: 1\n      },\n      children: optionProps.children\n    })]\n  }));\n});\n_MenuItemOption.id = \"MenuItemOption\";\n_MenuItemOption.displayName = \"MenuItemOption\";\n\n// src/menu-list.tsx\nvar import_shared_utils9 = require(\"@chakra-ui/shared-utils\");\nvar import_system10 = require(\"@chakra-ui/system\");\nvar import_framer_motion = require(\"framer-motion\");\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nvar motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n};\nvar MenuTransition = (0, import_system10.chakra)(import_framer_motion.motion.div);\nvar _MenuList = (0, import_system10.forwardRef)(function MenuList2(props, ref) {\n  var _a, _b;\n  var rootProps = props.rootProps,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, [\"rootProps\", \"motionProps\"]);\n  var _useMenuContext4 = _useMenuContext(),\n    isOpen = _useMenuContext4.isOpen,\n    onTransitionEnd = _useMenuContext4.onTransitionEnd,\n    animated = _useMenuContext4.unstable__animationState;\n  var listProps = _useMenuList(rest, ref);\n  var positionerProps = _useMenuPositioner(rootProps);\n  var styles = _useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(import_system10.chakra.div, _objectSpread({}, positionerProps, {\n    __css: {\n      zIndex: (_b = props.zIndex) != null ? _b : (_a = styles.list) == null ? void 0 : _a.zIndex\n    },\n    children: /* @__PURE__ */(0, import_jsx_runtime10.jsx)(MenuTransition, _objectSpread({\n      variants: motionVariants,\n      initial: false,\n      animate: isOpen ? \"enter\" : \"exit\",\n      __css: _objectSpread({\n        outline: 0\n      }, styles.list)\n    }, motionProps, {\n      className: (0, import_shared_utils9.cx)(\"chakra-menu__menu-list\", listProps.className)\n    }, listProps, {\n      onUpdate: onTransitionEnd,\n      onAnimationComplete: (0, import_shared_utils9.callAll)(animated.onComplete, listProps.onAnimationComplete)\n    }))\n  }));\n});\n_MenuList.displayName = \"MenuList\";\n\n// src/menu-option-group.tsx\nvar import_shared_utils10 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime11 = require(\"react/jsx-runtime\");\nvar _MenuOptionGroup = function _MenuOptionGroup(props) {\n  var className = props.className,\n    title = props.title,\n    rest = _objectWithoutProperties(props, [\"className\", \"title\"]);\n  var ownProps = _useMenuOptionGroup(rest);\n  return /* @__PURE__ */(0, import_jsx_runtime11.jsx)(_MenuGroup, _objectSpread({\n    title: title,\n    className: (0, import_shared_utils10.cx)(\"chakra-menu__option-group\", className)\n  }, ownProps));\n};\n_MenuOptionGroup.displayName = \"MenuOptionGroup\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Menu: _Menu,\n  MenuButton: _MenuButton,\n  MenuCommand: _MenuCommand,\n  MenuDescendantsProvider: _MenuDescendantsProvider,\n  MenuDivider: _MenuDivider,\n  MenuGroup: _MenuGroup,\n  MenuIcon: _MenuIcon,\n  MenuItem: _MenuItem,\n  MenuItemOption: _MenuItemOption,\n  MenuList: _MenuList,\n  MenuOptionGroup: _MenuOptionGroup,\n  useMenu: _useMenu,\n  useMenuButton: _useMenuButton,\n  useMenuContext: _useMenuContext,\n  useMenuDescendant: _useMenuDescendant,\n  useMenuDescendants: _useMenuDescendants,\n  useMenuDescendantsContext: _useMenuDescendantsContext,\n  useMenuItem: _useMenuItem,\n  useMenuList: _useMenuList,\n  useMenuOption: _useMenuOption,\n  useMenuOptionGroup: _useMenuOptionGroup,\n  useMenuPositioner: _useMenuPositioner,\n  useMenuState: _useMenuState,\n  useMenuStyles: _useMenuStyles\n});","map":null,"metadata":{},"sourceType":"script"}
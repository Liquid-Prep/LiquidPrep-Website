{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Popover: function Popover() {\n    return _Popover;\n  },\n  PopoverAnchor: function PopoverAnchor() {\n    return _PopoverAnchor;\n  },\n  PopoverArrow: function PopoverArrow() {\n    return _PopoverArrow;\n  },\n  PopoverBody: function PopoverBody() {\n    return _PopoverBody;\n  },\n  PopoverCloseButton: function PopoverCloseButton() {\n    return _PopoverCloseButton;\n  },\n  PopoverContent: function PopoverContent() {\n    return _PopoverContent;\n  },\n  PopoverFooter: function PopoverFooter() {\n    return _PopoverFooter;\n  },\n  PopoverHeader: function PopoverHeader() {\n    return _PopoverHeader;\n  },\n  PopoverTrigger: function PopoverTrigger() {\n    return _PopoverTrigger;\n  },\n  usePopover: function usePopover() {\n    return _usePopover;\n  },\n  usePopoverContext: function usePopoverContext() {\n    return _usePopoverContext;\n  },\n  usePopoverStyles: function usePopoverStyles() {\n    return _usePopoverStyles;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/popover.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\n\n// src/popover-context.ts\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar _ref2 = (0, import_react_context.createContext)({\n    name: \"PopoverContext\",\n    errorMessage: \"usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`\"\n  }),\n  _ref3 = _slicedToArray(_ref2, 2),\n  PopoverProvider = _ref3[0],\n  _usePopoverContext = _ref3[1];\nvar _ref4 = (0, import_react_context.createContext)({\n    name: \"PopoverStylesContext\",\n    errorMessage: \"usePopoverStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Popover />\\\" \"\n  }),\n  _ref5 = _slicedToArray(_ref4, 2),\n  PopoverStylesProvider = _ref5[0],\n  _usePopoverStyles = _ref5[1]; // src/use-popover.ts\nvar import_react_use_animation_state = require(\"@chakra-ui/react-use-animation-state\");\nvar import_react_use_focus_on_pointer_down = require(\"@chakra-ui/react-use-focus-on-pointer-down\");\nvar import_react_use_focus_effect = require(\"@chakra-ui/react-use-focus-effect\");\nvar import_react_use_disclosure = require(\"@chakra-ui/react-use-disclosure\");\nvar import_popper = require(\"@chakra-ui/popper\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_lazy_utils = require(\"@chakra-ui/lazy-utils\");\nvar import_react = require(\"react\");\nvar TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nfunction _usePopover() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$closeOnBlur = props.closeOnBlur,\n    closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n    _props$closeOnEsc = props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    initialFocusRef = props.initialFocusRef,\n    id = props.id,\n    _props$returnFocusOnC = props.returnFocusOnClose,\n    returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    arrowSize = props.arrowSize,\n    arrowShadowColor = props.arrowShadowColor,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? TRIGGER.click : _props$trigger,\n    _props$openDelay = props.openDelay,\n    openDelay = _props$openDelay === void 0 ? 200 : _props$openDelay,\n    _props$closeDelay = props.closeDelay,\n    closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay,\n    isLazy = props.isLazy,\n    _props$lazyBehavior = props.lazyBehavior,\n    lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n    computePositionOnMount = props.computePositionOnMount,\n    popperProps = _objectWithoutProperties(props, [\"closeOnBlur\", \"closeOnEsc\", \"initialFocusRef\", \"id\", \"returnFocusOnClose\", \"autoFocus\", \"arrowSize\", \"arrowShadowColor\", \"trigger\", \"openDelay\", \"closeDelay\", \"isLazy\", \"lazyBehavior\", \"computePositionOnMount\"]);\n  var _ref6 = (0, import_react_use_disclosure.useDisclosure)(props),\n    isOpen = _ref6.isOpen,\n    onClose = _ref6.onClose,\n    onOpen = _ref6.onOpen,\n    onToggle = _ref6.onToggle;\n  var anchorRef = (0, import_react.useRef)(null);\n  var triggerRef = (0, import_react.useRef)(null);\n  var popoverRef = (0, import_react.useRef)(null);\n  var isHoveringRef = (0, import_react.useRef)(false);\n  var hasBeenOpened = (0, import_react.useRef)(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  var _ref7 = (0, import_react.useState)(false),\n    _ref8 = _slicedToArray(_ref7, 2),\n    hasHeader = _ref8[0],\n    setHasHeader = _ref8[1];\n  var _ref9 = (0, import_react.useState)(false),\n    _ref10 = _slicedToArray(_ref9, 2),\n    hasBody = _ref10[0],\n    setHasBody = _ref10[1];\n  var uuid = (0, import_react.useId)();\n  var uid = id != null ? id : uuid;\n  var _map = [\"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\"].map(function (id2) {\n      return \"\".concat(id2, \"-\").concat(uid);\n    }),\n    _map2 = _slicedToArray(_map, 4),\n    triggerId = _map2[0],\n    popoverId = _map2[1],\n    headerId = _map2[2],\n    bodyId = _map2[3];\n  var _ref11 = (0, import_popper.usePopper)(_objectSpread({}, popperProps, {\n      enabled: isOpen || !!computePositionOnMount\n    })),\n    referenceRef = _ref11.referenceRef,\n    getArrowProps = _ref11.getArrowProps,\n    getPopperProps = _ref11.getPopperProps,\n    getArrowInnerProps = _ref11.getArrowInnerProps,\n    forceUpdate = _ref11.forceUpdate;\n  var animated = (0, import_react_use_animation_state.useAnimationState)({\n    isOpen: isOpen,\n    ref: popoverRef\n  });\n  (0, import_react_use_focus_on_pointer_down.useFocusOnPointerDown)({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  (0, import_react_use_focus_effect.useFocusOnHide)(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click\n  });\n  (0, import_react_use_focus_effect.useFocusOnShow)(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  var shouldRenderChildren = (0, import_lazy_utils.lazyDisclosure)({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  var getPopoverProps = (0, import_react.useCallback)(function () {\n    var _objectSpread2;\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var popoverProps = _objectSpread({}, props2, {\n      style: _objectSpread({}, props2.style, (_objectSpread2 = {\n        transformOrigin: import_popper.popperCSSVars.transformOrigin.varRef\n      }, _defineProperty(_objectSpread2, import_popper.popperCSSVars.arrowSize.var, arrowSize ? \"\".concat(arrowSize, \"px\") : void 0), _defineProperty(_objectSpread2, import_popper.popperCSSVars.arrowShadowColor.var, arrowShadowColor), _objectSpread2)),\n      ref: (0, import_react_use_merge_refs.mergeRefs)(popoverRef, _ref),\n      children: shouldRenderChildren ? props2.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: (0, import_shared_utils.callAllHandlers)(props2.onKeyDown, function (event) {\n        if (closeOnEsc && event.key === \"Escape\") {\n          onClose();\n        }\n      }),\n      onBlur: (0, import_shared_utils.callAllHandlers)(props2.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var targetIsPopover = contains(popoverRef.current, relatedTarget);\n        var targetIsTrigger = contains(triggerRef.current, relatedTarget);\n        var isValidBlur = !targetIsPopover && !targetIsTrigger;\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : void 0,\n      \"aria-describedby\": hasBody ? bodyId : void 0\n    });\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = (0, import_shared_utils.callAllHandlers)(props2.onMouseEnter, function () {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = (0, import_shared_utils.callAllHandlers)(props2.onMouseLeave, function (event) {\n        if (event.nativeEvent.relatedTarget === null) {\n          return;\n        }\n        isHoveringRef.current = false;\n        setTimeout(function () {\n          return onClose();\n        }, closeDelay);\n      });\n    }\n    return popoverProps;\n  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);\n  var getPopoverPositionerProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return getPopperProps(_objectSpread({}, props2, {\n      style: _objectSpread({\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }, props2.style)\n    }), forwardedRef);\n  }, [isOpen, getPopperProps]);\n  var getAnchorProps = (0, import_react.useCallback)(function (props2) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs.mergeRefs)(_ref, anchorRef, referenceRef)\n    });\n  }, [anchorRef, referenceRef]);\n  var openTimeout = (0, import_react.useRef)();\n  var closeTimeout = (0, import_react.useRef)();\n  var maybeReferenceRef = (0, import_react.useCallback)(function (node) {\n    if (anchorRef.current == null) {\n      referenceRef(node);\n    }\n  }, [referenceRef]);\n  var getTriggerProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var triggerProps = _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs.mergeRefs)(triggerRef, _ref, maybeReferenceRef),\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = (0, import_shared_utils.callAllHandlers)(props2.onClick, onToggle);\n    }\n    if (trigger === TRIGGER.hover) {\n      triggerProps.onFocus = (0, import_shared_utils.callAllHandlers)(props2.onFocus, function () {\n        if (openTimeout.current === void 0) {\n          onOpen();\n        }\n      });\n      triggerProps.onBlur = (0, import_shared_utils.callAllHandlers)(props2.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var isValidBlur = !contains(popoverRef.current, relatedTarget);\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      });\n      triggerProps.onKeyDown = (0, import_shared_utils.callAllHandlers)(props2.onKeyDown, function (event) {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = (0, import_shared_utils.callAllHandlers)(props2.onMouseEnter, function () {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(function () {\n          return onOpen();\n        }, openDelay);\n      });\n      triggerProps.onMouseLeave = (0, import_shared_utils.callAllHandlers)(props2.onMouseLeave, function () {\n        isHoveringRef.current = false;\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = void 0;\n        }\n        closeTimeout.current = window.setTimeout(function () {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n    return triggerProps;\n  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);\n  (0, import_react.useEffect)(function () {\n    return function () {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  var getHeaderProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      id: headerId,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, function (node) {\n        setHasHeader(!!node);\n      })\n    });\n  }, [headerId]);\n  var getBodyProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      id: bodyId,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, function (node) {\n        setHasBody(!!node);\n      })\n    });\n  }, [bodyId]);\n  return {\n    forceUpdate: forceUpdate,\n    isOpen: isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose: onClose,\n    getAnchorProps: getAnchorProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getPopoverPositionerProps: getPopoverPositionerProps,\n    getPopoverProps: getPopoverProps,\n    getTriggerProps: getTriggerProps,\n    getHeaderProps: getHeaderProps,\n    getBodyProps: getBodyProps\n  };\n}\nfunction contains(parent, child) {\n  return parent === child || (parent == null ? void 0 : parent.contains(child));\n}\nfunction getRelatedTarget(event) {\n  var _a;\n  var activeEl = event.currentTarget.ownerDocument.activeElement;\n  return (_a = event.relatedTarget) != null ? _a : activeEl;\n}\n\n// src/popover.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction _Popover(props) {\n  var styles = (0, import_system.useMultiStyleConfig)(\"Popover\", props);\n  var _ref12 = (0, import_system.omitThemingProps)(props),\n    children = _ref12.children,\n    rest = _objectWithoutProperties(_ref12, [\"children\"]);\n  var theme = (0, import_system.useTheme)();\n  var context = _usePopover(_objectSpread({}, rest, {\n    direction: theme.direction\n  }));\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverProvider, {\n    value: context,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(PopoverStylesProvider, {\n      value: styles,\n      children: (0, import_shared_utils2.runIfFn)(children, {\n        isOpen: context.isOpen,\n        onClose: context.onClose,\n        forceUpdate: context.forceUpdate\n      })\n    })\n  });\n}\n_Popover.displayName = \"Popover\";\n\n// src/popover-anchor.tsx\nvar import_react2 = require(\"react\");\nfunction _PopoverAnchor(props) {\n  var child = import_react2.Children.only(props.children);\n  var _usePopoverContext2 = _usePopoverContext(),\n    getAnchorProps = _usePopoverContext2.getAnchorProps;\n  return (0, import_react2.cloneElement)(child, getAnchorProps(child.props, child.ref));\n}\n_PopoverAnchor.displayName = \"PopoverAnchor\";\n\n// src/popover-arrow.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction _PopoverArrow(props) {\n  var _a;\n  var bg = props.bg,\n    bgColor = props.bgColor,\n    backgroundColor = props.backgroundColor,\n    shadow = props.shadow,\n    boxShadow = props.boxShadow;\n  var _usePopoverContext3 = _usePopoverContext(),\n    getArrowProps = _usePopoverContext3.getArrowProps,\n    getArrowInnerProps = _usePopoverContext3.getArrowInnerProps;\n  var styles = _usePopoverStyles();\n  var arrowBg = (_a = bg != null ? bg : bgColor) != null ? _a : backgroundColor;\n  var arrowShadow = shadow != null ? shadow : boxShadow;\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, _objectSpread({}, getArrowProps(), {\n    className: \"chakra-popover__arrow-positioner\",\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, _objectSpread({\n      className: (0, import_shared_utils3.cx)(\"chakra-popover__arrow\", props.className)\n    }, getArrowInnerProps(props), {\n      __css: _objectSpread({\n        \"--popper-arrow-bg\": arrowBg ? \"colors.\".concat(arrowBg, \", \").concat(arrowBg) : void 0,\n        \"--popper-arrow-shadow\": arrowShadow ? \"shadows.\".concat(arrowShadow, \", \").concat(arrowShadow) : void 0\n      }, styles.arrow)\n    }))\n  }));\n}\n_PopoverArrow.displayName = \"PopoverArrow\";\n\n// src/popover-body.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar _PopoverBody = (0, import_system3.forwardRef)(function PopoverBody2(props, ref) {\n  var _usePopoverContext4 = _usePopoverContext(),\n    getBodyProps = _usePopoverContext4.getBodyProps;\n  var styles = _usePopoverStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_system3.chakra.div, _objectSpread({}, getBodyProps(props, ref), {\n    className: (0, import_shared_utils4.cx)(\"chakra-popover__body\", props.className),\n    __css: styles.body\n  }));\n});\n_PopoverBody.displayName = \"PopoverBody\";\n\n// src/popover-close-button.tsx\nvar import_close_button = require(\"@chakra-ui/close-button\");\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar _PopoverCloseButton = (0, import_system4.forwardRef)(function PopoverCloseButton2(props, ref) {\n  var _usePopoverContext5 = _usePopoverContext(),\n    onClose = _usePopoverContext5.onClose;\n  var styles = _usePopoverStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_close_button.CloseButton, _objectSpread({\n    size: \"sm\",\n    onClick: onClose,\n    className: (0, import_shared_utils5.cx)(\"chakra-popover__close-btn\", props.className),\n    __css: styles.closeButton,\n    ref: ref\n  }, props));\n});\n_PopoverCloseButton.displayName = \"PopoverCloseButton\";\n\n// src/popover-content.tsx\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_system6 = require(\"@chakra-ui/system\");\n\n// src/popover-transition.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_framer_motion = require(\"framer-motion\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nfunction mergeVariants(variants) {\n  if (!variants) return;\n  return {\n    enter: _objectSpread({}, variants.enter, {\n      visibility: \"visible\"\n    }),\n    exit: _objectSpread({}, variants.exit, {\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    })\n  };\n}\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar MotionSection = (0, import_system5.chakra)(import_framer_motion.motion.section);\nvar PopoverTransition = (0, import_system5.forwardRef)(function PopoverTransition2(props, ref) {\n  var _props$variants = props.variants,\n    variants = _props$variants === void 0 ? scaleFade : _props$variants,\n    rest = _objectWithoutProperties(props, [\"variants\"]);\n  var _usePopoverContext6 = _usePopoverContext(),\n    isOpen = _usePopoverContext6.isOpen;\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(MotionSection, _objectSpread({\n    ref: ref,\n    variants: mergeVariants(variants),\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\"\n  }, rest));\n});\nPopoverTransition.displayName = \"PopoverTransition\";\n\n// src/popover-content.tsx\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar _PopoverContent = (0, import_system6.forwardRef)(function PopoverContent2(props, ref) {\n  var rootProps = props.rootProps,\n    motionProps = props.motionProps,\n    contentProps = _objectWithoutProperties(props, [\"rootProps\", \"motionProps\"]);\n  var _usePopoverContext7 = _usePopoverContext(),\n    getPopoverProps = _usePopoverContext7.getPopoverProps,\n    getPopoverPositionerProps = _usePopoverContext7.getPopoverPositionerProps,\n    onAnimationComplete = _usePopoverContext7.onAnimationComplete;\n  var styles = _usePopoverStyles();\n  var contentStyles = _objectSpread({\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, styles.content);\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.div, _objectSpread({}, getPopoverPositionerProps(rootProps), {\n    __css: styles.popper,\n    className: \"chakra-popover__popper\",\n    children: /* @__PURE__ */(0, import_jsx_runtime6.jsx)(PopoverTransition, _objectSpread({}, motionProps, getPopoverProps(contentProps, ref), {\n      onAnimationComplete: (0, import_shared_utils6.callAll)(onAnimationComplete, contentProps.onAnimationComplete),\n      className: (0, import_shared_utils6.cx)(\"chakra-popover__content\", props.className),\n      __css: contentStyles\n    }))\n  }));\n});\n_PopoverContent.displayName = \"PopoverContent\";\n\n// src/popover-footer.tsx\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nfunction _PopoverFooter(props) {\n  var styles = _usePopoverStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system7.chakra.footer, _objectSpread({}, props, {\n    className: (0, import_shared_utils7.cx)(\"chakra-popover__footer\", props.className),\n    __css: styles.footer\n  }));\n}\n_PopoverFooter.displayName = \"PopoverFooter\";\n\n// src/popover-header.tsx\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar _PopoverHeader = (0, import_system8.forwardRef)(function PopoverHeader2(props, ref) {\n  var _usePopoverContext8 = _usePopoverContext(),\n    getHeaderProps = _usePopoverContext8.getHeaderProps;\n  var styles = _usePopoverStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsx)(import_system8.chakra.header, _objectSpread({}, getHeaderProps(props, ref), {\n    className: (0, import_shared_utils8.cx)(\"chakra-popover__header\", props.className),\n    __css: styles.header\n  }));\n});\n_PopoverHeader.displayName = \"PopoverHeader\";\n\n// src/popover-trigger.tsx\nvar import_react3 = require(\"react\");\nfunction _PopoverTrigger(props) {\n  var child = import_react3.Children.only(props.children);\n  var _usePopoverContext9 = _usePopoverContext(),\n    getTriggerProps = _usePopoverContext9.getTriggerProps;\n  return (0, import_react3.cloneElement)(child, getTriggerProps(child.props, child.ref));\n}\n_PopoverTrigger.displayName = \"PopoverTrigger\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Popover: _Popover,\n  PopoverAnchor: _PopoverAnchor,\n  PopoverArrow: _PopoverArrow,\n  PopoverBody: _PopoverBody,\n  PopoverCloseButton: _PopoverCloseButton,\n  PopoverContent: _PopoverContent,\n  PopoverFooter: _PopoverFooter,\n  PopoverHeader: _PopoverHeader,\n  PopoverTrigger: _PopoverTrigger,\n  usePopover: _usePopover,\n  usePopoverContext: _usePopoverContext,\n  usePopoverStyles: _usePopoverStyles\n});","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  analyzeBreakpoints: function analyzeBreakpoints() {\n    return _analyzeBreakpoints;\n  },\n  arrayToObjectNotation: function arrayToObjectNotation() {\n    return _arrayToObjectNotation;\n  },\n  breakpoints: function breakpoints() {\n    return _breakpoints;\n  },\n  isCustomBreakpoint: function isCustomBreakpoint() {\n    return _isCustomBreakpoint;\n  },\n  isResponsiveObjectLike: function isResponsiveObjectLike() {\n    return _isResponsiveObjectLike;\n  },\n  mapResponsive: function mapResponsive() {\n    return _mapResponsive;\n  },\n  objectToArrayNotation: function objectToArrayNotation() {\n    return _objectToArrayNotation;\n  },\n  px: function px() {\n    return _px;\n  },\n  toMediaQueryString: function toMediaQueryString() {\n    return _toMediaQueryString;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/responsive.ts\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar _breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]);\nfunction _mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map(function (item) {\n      return item === null ? null : mapper(item);\n    });\n  }\n  if ((0, import_shared_utils.isObject)(prop)) {\n    return Object.keys(prop).reduce(function (result, key) {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction _objectToArrayNotation(obj) {\n  var bps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _breakpoints;\n  var result = bps.map(function (br) {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  var lastItem = result[result.length - 1];\n  while (lastItem === null) result.pop();\n  return result;\n}\nfunction _arrayToObjectNotation(values) {\n  var bps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _breakpoints;\n  var result = {};\n  values.forEach(function (value, index) {\n    var key = bps[index];\n    if (value == null) return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction _isResponsiveObjectLike(obj) {\n  var bps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _breakpoints;\n  var keys2 = Object.keys(obj);\n  return keys2.length > 0 && keys2.every(function (key) {\n    return bps.includes(key);\n  });\n}\nvar _isCustomBreakpoint = function _isCustomBreakpoint(v) {\n  return Number.isNaN(Number(v));\n};\n\n// src/breakpoint.ts\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nfunction getLastItem(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction analyzeCSSValue(value) {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit: unit\n  };\n}\nfunction _px(value) {\n  if (value == null) return value;\n  var _analyzeCSSValue = analyzeCSSValue(value),\n    unitless = _analyzeCSSValue.unitless;\n  return unitless || typeof value === \"number\" ? \"\".concat(value, \"px\") : value;\n}\nvar sortByBreakpointValue = function sortByBreakpointValue(a, b) {\n  return parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\n};\nvar sortBps = function sortBps(breakpoints2) {\n  return Object.fromEntries(Object.entries(breakpoints2).sort(sortByBreakpointValue));\n};\nfunction normalize(breakpoints2) {\n  var sorted = sortBps(breakpoints2);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints2) {\n  var value = Object.keys(sortBps(breakpoints2));\n  return new Set(value);\n}\nfunction subtract(value) {\n  var _a;\n  if (!value) return value;\n  value = (_a = _px(value)) != null ? _a : value;\n  var OFFSET = -0.02;\n  return typeof value === \"number\" ? \"\".concat(value + OFFSET) : value.replace(/([0-9]+\\.?[0-9]*)/, function (m) {\n    return \"\".concat(parseFloat(m) + OFFSET);\n  });\n}\nfunction _toMediaQueryString(min, max) {\n  var query = [\"@media screen\"];\n  if (min) query.push(\"and\", \"(min-width: \".concat(_px(min), \")\"));\n  if (max) query.push(\"and\", \"(max-width: \".concat(_px(max), \")\"));\n  return query.join(\" \");\n}\nfunction _analyzeBreakpoints(breakpoints2) {\n  var _a;\n  if (!breakpoints2) return null;\n  breakpoints2.base = (_a = breakpoints2.base) != null ? _a : \"0px\";\n  var normalized = normalize(breakpoints2);\n  var queries = Object.entries(breakpoints2).sort(sortByBreakpointValue).map(function (_ref, index, entry) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      breakpoint = _ref2[0],\n      minW = _ref2[1];\n    var _a2;\n    var _ref3 = (_a2 = entry[index + 1]) != null ? _a2 : [],\n      _ref4 = _slicedToArray(_ref3, 2),\n      maxW = _ref4[1];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint: breakpoint,\n      minW: minW,\n      maxW: maxW,\n      maxWQuery: _toMediaQueryString(null, maxW),\n      minWQuery: _toMediaQueryString(minW),\n      minMaxQuery: _toMediaQueryString(minW, maxW)\n    };\n  });\n  var _keys = keys(breakpoints2);\n  var _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized: normalized,\n    isResponsive: function isResponsive(test) {\n      var keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every(function (key) {\n        return _keys.has(key);\n      });\n    },\n    asObject: sortBps(breakpoints2),\n    asArray: normalize(breakpoints2),\n    details: queries,\n    get: function get(key) {\n      return queries.find(function (q) {\n        return q.breakpoint === key;\n      });\n    },\n    media: [null].concat(_toConsumableArray(normalized.map(function (minW) {\n      return _toMediaQueryString(minW);\n    }).slice(1))),\n    toArrayValue: function toArrayValue(test) {\n      if (!(0, import_shared_utils2.isObject)(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      var result = _keysArr.map(function (bp) {\n        var _a2;\n        return (_a2 = test[bp]) != null ? _a2 : null;\n      });\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    toObjectValue: function toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce(function (acc, value, index) {\n        var key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyzeBreakpoints: _analyzeBreakpoints,\n  arrayToObjectNotation: _arrayToObjectNotation,\n  breakpoints: _breakpoints,\n  isCustomBreakpoint: _isCustomBreakpoint,\n  isResponsiveObjectLike: _isResponsiveObjectLike,\n  mapResponsive: _mapResponsive,\n  objectToArrayNotation: _objectToArrayNotation,\n  px: _px,\n  toMediaQueryString: _toMediaQueryString\n});","map":null,"metadata":{},"sourceType":"script"}
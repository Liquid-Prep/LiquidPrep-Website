{"ast":null,"code":"import _objectWithoutProperties from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { usePortalManager } from \"./chunk-EJ37EVSP.mjs\";\n\n// src/portal.tsx\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { createPortal } from \"react-dom\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    strict: false,\n    name: \"PortalContext\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  PortalContextProvider = _createContext2[0],\n  usePortalContext = _createContext2[1];\nvar PORTAL_CLASSNAME = \"chakra-portal\";\nvar PORTAL_SELECTOR = \".chakra-portal\";\nvar Container = function Container(props) {\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"chakra-portal-zIndex\",\n    style: {\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0\n    },\n    children: props.children\n  });\n};\nvar DefaultPortal = function DefaultPortal(props) {\n  var appendToParentPortal = props.appendToParentPortal,\n    children = props.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    tempNode = _useState2[0],\n    setTempNode = _useState2[1];\n  var portal = useRef(null);\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    forceUpdate = _useState4[1];\n  useEffect(function () {\n    return forceUpdate({});\n  }, []);\n  var parentPortal = usePortalContext();\n  var manager = usePortalManager();\n  useSafeLayoutEffect(function () {\n    if (!tempNode) return;\n    var doc = tempNode.ownerDocument;\n    var host = appendToParentPortal ? parentPortal != null ? parentPortal : doc.body : doc.body;\n    if (!host) return;\n    portal.current = doc.createElement(\"div\");\n    portal.current.className = PORTAL_CLASSNAME;\n    host.appendChild(portal.current);\n    forceUpdate({});\n    var portalNode = portal.current;\n    return function () {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode);\n      }\n    };\n  }, [tempNode]);\n  var _children = (manager == null ? void 0 : manager.zIndex) ? /* @__PURE__ */jsx(Container, {\n    zIndex: manager == null ? void 0 : manager.zIndex,\n    children: children\n  }) : children;\n  return portal.current ? createPortal( /* @__PURE__ */jsx(PortalContextProvider, {\n    value: portal.current,\n    children: _children\n  }), portal.current) : /* @__PURE__ */jsx(\"span\", {\n    ref: function ref(el) {\n      if (el) setTempNode(el);\n    }\n  });\n};\nvar ContainerPortal = function ContainerPortal(props) {\n  var children = props.children,\n    containerRef = props.containerRef,\n    appendToParentPortal = props.appendToParentPortal;\n  var containerEl = containerRef.current;\n  var host = containerEl != null ? containerEl : typeof window !== \"undefined\" ? document.body : void 0;\n  var portal = useMemo(function () {\n    var node = containerEl == null ? void 0 : containerEl.ownerDocument.createElement(\"div\");\n    if (node) node.className = PORTAL_CLASSNAME;\n    return node;\n  }, [containerEl]);\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    forceUpdate = _useState6[1];\n  useSafeLayoutEffect(function () {\n    return forceUpdate({});\n  }, []);\n  useSafeLayoutEffect(function () {\n    if (!portal || !host) return;\n    host.appendChild(portal);\n    return function () {\n      host.removeChild(portal);\n    };\n  }, [portal, host]);\n  if (host && portal) {\n    return createPortal( /* @__PURE__ */jsx(PortalContextProvider, {\n      value: appendToParentPortal ? portal : null,\n      children: children\n    }), portal);\n  }\n  return null;\n};\nfunction Portal(props) {\n  var portalProps = _objectSpread({\n    appendToParentPortal: true\n  }, props);\n  var containerRef = portalProps.containerRef,\n    rest = _objectWithoutProperties(portalProps, [\"containerRef\"]);\n  return containerRef ? /* @__PURE__ */jsx(ContainerPortal, _objectSpread({\n    containerRef: containerRef\n  }, rest)) : /* @__PURE__ */jsx(DefaultPortal, _objectSpread({}, rest));\n}\nPortal.className = PORTAL_CLASSNAME;\nPortal.selector = PORTAL_SELECTOR;\nPortal.displayName = \"Portal\";\nexport { Portal };","map":null,"metadata":{},"sourceType":"module"}
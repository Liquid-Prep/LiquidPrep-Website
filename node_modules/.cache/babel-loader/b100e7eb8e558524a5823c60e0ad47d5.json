{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  PinInput: function PinInput() {\n    return _PinInput;\n  },\n  PinInputDescendantsProvider: function PinInputDescendantsProvider() {\n    return _PinInputDescendantsProvider;\n  },\n  PinInputField: function PinInputField() {\n    return _PinInputField;\n  },\n  PinInputProvider: function PinInputProvider() {\n    return _PinInputProvider;\n  },\n  usePinInput: function usePinInput() {\n    return _usePinInput;\n  },\n  usePinInputContext: function usePinInputContext() {\n    return _usePinInputContext;\n  },\n  usePinInputField: function usePinInputField() {\n    return _usePinInputField;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/pin-input.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\n\n// src/use-pin-input.ts\nvar import_descendant = require(\"@chakra-ui/descendant\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_react = require(\"react\");\nvar _ref = (0, import_descendant.createDescendantContext)(),\n  _ref2 = _slicedToArray(_ref, 4),\n  _PinInputDescendantsProvider = _ref2[0],\n  usePinInputDescendantsContext = _ref2[1],\n  usePinInputDescendants = _ref2[2],\n  usePinInputDescendant = _ref2[3];\nvar _ref3 = (0, import_react_context.createContext)({\n    name: \"PinInputContext\",\n    errorMessage: \"usePinInputContext: `context` is undefined. Seems you forgot to all pin input fields within `<PinInput />`\"\n  }),\n  _ref4 = _slicedToArray(_ref3, 2),\n  _PinInputProvider = _ref4[0],\n  _usePinInputContext = _ref4[1];\nvar toArray = function toArray(value) {\n  return value == null ? void 0 : value.split(\"\");\n};\nfunction validate(value, type) {\n  var NUMERIC_REGEX = /^[0-9]+$/;\n  var ALPHA_NUMERIC_REGEX = /^[a-zA-Z0-9]+$/i;\n  var regex = type === \"alphanumeric\" ? ALPHA_NUMERIC_REGEX : NUMERIC_REGEX;\n  return regex.test(value);\n}\nfunction _usePinInput() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var autoFocus = props.autoFocus,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    _onChange = props.onChange,\n    onComplete = props.onComplete,\n    _props$placeholder = props.placeholder,\n    placeholder = _props$placeholder === void 0 ? \"\\u25CB\" : _props$placeholder,\n    _props$manageFocus = props.manageFocus,\n    manageFocus = _props$manageFocus === void 0 ? true : _props$manageFocus,\n    _props$otp = props.otp,\n    otp = _props$otp === void 0 ? false : _props$otp,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isInvalid = props.isInvalid,\n    _props$type = props.type,\n    type = _props$type === void 0 ? \"number\" : _props$type,\n    mask = props.mask;\n  var uuid = (0, import_react.useId)();\n  var id = idProp != null ? idProp : \"pin-input-\".concat(uuid);\n  var descendants = usePinInputDescendants();\n  var _ref5 = (0, import_react.useState)(true),\n    _ref6 = _slicedToArray(_ref5, 2),\n    moveFocus = _ref6[0],\n    setMoveFocus = _ref6[1];\n  var _ref7 = (0, import_react.useState)(-1),\n    _ref8 = _slicedToArray(_ref7, 2),\n    focusedIndex = _ref8[0],\n    setFocusedIndex = _ref8[1];\n  var _ref9 = (0, import_react_use_controllable_state.useControllableState)({\n      defaultValue: toArray(defaultValue) || [],\n      value: toArray(value),\n      onChange: function onChange(values2) {\n        return _onChange == null ? void 0 : _onChange(values2.join(\"\"));\n      }\n    }),\n    _ref10 = _slicedToArray(_ref9, 2),\n    values = _ref10[0],\n    setValues = _ref10[1];\n  (0, import_react.useEffect)(function () {\n    if (autoFocus) {\n      var first = descendants.first();\n      if (first) {\n        requestAnimationFrame(function () {\n          first.node.focus();\n        });\n      }\n    }\n  }, [descendants]);\n  var focusNext = (0, import_react.useCallback)(function (index) {\n    if (!moveFocus || !manageFocus) return;\n    var next = descendants.next(index, false);\n    if (next) {\n      requestAnimationFrame(function () {\n        next.node.focus();\n      });\n    }\n  }, [descendants, moveFocus, manageFocus]);\n  var setValue = (0, import_react.useCallback)(function (value2, index) {\n    var handleFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var nextValues = _toConsumableArray(values);\n    nextValues[index] = value2;\n    setValues(nextValues);\n    var isComplete = value2 !== \"\" && nextValues.length === descendants.count() && nextValues.every(function (inputValue) {\n      return inputValue != null && inputValue !== \"\";\n    });\n    if (isComplete) {\n      onComplete == null ? void 0 : onComplete(nextValues.join(\"\"));\n    } else {\n      if (handleFocus) focusNext(index);\n    }\n  }, [values, setValues, focusNext, onComplete, descendants]);\n  var clear = (0, import_react.useCallback)(function () {\n    var _a;\n    var values2 = Array(descendants.count()).fill(\"\");\n    setValues(values2);\n    var first = descendants.first();\n    (_a = first == null ? void 0 : first.node) == null ? void 0 : _a.focus();\n  }, [descendants, setValues]);\n  var getNextValue = (0, import_react.useCallback)(function (value2, eventValue) {\n    var nextValue = eventValue;\n    if ((value2 == null ? void 0 : value2.length) > 0) {\n      if (value2[0] === eventValue.charAt(0)) {\n        nextValue = eventValue.charAt(1);\n      } else if (value2[0] === eventValue.charAt(1)) {\n        nextValue = eventValue.charAt(0);\n      }\n    }\n    return nextValue;\n  }, []);\n  var getInputProps = (0, import_react.useCallback)(function (props2) {\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, [\"index\"]);\n    var onChange2 = function onChange2(event) {\n      var eventValue = event.target.value;\n      var currentValue = values[index];\n      var nextValue = getNextValue(currentValue, eventValue);\n      if (nextValue === \"\") {\n        setValue(\"\", index);\n        return;\n      }\n      if (eventValue.length > 2) {\n        if (validate(eventValue, type)) {\n          var nextValue2 = eventValue.split(\"\").filter(function (_, index2) {\n            return index2 < descendants.count();\n          });\n          setValues(nextValue2);\n          if (nextValue2.length === descendants.count()) {\n            onComplete == null ? void 0 : onComplete(nextValue2.join(\"\"));\n          }\n        }\n      } else {\n        if (validate(nextValue, type)) {\n          setValue(nextValue, index);\n        }\n        setMoveFocus(true);\n      }\n    };\n    var onKeyDown = function onKeyDown(event) {\n      var _a;\n      if (event.key === \"Backspace\" && manageFocus) {\n        if (event.target.value === \"\") {\n          var prevInput = descendants.prev(index, false);\n          if (prevInput) {\n            setValue(\"\", index - 1, false);\n            (_a = prevInput.node) == null ? void 0 : _a.focus();\n            setMoveFocus(true);\n          }\n        } else {\n          setMoveFocus(false);\n        }\n      }\n    };\n    var onFocus = function onFocus() {\n      setFocusedIndex(index);\n    };\n    var onBlur = function onBlur() {\n      setFocusedIndex(-1);\n    };\n    var hasFocus = focusedIndex === index;\n    var inputType = type === \"number\" ? \"tel\" : \"text\";\n    return _objectSpread({\n      \"aria-label\": \"Please enter your pin code\",\n      inputMode: type === \"number\" ? \"numeric\" : \"text\",\n      type: mask ? \"password\" : inputType\n    }, rest, {\n      id: \"\".concat(id, \"-\").concat(index),\n      disabled: isDisabled,\n      \"aria-invalid\": (0, import_shared_utils.ariaAttr)(isInvalid),\n      onChange: (0, import_shared_utils.callAllHandlers)(rest.onChange, onChange2),\n      onKeyDown: (0, import_shared_utils.callAllHandlers)(rest.onKeyDown, onKeyDown),\n      onFocus: (0, import_shared_utils.callAllHandlers)(rest.onFocus, onFocus),\n      onBlur: (0, import_shared_utils.callAllHandlers)(rest.onBlur, onBlur),\n      value: values[index] || \"\",\n      autoComplete: otp ? \"one-time-code\" : \"off\",\n      placeholder: hasFocus ? \"\" : placeholder\n    });\n  }, [descendants, focusedIndex, getNextValue, id, isDisabled, mask, isInvalid, manageFocus, onComplete, otp, placeholder, setValue, setValues, type, values]);\n  return {\n    getInputProps: getInputProps,\n    id: id,\n    descendants: descendants,\n    values: values,\n    setValue: setValue,\n    setValues: setValues,\n    clear: clear\n  };\n}\nfunction _usePinInputField() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var _usePinInputContext2 = _usePinInputContext(),\n    getInputProps = _usePinInputContext2.getInputProps;\n  var _usePinInputDescendan = usePinInputDescendant(),\n    index = _usePinInputDescendan.index,\n    register = _usePinInputDescendan.register;\n  return getInputProps(_objectSpread({}, props, {\n    ref: (0, import_react_use_merge_refs.mergeRefs)(register, ref),\n    index: index\n  }));\n}\n\n// src/pin-input.tsx\nvar import_react2 = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction _PinInput(props) {\n  var styles = (0, import_system.useStyleConfig)(\"PinInput\", props);\n  var _ref11 = (0, import_system.omitThemingProps)(props),\n    children = _ref11.children,\n    rest = _objectWithoutProperties(_ref11, [\"children\"]);\n  var _usePinInput2 = _usePinInput(rest),\n    descendants = _usePinInput2.descendants,\n    context = _objectWithoutProperties(_usePinInput2, [\"descendants\"]);\n  var clones = (0, import_react_children_utils.getValidChildren)(children).map(function (child) {\n    return (0, import_react2.cloneElement)(child, {\n      __css: styles\n    });\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(_PinInputDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(_PinInputProvider, {\n      value: context,\n      children: clones\n    })\n  });\n}\n_PinInput.displayName = \"PinInput\";\nvar _PinInputField = (0, import_system.forwardRef)(function PinInputField2(props, ref) {\n  var inputProps = _usePinInputField(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.input, _objectSpread({}, inputProps, {\n    className: (0, import_shared_utils2.cx)(\"chakra-pin-input\", props.className)\n  }));\n});\n_PinInputField.displayName = \"PinInputField\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  PinInput: _PinInput,\n  PinInputDescendantsProvider: _PinInputDescendantsProvider,\n  PinInputField: _PinInputField,\n  PinInputProvider: _PinInputProvider,\n  usePinInput: _usePinInput,\n  usePinInputContext: _usePinInputContext,\n  usePinInputField: _usePinInputField\n});","map":null,"metadata":{},"sourceType":"script"}
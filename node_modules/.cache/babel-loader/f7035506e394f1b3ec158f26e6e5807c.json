{"ast":null,"code":"import _toConsumableArray from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// src/array.ts\nfunction getFirstItem(array) {\n  return array != null && array.length ? array[0] : void 0;\n}\nfunction getLastItem(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction getPrevItem(index, array) {\n  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var prevIndex = getPrevIndex(index, array.length, loop);\n  return array[prevIndex];\n}\nfunction getNextItem(index, array) {\n  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var nextIndex = getNextIndex(index, array.length, 1, loop);\n  return array[nextIndex];\n}\nfunction removeIndex(array, index) {\n  return array.filter(function (_, idx) {\n    return idx !== index;\n  });\n}\nfunction addItem(array, item) {\n  return [].concat(_toConsumableArray(array), [item]);\n}\nfunction removeItem(array, item) {\n  return array.filter(function (eachItem) {\n    return eachItem !== item;\n  });\n}\nfunction getNextIndex(currentIndex, length) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var loop = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var lastIndex = length - 1;\n  if (currentIndex === -1) {\n    return step > 0 ? 0 : lastIndex;\n  }\n  var nextIndex = currentIndex + step;\n  if (nextIndex < 0) {\n    return loop ? lastIndex : 0;\n  }\n  if (nextIndex >= length) {\n    if (loop) return 0;\n    return currentIndex > length ? length : currentIndex;\n  }\n  return nextIndex;\n}\nfunction getPrevIndex(index, count) {\n  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return getNextIndex(index, count, -1, loop);\n}\nfunction chunk(array, size) {\n  return array.reduce(function (rows, currentValue, index) {\n    if (index % size === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n    return rows;\n  }, []);\n}\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    var foundItem = items.find(function (item) {\n      return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n    });\n    return foundItem;\n  }\n  var matchingItems = items.filter(function (item) {\n    return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n  });\n  if (matchingItems.length > 0) {\n    var nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      var currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\nexport { getFirstItem, getLastItem, getPrevItem, getNextItem, removeIndex, addItem, removeItem, getNextIndex, getPrevIndex, chunk, getNextItemFromSearch };","map":null,"metadata":{},"sourceType":"module"}
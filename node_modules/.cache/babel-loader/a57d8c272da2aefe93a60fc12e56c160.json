{"ast":null,"code":"import { FOCUS_AUTO } from '../constants';\nimport { toArray } from './array';\nimport { tabbables } from './tabbables';\nvar queryTabbables = tabbables.join(',');\nvar queryGuardTabbables = \"\".concat(queryTabbables, \", [data-focus-guard]\");\nvar getFocusablesWithShadowDom = function getFocusablesWithShadowDom(parent, withGuards) {\n  var _a;\n  return toArray(((_a = parent.shadowRoot) === null || _a === void 0 ? void 0 : _a.children) || parent.children).reduce(function (acc, child) {\n    return acc.concat(child.matches(withGuards ? queryGuardTabbables : queryTabbables) ? [child] : [], getFocusablesWithShadowDom(child));\n  }, []);\n};\nvar getFocusablesWithIFrame = function getFocusablesWithIFrame(parent, withGuards) {\n  if (parent instanceof HTMLIFrameElement && parent.contentDocument) {\n    return getFocusables([parent.contentDocument.body], withGuards);\n  }\n  return [parent];\n};\nexport var getFocusables = function getFocusables(parents, withGuards) {\n  return parents.reduce(function (acc, parent) {\n    var _a;\n    var focusableWithShadowDom = getFocusablesWithShadowDom(parent, withGuards);\n    var focusableWithIframes = (_a = []).concat.apply(_a, focusableWithShadowDom.map(function (node) {\n      return getFocusablesWithIFrame(node, withGuards);\n    }));\n    return acc.concat(\n    // add all tabbables inside and within shadow DOMs in DOM order\n    focusableWithIframes,\n    // add if node is tabbable itself\n    parent.parentNode ? toArray(parent.parentNode.querySelectorAll(queryTabbables)).filter(function (node) {\n      return node === parent;\n    }) : []);\n  }, []);\n};\n/**\n * return a list of focusable nodes within an area marked as \"auto-focusable\"\n * @param parent\n */\nexport var getParentAutofocusables = function getParentAutofocusables(parent) {\n  var parentFocus = parent.querySelectorAll(\"[\".concat(FOCUS_AUTO, \"]\"));\n  return toArray(parentFocus).map(function (node) {\n    return getFocusables([node]);\n  }).reduce(function (acc, nodes) {\n    return acc.concat(nodes);\n  }, []);\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { withDefaultColorScheme } from \"./chunk-DFL6DXJX.mjs\";\nimport { withDefaultSize } from \"./chunk-YKDMERD6.mjs\";\nimport { withDefaultVariant } from \"./chunk-HA5PBA4B.mjs\";\nimport { mergeThemeOverride } from \"./chunk-AQYX3YP4.mjs\";\n\n// src/theme-extensions/with-default-props.ts\nfunction pipe() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n  return function (v) {\n    return fns.reduce(function (a, b) {\n      return b(a);\n    }, v);\n  };\n}\nfunction withDefaultProps(_ref) {\n  var _ref$defaultProps = _ref.defaultProps,\n    colorScheme = _ref$defaultProps.colorScheme,\n    variant = _ref$defaultProps.variant,\n    size = _ref$defaultProps.size,\n    components = _ref.components;\n  var identity = function identity(t) {\n    return t;\n  };\n  var fns = [colorScheme ? withDefaultColorScheme({\n    colorScheme: colorScheme,\n    components: components\n  }) : identity, size ? withDefaultSize({\n    size: size,\n    components: components\n  }) : identity, variant ? withDefaultVariant({\n    variant: variant,\n    components: components\n  }) : identity];\n  return function (theme) {\n    return mergeThemeOverride(pipe.apply(void 0, fns)(theme));\n  };\n}\nexport { withDefaultProps };","map":null,"metadata":{},"sourceType":"module"}
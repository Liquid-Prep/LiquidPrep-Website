{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Tooltip: function Tooltip() {\n    return _Tooltip;\n  },\n  useTooltip: function useTooltip() {\n    return _useTooltip;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/tooltip.tsx\nvar import_popper2 = require(\"@chakra-ui/popper\");\nvar import_portal = require(\"@chakra-ui/portal\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object) {\n  var keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var clone = Object.assign({}, object);\n  var _iterator2 = _createForOfIteratorHelper(keysToOmit),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var key = _step2.value;\n      if (key in clone) {\n        delete clone[key];\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return clone;\n}\nfunction pick(object, keysToPick) {\n  var result = {};\n  var _iterator3 = _createForOfIteratorHelper(keysToPick),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var key = _step3.value;\n      if (key in object) {\n        result[key] = object[key];\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return result;\n}\n\n// src/tooltip.tsx\nvar import_framer_motion = require(\"framer-motion\");\nvar import_react2 = require(\"react\");\n\n// src/tooltip.transition.tsx\nvar scale = {\n  exit: {\n    scale: 0.85,\n    opacity: 0,\n    transition: {\n      opacity: {\n        duration: 0.15,\n        easings: \"easeInOut\"\n      },\n      scale: {\n        duration: 0.2,\n        easings: \"easeInOut\"\n      }\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      opacity: {\n        easings: \"easeOut\",\n        duration: 0.2\n      },\n      scale: {\n        duration: 0.2,\n        ease: [0.175, 0.885, 0.4, 1.1]\n      }\n    }\n  }\n};\n\n// src/use-tooltip.ts\nvar import_react_use_event_listener = require(\"@chakra-ui/react-use-event-listener\");\nvar import_react_use_disclosure = require(\"@chakra-ui/react-use-disclosure\");\nvar import_popper = require(\"@chakra-ui/popper\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react = require(\"react\");\nvar getDoc = function getDoc(ref) {\n  var _a;\n  return ((_a = ref.current) == null ? void 0 : _a.ownerDocument) || document;\n};\nvar getWin = function getWin(ref) {\n  var _a, _b;\n  return ((_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) == null ? void 0 : _b.defaultView) || window;\n};\nfunction _useTooltip() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$openDelay = props.openDelay,\n    openDelay = _props$openDelay === void 0 ? 0 : _props$openDelay,\n    _props$closeDelay = props.closeDelay,\n    closeDelay = _props$closeDelay === void 0 ? 0 : _props$closeDelay,\n    _props$closeOnClick = props.closeOnClick,\n    closeOnClick = _props$closeOnClick === void 0 ? true : _props$closeOnClick,\n    closeOnMouseDown = props.closeOnMouseDown,\n    closeOnScroll = props.closeOnScroll,\n    _props$closeOnPointer = props.closeOnPointerDown,\n    closeOnPointerDown = _props$closeOnPointer === void 0 ? closeOnMouseDown : _props$closeOnPointer,\n    _props$closeOnEsc = props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    onOpenProp = props.onOpen,\n    onCloseProp = props.onClose,\n    placement = props.placement,\n    id = props.id,\n    isOpenProp = props.isOpen,\n    defaultIsOpen = props.defaultIsOpen,\n    _props$arrowSize = props.arrowSize,\n    arrowSize = _props$arrowSize === void 0 ? 10 : _props$arrowSize,\n    arrowShadowColor = props.arrowShadowColor,\n    arrowPadding = props.arrowPadding,\n    modifiers = props.modifiers,\n    isDisabled = props.isDisabled,\n    gutter = props.gutter,\n    offset = props.offset,\n    direction = props.direction,\n    htmlProps = _objectWithoutProperties(props, [\"openDelay\", \"closeDelay\", \"closeOnClick\", \"closeOnMouseDown\", \"closeOnScroll\", \"closeOnPointerDown\", \"closeOnEsc\", \"onOpen\", \"onClose\", \"placement\", \"id\", \"isOpen\", \"defaultIsOpen\", \"arrowSize\", \"arrowShadowColor\", \"arrowPadding\", \"modifiers\", \"isDisabled\", \"gutter\", \"offset\", \"direction\"]);\n  var _ref2 = (0, import_react_use_disclosure.useDisclosure)({\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpen,\n      onOpen: onOpenProp,\n      onClose: onCloseProp\n    }),\n    isOpen = _ref2.isOpen,\n    onOpen = _ref2.onOpen,\n    onClose = _ref2.onClose;\n  var _ref3 = (0, import_popper.usePopper)({\n      enabled: isOpen,\n      placement: placement,\n      arrowPadding: arrowPadding,\n      modifiers: modifiers,\n      gutter: gutter,\n      offset: offset,\n      direction: direction\n    }),\n    referenceRef = _ref3.referenceRef,\n    getPopperProps = _ref3.getPopperProps,\n    getArrowInnerProps = _ref3.getArrowInnerProps,\n    getArrowProps = _ref3.getArrowProps;\n  var uuid = (0, import_react.useId)();\n  var uid = id != null ? id : uuid;\n  var tooltipId = \"tooltip-\".concat(uid);\n  var ref = (0, import_react.useRef)(null);\n  var enterTimeout = (0, import_react.useRef)();\n  var clearEnterTimeout = (0, import_react.useCallback)(function () {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n      enterTimeout.current = void 0;\n    }\n  }, []);\n  var exitTimeout = (0, import_react.useRef)();\n  var clearExitTimeout = (0, import_react.useCallback)(function () {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current);\n      exitTimeout.current = void 0;\n    }\n  }, []);\n  var closeNow = (0, import_react.useCallback)(function () {\n    clearExitTimeout();\n    onClose();\n  }, [onClose, clearExitTimeout]);\n  var dispatchCloseEvent = useCloseEvent(ref, closeNow);\n  var openWithDelay = (0, import_react.useCallback)(function () {\n    if (!isDisabled && !enterTimeout.current) {\n      dispatchCloseEvent();\n      var win = getWin(ref);\n      enterTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [dispatchCloseEvent, isDisabled, onOpen, openDelay]);\n  var closeWithDelay = (0, import_react.useCallback)(function () {\n    clearEnterTimeout();\n    var win = getWin(ref);\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow, clearEnterTimeout]);\n  var onClick = (0, import_react.useCallback)(function () {\n    if (isOpen && closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay, isOpen]);\n  var onPointerDown = (0, import_react.useCallback)(function () {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay();\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen]);\n  var onKeyDown = (0, import_react.useCallback)(function (event) {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay();\n    }\n  }, [isOpen, closeWithDelay]);\n  (0, import_react_use_event_listener.useEventListener)(function () {\n    return getDoc(ref);\n  }, \"keydown\", closeOnEsc ? onKeyDown : void 0);\n  (0, import_react_use_event_listener.useEventListener)(function () {\n    return getDoc(ref);\n  }, \"scroll\", function () {\n    if (isOpen && closeOnScroll) {\n      closeNow();\n    }\n  });\n  (0, import_react.useEffect)(function () {\n    if (!isDisabled) return;\n    clearEnterTimeout();\n    if (isOpen) onClose();\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout]);\n  (0, import_react.useEffect)(function () {\n    return function () {\n      clearEnterTimeout();\n      clearExitTimeout();\n    };\n  }, [clearEnterTimeout, clearExitTimeout]);\n  (0, import_react_use_event_listener.useEventListener)(function () {\n    return ref.current;\n  }, \"pointerleave\", closeWithDelay);\n  var getTriggerProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var triggerProps = _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, _ref, referenceRef),\n      onPointerEnter: (0, import_shared_utils.callAllHandlers)(props2.onPointerEnter, function (e) {\n        if (e.pointerType === \"touch\") return;\n        openWithDelay();\n      }),\n      onClick: (0, import_shared_utils.callAllHandlers)(props2.onClick, onClick),\n      onPointerDown: (0, import_shared_utils.callAllHandlers)(props2.onPointerDown, onPointerDown),\n      onFocus: (0, import_shared_utils.callAllHandlers)(props2.onFocus, openWithDelay),\n      onBlur: (0, import_shared_utils.callAllHandlers)(props2.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : void 0\n    });\n    return triggerProps;\n  }, [openWithDelay, closeWithDelay, onPointerDown, isOpen, tooltipId, onClick, referenceRef]);\n  var getTooltipPositionerProps = (0, import_react.useCallback)(function () {\n    var _objectSpread2;\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return getPopperProps(_objectSpread({}, props2, {\n      style: _objectSpread({}, props2.style, (_objectSpread2 = {}, _defineProperty(_objectSpread2, import_popper.popperCSSVars.arrowSize.var, arrowSize ? \"\".concat(arrowSize, \"px\") : void 0), _defineProperty(_objectSpread2, import_popper.popperCSSVars.arrowShadowColor.var, arrowShadowColor), _objectSpread2))\n    }), forwardedRef);\n  }, [getPopperProps, arrowSize, arrowShadowColor]);\n  var getTooltipProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var styles = _objectSpread({}, props2.style, {\n      position: \"relative\",\n      transformOrigin: import_popper.popperCSSVars.transformOrigin.varRef\n    });\n    return _objectSpread({\n      ref: ref2\n    }, htmlProps, props2, {\n      id: tooltipId,\n      role: \"tooltip\",\n      style: styles\n    });\n  }, [htmlProps, tooltipId]);\n  return {\n    isOpen: isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps: getTriggerProps,\n    getTooltipProps: getTooltipProps,\n    getTooltipPositionerProps: getTooltipPositionerProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps\n  };\n}\nvar closeEventName = \"chakra-ui:close-tooltip\";\nfunction useCloseEvent(ref, close) {\n  (0, import_react.useEffect)(function () {\n    var doc = getDoc(ref);\n    doc.addEventListener(closeEventName, close);\n    return function () {\n      return doc.removeEventListener(closeEventName, close);\n    };\n  }, [close, ref]);\n  return function () {\n    var doc = getDoc(ref);\n    var win = getWin(ref);\n    doc.dispatchEvent(new win.CustomEvent(closeEventName));\n  };\n}\n\n// src/tooltip.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar MotionDiv = (0, import_system.chakra)(import_framer_motion.motion.div);\nvar _Tooltip = (0, import_system.forwardRef)(function (props, ref) {\n  var _a, _b;\n  var styles = (0, import_system.useStyleConfig)(\"Tooltip\", props);\n  var ownProps = (0, import_system.omitThemingProps)(props);\n  var theme = (0, import_system.useTheme)();\n  var children = ownProps.children,\n    label = ownProps.label,\n    shouldWrapChildren = ownProps.shouldWrapChildren,\n    ariaLabel = ownProps[\"aria-label\"],\n    hasArrow = ownProps.hasArrow,\n    bg = ownProps.bg,\n    portalProps = ownProps.portalProps,\n    background = ownProps.background,\n    backgroundColor = ownProps.backgroundColor,\n    bgColor = ownProps.bgColor,\n    motionProps = ownProps.motionProps,\n    rest = _objectWithoutProperties(ownProps, [\"children\", \"label\", \"shouldWrapChildren\", \"aria-label\", \"hasArrow\", \"bg\", \"portalProps\", \"background\", \"backgroundColor\", \"bgColor\", \"motionProps\"]);\n  var userDefinedBg = (_b = (_a = background != null ? background : backgroundColor) != null ? _a : bg) != null ? _b : bgColor;\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg;\n    var bgVar = (0, import_system.getCSSVar)(theme, \"colors\", userDefinedBg);\n    styles[import_popper2.popperCSSVars.arrowBg.var] = bgVar;\n  }\n  var tooltip = _useTooltip(_objectSpread({}, rest, {\n    direction: theme.direction\n  }));\n  var shouldWrap = typeof children === \"string\" || shouldWrapChildren;\n  var trigger;\n  if (shouldWrap) {\n    trigger = /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, _objectSpread({\n      display: \"inline-block\",\n      tabIndex: 0\n    }, tooltip.getTriggerProps(), {\n      children: children\n    }));\n  } else {\n    var child = import_react2.Children.only(children);\n    trigger = (0, import_react2.cloneElement)(child, tooltip.getTriggerProps(child.props, child.ref));\n  }\n  var hasAriaLabel = !!ariaLabel;\n  var _tooltipProps = tooltip.getTooltipProps({}, ref);\n  var tooltipProps = hasAriaLabel ? omit(_tooltipProps, [\"role\", \"id\"]) : _tooltipProps;\n  var srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"]);\n  if (!label) {\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, {\n      children: children\n    });\n  }\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {\n    children: [trigger, /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.AnimatePresence, {\n      children: tooltip.isOpen && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_portal.Portal, _objectSpread({}, portalProps, {\n        children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, _objectSpread({}, tooltip.getTooltipPositionerProps(), {\n          __css: {\n            zIndex: styles.zIndex,\n            pointerEvents: \"none\"\n          },\n          children: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(MotionDiv, _objectSpread({\n            variants: scale,\n            initial: \"exit\",\n            animate: \"enter\",\n            exit: \"exit\"\n          }, motionProps, tooltipProps, {\n            __css: styles,\n            children: [label, hasAriaLabel && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, _objectSpread({\n              srOnly: true\n            }, srOnlyProps, {\n              children: ariaLabel\n            })), hasArrow && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n              \"data-popper-arrow\": true,\n              className: \"chakra-tooltip__arrow-wrapper\",\n              children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n                \"data-popper-arrow-inner\": true,\n                className: \"chakra-tooltip__arrow\",\n                __css: {\n                  bg: styles.bg\n                }\n              })\n            })]\n          }))\n        }))\n      }))\n    })]\n  });\n});\n_Tooltip.displayName = \"Tooltip\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Tooltip: _Tooltip,\n  useTooltip: _useTooltip\n});","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RangeSlider: function RangeSlider() {\n    return _RangeSlider;\n  },\n  RangeSliderFilledTrack: function RangeSliderFilledTrack() {\n    return _RangeSliderFilledTrack;\n  },\n  RangeSliderMark: function RangeSliderMark() {\n    return _RangeSliderMark;\n  },\n  RangeSliderProvider: function RangeSliderProvider() {\n    return _RangeSliderProvider;\n  },\n  RangeSliderThumb: function RangeSliderThumb() {\n    return _RangeSliderThumb;\n  },\n  RangeSliderTrack: function RangeSliderTrack() {\n    return _RangeSliderTrack;\n  },\n  Slider: function Slider() {\n    return _Slider;\n  },\n  SliderFilledTrack: function SliderFilledTrack() {\n    return _SliderFilledTrack;\n  },\n  SliderMark: function SliderMark() {\n    return _SliderMark;\n  },\n  SliderProvider: function SliderProvider() {\n    return _SliderProvider;\n  },\n  SliderThumb: function SliderThumb() {\n    return _SliderThumb;\n  },\n  SliderTrack: function SliderTrack() {\n    return _SliderTrack;\n  },\n  useRangeSlider: function useRangeSlider() {\n    return _useRangeSlider;\n  },\n  useRangeSliderContext: function useRangeSliderContext() {\n    return _useRangeSliderContext;\n  },\n  useRangeSliderStyles: function useRangeSliderStyles() {\n    return _useRangeSliderStyles;\n  },\n  useSlider: function useSlider() {\n    return _useSlider;\n  },\n  useSliderContext: function useSliderContext() {\n    return _useSliderContext;\n  },\n  useSliderStyles: function useSliderStyles() {\n    return _useSliderStyles;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/range-slider.tsx\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// ../../legacy/utils/src/dom.ts\nvar dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : void 0;\n};\nvar ariaAttr = function ariaAttr(condition) {\n  return condition ? true : void 0;\n};\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\n\n// ../../legacy/utils/src/function.ts\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/range-slider.tsx\nvar import_react2 = require(\"react\");\n\n// src/use-range-slider.ts\nvar import_react_use_pan_event = require(\"@chakra-ui/react-use-pan-event\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_use_callback_ref = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_number_utils = require(\"@chakra-ui/number-utils\");\nvar import_react = require(\"react\");\n\n// src/slider-utils.ts\nfunction getIds(id) {\n  return {\n    root: \"slider-root-\".concat(id),\n    getThumb: function getThumb(i) {\n      return \"slider-thumb-\".concat(id, \"-\").concat(i);\n    },\n    getInput: function getInput(i) {\n      return \"slider-input-\".concat(id, \"-\").concat(i);\n    },\n    track: \"slider-track-\".concat(id),\n    innerTrack: \"slider-filled-track-\".concat(id),\n    getMarker: function getMarker(i) {\n      return \"slider-marker-\".concat(id, \"-\").concat(i);\n    },\n    output: \"slider-output-\".concat(id)\n  };\n}\nfunction orient(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\nvar normalize = function normalize(a) {\n  return a || zeroSize;\n};\nfunction getStyles(options) {\n  var orientation = options.orientation,\n    thumbPercents = options.thumbPercents,\n    thumbRects = options.thumbRects,\n    isReversed = options.isReversed;\n  var getThumbStyle = function getThumbStyle(i) {\n    var _a;\n    var rect = (_a = thumbRects[i]) != null ? _a : zeroSize;\n    return _objectSpread({\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.height / 2, \"px)\")\n      },\n      horizontal: {\n        left: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.width / 2, \"px)\")\n      }\n    }));\n  };\n  var size = orientation === \"vertical\" ? thumbRects.reduce(function (a, b) {\n    return normalize(a).height > normalize(b).height ? a : b;\n  }, zeroSize) : thumbRects.reduce(function (a, b) {\n    return normalize(a).width > normalize(b).width ? a : b;\n  }, zeroSize);\n  var rootStyle = _objectSpread({\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0\n  }, orient({\n    orientation: orientation,\n    vertical: size ? {\n      paddingLeft: size.width / 2,\n      paddingRight: size.width / 2\n    } : {},\n    horizontal: size ? {\n      paddingTop: size.height / 2,\n      paddingBottom: size.height / 2\n    } : {}\n  }));\n  var trackStyle = _objectSpread({\n    position: \"absolute\"\n  }, orient({\n    orientation: orientation,\n    vertical: {\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      height: \"100%\"\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      width: \"100%\"\n    }\n  }));\n  var isSingleThumb = thumbPercents.length === 1;\n  var fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  var range = isSingleThumb ? fallback : thumbPercents;\n  var start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  var percent = Math.abs(range[range.length - 1] - range[0]);\n  var innerTrackStyle = _objectSpread({}, trackStyle, orient({\n    orientation: orientation,\n    vertical: isReversed ? {\n      height: \"\".concat(percent, \"%\"),\n      top: \"\".concat(start, \"%\")\n    } : {\n      height: \"\".concat(percent, \"%\"),\n      bottom: \"\".concat(start, \"%\")\n    },\n    horizontal: isReversed ? {\n      width: \"\".concat(percent, \"%\"),\n      right: \"\".concat(start, \"%\")\n    } : {\n      width: \"\".concat(percent, \"%\"),\n      left: \"\".concat(start, \"%\")\n    }\n  }));\n  return {\n    trackStyle: trackStyle,\n    innerTrackStyle: innerTrackStyle,\n    rootStyle: rootStyle,\n    getThumbStyle: getThumbStyle\n  };\n}\nfunction getIsReversed(options) {\n  var isReversed = options.isReversed,\n    direction = options.direction,\n    orientation = options.orientation;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n  return !isReversed;\n}\n\n// src/use-range-slider.ts\nvar import_react_use_size = require(\"@chakra-ui/react-use-size\");\nfunction _useRangeSlider(props) {\n  var _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    onChange = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    isReversedProp = props.isReversed,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    onChangeStartProp = props.onChangeStart,\n    onChangeEndProp = props.onChangeEnd,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    getAriaValueTextProp = props.getAriaValueText,\n    ariaValueText = props[\"aria-valuetext\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    name = props.name,\n    _props$focusThumbOnCh = props.focusThumbOnChange,\n    focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh,\n    _props$minStepsBetwee = props.minStepsBetweenThumbs,\n    minStepsBetweenThumbs = _props$minStepsBetwee === void 0 ? 0 : _props$minStepsBetwee,\n    htmlProps = _objectWithoutProperties(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\", \"minStepsBetweenThumbs\"]);\n  var onChangeStart = (0, import_react_use_callback_ref.useCallbackRef)(onChangeStartProp);\n  var onChangeEnd = (0, import_react_use_callback_ref.useCallbackRef)(onChangeEndProp);\n  var getAriaValueText = (0, import_react_use_callback_ref.useCallbackRef)(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction: direction,\n    orientation: orientation\n  });\n  var _ref = (0, import_react_use_controllable_state.useControllableState)({\n      value: valueProp,\n      defaultValue: defaultValue != null ? defaultValue : [25, 75],\n      onChange: onChange\n    }),\n    _ref2 = _slicedToArray(_ref, 2),\n    valueState = _ref2[0],\n    setValue = _ref2[1];\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\"[range-slider] You passed an invalid value for `value` or `defaultValue`, expected `Array` but got `\".concat(typeof valueState, \"`\"));\n  }\n  var _ref3 = (0, import_react.useState)(false),\n    _ref4 = _slicedToArray(_ref3, 2),\n    isDragging = _ref4[0],\n    setDragging = _ref4[1];\n  var _ref5 = (0, import_react.useState)(false),\n    _ref6 = _slicedToArray(_ref5, 2),\n    isFocused = _ref6[0],\n    setFocused = _ref6[1];\n  var _ref7 = (0, import_react.useState)(-1),\n    _ref8 = _slicedToArray(_ref7, 2),\n    activeIndex = _ref8[0],\n    setActiveIndex = _ref8[1];\n  var isInteractive = !(isDisabled || isReadOnly);\n  var initialValue = (0, import_react.useRef)(valueState);\n  var value = valueState.map(function (val) {\n    return (0, import_number_utils.clampValue)(val, min, max);\n  });\n  var spacing = minStepsBetweenThumbs * step;\n  var valueBounds = getValueBounds(value, min, max, spacing);\n  var stateRef = (0, import_react.useRef)({\n    eventSource: null,\n    value: [],\n    valueBounds: []\n  });\n  stateRef.current.value = value;\n  stateRef.current.valueBounds = valueBounds;\n  var reversedValue = value.map(function (val) {\n    return max - val + min;\n  });\n  var thumbValues = isReversed ? reversedValue : value;\n  var thumbPercents = thumbValues.map(function (val) {\n    return (0, import_number_utils.valueToPercent)(val, min, max);\n  });\n  var isVertical = orientation === \"vertical\";\n  var trackRef = (0, import_react.useRef)(null);\n  var rootRef = (0, import_react.useRef)(null);\n  var thumbRects = (0, import_react_use_size.useSizes)({\n    getNodes: function getNodes() {\n      var rootNode = rootRef.current;\n      var thumbNodes = rootNode == null ? void 0 : rootNode.querySelectorAll(\"[role=slider]\");\n      return thumbNodes ? Array.from(thumbNodes) : [];\n    }\n  });\n  var reactId = (0, import_react.useId)();\n  var uuid = idProp != null ? idProp : reactId;\n  var ids = getIds(uuid);\n  var getValueFromPointer = (0, import_react.useCallback)(function (event) {\n    var _a, _b;\n    if (!trackRef.current) return;\n    stateRef.current.eventSource = \"pointer\";\n    var rect = trackRef.current.getBoundingClientRect();\n    var _ref9 = (_b = (_a = event.touches) == null ? void 0 : _a[0]) != null ? _b : event,\n      clientX = _ref9.clientX,\n      clientY = _ref9.clientY;\n    var diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n    var length = isVertical ? rect.height : rect.width;\n    var percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    return (0, import_number_utils.percentToValue)(percent, min, max);\n  }, [isVertical, isReversed, max, min]);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var actions = (0, import_react.useMemo)(function () {\n    return {\n      setValueAtIndex: function setValueAtIndex(index, val) {\n        if (!isInteractive) return;\n        var bounds = stateRef.current.valueBounds[index];\n        val = parseFloat((0, import_number_utils.roundValueToStep)(val, bounds.min, oneStep));\n        val = (0, import_number_utils.clampValue)(val, bounds.min, bounds.max);\n        var next = _toConsumableArray(stateRef.current.value);\n        next[index] = val;\n        setValue(next);\n      },\n      setActiveIndex: setActiveIndex,\n      stepUp: function stepUp(index) {\n        var step2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : oneStep;\n        var valueAtIndex = stateRef.current.value[index];\n        var next = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;\n        actions.setValueAtIndex(index, next);\n      },\n      stepDown: function stepDown(index) {\n        var step2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : oneStep;\n        var valueAtIndex = stateRef.current.value[index];\n        var next = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;\n        actions.setValueAtIndex(index, next);\n      },\n      reset: function reset() {\n        setValue(initialValue.current);\n      }\n    };\n  }, [oneStep, isReversed, setValue, isInteractive]);\n  var onKeyDown = (0, import_react.useCallback)(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      ArrowRight: function ArrowRight() {\n        return actions.stepUp(activeIndex);\n      },\n      ArrowUp: function ArrowUp() {\n        return actions.stepUp(activeIndex);\n      },\n      ArrowLeft: function ArrowLeft() {\n        return actions.stepDown(activeIndex);\n      },\n      ArrowDown: function ArrowDown() {\n        return actions.stepDown(activeIndex);\n      },\n      PageUp: function PageUp() {\n        return actions.stepUp(activeIndex, tenSteps);\n      },\n      PageDown: function PageDown() {\n        return actions.stepDown(activeIndex, tenSteps);\n      },\n      Home: function Home() {\n        var value2 = valueBounds[activeIndex].min;\n        actions.setValueAtIndex(activeIndex, value2);\n      },\n      End: function End() {\n        var value2 = valueBounds[activeIndex].max;\n        actions.setValueAtIndex(activeIndex, value2);\n      }\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      stateRef.current.eventSource = \"keyboard\";\n    }\n  }, [actions, activeIndex, tenSteps, valueBounds]);\n  var _ref10 = (0, import_react.useMemo)(function () {\n      return getStyles({\n        isReversed: isReversed,\n        orientation: orientation,\n        thumbRects: thumbRects,\n        thumbPercents: thumbPercents\n      });\n    }, [isReversed, orientation, thumbPercents, thumbRects]),\n    getThumbStyle = _ref10.getThumbStyle,\n    rootStyle = _ref10.rootStyle,\n    trackStyle = _ref10.trackStyle,\n    innerTrackStyle = _ref10.innerTrackStyle;\n  var focusThumb = (0, import_react.useCallback)(function (index) {\n    var _a;\n    var idx = index != null ? index : activeIndex;\n    if (idx !== -1 && focusThumbOnChange) {\n      var id = ids.getThumb(idx);\n      var thumb = (_a = rootRef.current) == null ? void 0 : _a.ownerDocument.getElementById(id);\n      if (thumb) {\n        setTimeout(function () {\n          return thumb.focus();\n        });\n      }\n    }\n  }, [focusThumbOnChange, activeIndex, ids]);\n  (0, import_react_use_update_effect.useUpdateEffect)(function () {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    }\n  }, [value, onChangeEnd]);\n  var _onPanSessionStart = function onPanSessionStart(event) {\n    var pointValue = getValueFromPointer(event) || 0;\n    var distances = stateRef.current.value.map(function (val) {\n      return Math.abs(val - pointValue);\n    });\n    var closest = Math.min.apply(Math, _toConsumableArray(distances));\n    var index = distances.indexOf(closest);\n    var thumbsAtPosition = distances.filter(function (distance) {\n      return distance === closest;\n    });\n    var isThumbStacked = thumbsAtPosition.length > 1;\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  var _onPan = function onPan(event) {\n    if (activeIndex == -1) return;\n    var pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  (0, import_react_use_pan_event.usePanEvent)(rootRef, {\n    onPanSessionStart: function onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setDragging(true);\n      _onPanSessionStart(event);\n      onChangeStart == null ? void 0 : onChangeStart(stateRef.current.value);\n    },\n    onPanSessionEnd: function onPanSessionEnd() {\n      if (!isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    },\n    onPan: function onPan(event) {\n      if (!isInteractive) return;\n      _onPan(event);\n    }\n  });\n  var getRootProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, htmlProps, {\n      id: ids.root,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _objectSpread({}, props2.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);\n  var getTrackProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _objectSpread({}, props2.style, trackStyle)\n    });\n  }, [isDisabled, trackStyle, ids]);\n  var getInnerTrackProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      id: ids.innerTrack,\n      style: _objectSpread({}, props2.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle, ids]);\n  var getThumbProps = (0, import_react.useCallback)(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _a;\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, [\"index\"]);\n    var valueAtIndex = value[index];\n    if (valueAtIndex == null) {\n      throw new TypeError(\"[range-slider > thumb] Cannot find value at index `\".concat(index, \"`. The `value` or `defaultValue` length is : \").concat(value.length));\n    }\n    var bounds = valueBounds[index];\n    return _objectSpread({}, rest, {\n      ref: ref,\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: ids.getThumb(index),\n      \"data-active\": dataAttr(isDragging && activeIndex === index),\n      \"aria-valuetext\": (_a = getAriaValueText == null ? void 0 : getAriaValueText(valueAtIndex)) != null ? _a : ariaValueText == null ? void 0 : ariaValueText[index],\n      \"aria-valuemin\": bounds.min,\n      \"aria-valuemax\": bounds.max,\n      \"aria-valuenow\": valueAtIndex,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel == null ? void 0 : ariaLabel[index],\n      \"aria-labelledby\": (ariaLabel == null ? void 0 : ariaLabel[index]) ? void 0 : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index],\n      style: _objectSpread({}, props2.style, getThumbStyle(index)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, function () {\n        setFocused(true);\n        setActiveIndex(index);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function () {\n        setFocused(false);\n        setActiveIndex(-1);\n      })\n    });\n  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);\n  var getOutputProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      id: ids.output,\n      htmlFor: value.map(function (v, i) {\n        return ids.getThumb(i);\n      }).join(\" \"),\n      \"aria-live\": \"off\"\n    });\n  }, [ids, value]);\n  var getMarkerProps = (0, import_react.useCallback)(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var v = props2.value,\n      rest = _objectWithoutProperties(props2, [\"value\"]);\n    var isInRange = !(v < min || v > max);\n    var isHighlighted = v >= value[0] && v <= value[value.length - 1];\n    var percent = (0, import_number_utils.valueToPercent)(v, min, max);\n    percent = isReversed ? 100 - percent : percent;\n    var markerStyle = _objectSpread({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: \"\".concat(percent, \"%\")\n      },\n      horizontal: {\n        left: \"\".concat(percent, \"%\")\n      }\n    }));\n    return _objectSpread({}, rest, {\n      ref: ref,\n      id: ids.getMarker(props2.value),\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _objectSpread({}, props2.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value, ids]);\n  var getInputProps = (0, import_react.useCallback)(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, [\"index\"]);\n    return _objectSpread({}, rest, {\n      ref: ref,\n      id: ids.getInput(index),\n      type: \"hidden\",\n      value: value[index],\n      name: Array.isArray(name) ? name[index] : \"\".concat(name, \"-\").concat(index)\n    });\n  }, [name, value, ids]);\n  var state = {\n    value: value,\n    isFocused: isFocused,\n    isDragging: isDragging,\n    getThumbPercent: function getThumbPercent(index) {\n      return thumbPercents[index];\n    },\n    getThumbMinValue: function getThumbMinValue(index) {\n      return valueBounds[index].min;\n    },\n    getThumbMaxValue: function getThumbMaxValue(index) {\n      return valueBounds[index].max;\n    }\n  };\n  return {\n    state: state,\n    actions: actions,\n    getRootProps: getRootProps,\n    getTrackProps: getTrackProps,\n    getInnerTrackProps: getInnerTrackProps,\n    getThumbProps: getThumbProps,\n    getMarkerProps: getMarkerProps,\n    getInputProps: getInputProps,\n    getOutputProps: getOutputProps\n  };\n}\nfunction getValueBounds(arr, min, max, spacing) {\n  return arr.map(function (v, i) {\n    var _min = i === 0 ? min : arr[i - 1] + spacing;\n    var _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n    return {\n      min: _min,\n      max: _max\n    };\n  });\n}\n\n// src/range-slider.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar _ref11 = (0, import_react_context.createContext)({\n    name: \"SliderContext\",\n    errorMessage: \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\"\n  }),\n  _ref12 = _slicedToArray(_ref11, 2),\n  _RangeSliderProvider = _ref12[0],\n  _useRangeSliderContext = _ref12[1];\nvar _ref13 = (0, import_react_context.createContext)({\n    name: \"RangeSliderStylesContext\",\n    errorMessage: \"useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<RangeSlider />\\\" \"\n  }),\n  _ref14 = _slicedToArray(_ref13, 2),\n  RangeSliderStylesProvider = _ref14[0],\n  _useRangeSliderStyles = _ref14[1];\nvar _RangeSlider = (0, import_system.forwardRef)(function RangeSlider2(props, ref) {\n  var sliderProps = _objectSpread({\n    orientation: \"horizontal\"\n  }, props);\n  var styles = (0, import_system.useMultiStyleConfig)(\"Slider\", sliderProps);\n  var ownProps = (0, import_system.omitThemingProps)(sliderProps);\n  var _ref15 = (0, import_system.useTheme)(),\n    direction = _ref15.direction;\n  ownProps.direction = direction;\n  var _useRangeSlider2 = _useRangeSlider(ownProps),\n    getRootProps = _useRangeSlider2.getRootProps,\n    context = _objectWithoutProperties(_useRangeSlider2, [\"getRootProps\"]);\n  var ctx = (0, import_react2.useMemo)(function () {\n    return _objectSpread({}, context, {\n      name: sliderProps.name\n    });\n  }, [context, sliderProps.name]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(_RangeSliderProvider, {\n    value: ctx,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(RangeSliderStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, _objectSpread({}, getRootProps({}, ref), {\n        className: \"chakra-slider\",\n        __css: styles.container,\n        children: sliderProps.children\n      }))\n    })\n  });\n});\n_RangeSlider.displayName = \"RangeSlider\";\nvar _RangeSliderThumb = (0, import_system.forwardRef)(function RangeSliderThumb2(props, ref) {\n  var _useRangeSliderContex = _useRangeSliderContext(),\n    getThumbProps = _useRangeSliderContex.getThumbProps,\n    getInputProps = _useRangeSliderContex.getInputProps,\n    name = _useRangeSliderContex.name;\n  var styles = _useRangeSliderStyles();\n  var thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_system.chakra.div, _objectSpread({}, thumbProps, {\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb,\n    children: [thumbProps.children, name && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"input\", _objectSpread({}, getInputProps({\n      index: props.index\n    })))]\n  }));\n});\n_RangeSliderThumb.displayName = \"RangeSliderThumb\";\nvar _RangeSliderTrack = (0, import_system.forwardRef)(function RangeSliderTrack2(props, ref) {\n  var _useRangeSliderContex2 = _useRangeSliderContext(),\n    getTrackProps = _useRangeSliderContex2.getTrackProps;\n  var styles = _useRangeSliderStyles();\n  var trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, _objectSpread({}, trackProps, {\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track,\n    \"data-testid\": \"chakra-range-slider-track\"\n  }));\n});\n_RangeSliderTrack.displayName = \"RangeSliderTrack\";\nvar _RangeSliderFilledTrack = (0, import_system.forwardRef)(function RangeSliderFilledTrack2(props, ref) {\n  var _useRangeSliderContex3 = _useRangeSliderContext(),\n    getInnerTrackProps = _useRangeSliderContex3.getInnerTrackProps;\n  var styles = _useRangeSliderStyles();\n  var trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, _objectSpread({}, trackProps, {\n    className: \"chakra-slider__filled-track\",\n    __css: styles.filledTrack\n  }));\n});\n_RangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\";\nvar _RangeSliderMark = (0, import_system.forwardRef)(function RangeSliderMark2(props, ref) {\n  var _useRangeSliderContex4 = _useRangeSliderContext(),\n    getMarkerProps = _useRangeSliderContex4.getMarkerProps;\n  var markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, _objectSpread({}, markProps, {\n    className: cx(\"chakra-slider__marker\", props.className)\n  }));\n});\n_RangeSliderMark.displayName = \"RangeSliderMark\";\n\n// src/slider.tsx\nvar import_react_context2 = require(\"@chakra-ui/react-context\");\nvar import_system2 = require(\"@chakra-ui/system\");\n\n// src/use-slider.ts\nvar import_react_use_pan_event2 = require(\"@chakra-ui/react-use-pan-event\");\nvar import_react_use_callback_ref2 = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_update_effect2 = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_controllable_state2 = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_use_size2 = require(\"@chakra-ui/react-use-size\");\nvar import_react_use_merge_refs2 = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_react_use_latest_ref = require(\"@chakra-ui/react-use-latest-ref\");\nvar import_number_utils2 = require(\"@chakra-ui/number-utils\");\nvar import_react3 = require(\"react\");\nfunction _useSlider(props) {\n  var _a;\n  var _props$min2 = props.min,\n    min = _props$min2 === void 0 ? 0 : _props$min2,\n    _props$max2 = props.max,\n    max = _props$max2 === void 0 ? 100 : _props$max2,\n    onChange = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    isReversedProp = props.isReversed,\n    _props$direction2 = props.direction,\n    direction = _props$direction2 === void 0 ? \"ltr\" : _props$direction2,\n    _props$orientation2 = props.orientation,\n    orientation = _props$orientation2 === void 0 ? \"horizontal\" : _props$orientation2,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    onChangeStartProp = props.onChangeStart,\n    onChangeEndProp = props.onChangeEnd,\n    _props$step2 = props.step,\n    step = _props$step2 === void 0 ? 1 : _props$step2,\n    getAriaValueTextProp = props.getAriaValueText,\n    ariaValueText = props[\"aria-valuetext\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    name = props.name,\n    _props$focusThumbOnCh2 = props.focusThumbOnChange,\n    focusThumbOnChange = _props$focusThumbOnCh2 === void 0 ? true : _props$focusThumbOnCh2,\n    htmlProps = _objectWithoutProperties(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\"]);\n  var onChangeStart = (0, import_react_use_callback_ref2.useCallbackRef)(onChangeStartProp);\n  var onChangeEnd = (0, import_react_use_callback_ref2.useCallbackRef)(onChangeEndProp);\n  var getAriaValueText = (0, import_react_use_callback_ref2.useCallbackRef)(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction: direction,\n    orientation: orientation\n  });\n  var _ref16 = (0, import_react_use_controllable_state2.useControllableState)({\n      value: valueProp,\n      defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min, max),\n      onChange: onChange\n    }),\n    _ref17 = _slicedToArray(_ref16, 2),\n    computedValue = _ref17[0],\n    setValue = _ref17[1];\n  var _ref18 = (0, import_react3.useState)(false),\n    _ref19 = _slicedToArray(_ref18, 2),\n    isDragging = _ref19[0],\n    setDragging = _ref19[1];\n  var _ref20 = (0, import_react3.useState)(false),\n    _ref21 = _slicedToArray(_ref20, 2),\n    isFocused = _ref21[0],\n    setFocused = _ref21[1];\n  var isInteractive = !(isDisabled || isReadOnly);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var value = (0, import_number_utils2.clampValue)(computedValue, min, max);\n  var reversedValue = max - value + min;\n  var trackValue = isReversed ? reversedValue : value;\n  var thumbPercent = (0, import_number_utils2.valueToPercent)(trackValue, min, max);\n  var isVertical = orientation === \"vertical\";\n  var stateRef = (0, import_react_use_latest_ref.useLatestRef)({\n    min: min,\n    max: max,\n    step: step,\n    isDisabled: isDisabled,\n    value: value,\n    isInteractive: isInteractive,\n    isReversed: isReversed,\n    isVertical: isVertical,\n    eventSource: null,\n    focusThumbOnChange: focusThumbOnChange,\n    orientation: orientation\n  });\n  var trackRef = (0, import_react3.useRef)(null);\n  var thumbRef = (0, import_react3.useRef)(null);\n  var rootRef = (0, import_react3.useRef)(null);\n  var reactId = (0, import_react3.useId)();\n  var uuid = idProp != null ? idProp : reactId;\n  var thumbId = \"slider-thumb-\".concat(uuid),\n    trackId = \"slider-track-\".concat(uuid);\n  var getValueFromPointer = (0, import_react3.useCallback)(function (event) {\n    var _a2, _b;\n    if (!trackRef.current) return;\n    var state2 = stateRef.current;\n    state2.eventSource = \"pointer\";\n    var trackRect = trackRef.current.getBoundingClientRect();\n    var _ref22 = (_b = (_a2 = event.touches) == null ? void 0 : _a2[0]) != null ? _b : event,\n      clientX = _ref22.clientX,\n      clientY = _ref22.clientY;\n    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    var length = isVertical ? trackRect.height : trackRect.width;\n    var percent = diff / length;\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n    var nextValue = (0, import_number_utils2.percentToValue)(percent, state2.min, state2.max);\n    if (state2.step) {\n      nextValue = parseFloat((0, import_number_utils2.roundValueToStep)(nextValue, state2.min, state2.step));\n    }\n    nextValue = (0, import_number_utils2.clampValue)(nextValue, state2.min, state2.max);\n    return nextValue;\n  }, [isVertical, isReversed, stateRef]);\n  var constrain = (0, import_react3.useCallback)(function (value2) {\n    var state2 = stateRef.current;\n    if (!state2.isInteractive) return;\n    value2 = parseFloat((0, import_number_utils2.roundValueToStep)(value2, state2.min, oneStep));\n    value2 = (0, import_number_utils2.clampValue)(value2, state2.min, state2.max);\n    setValue(value2);\n  }, [oneStep, setValue, stateRef]);\n  var actions = (0, import_react3.useMemo)(function () {\n    return {\n      stepUp: function stepUp() {\n        var step2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : oneStep;\n        var next = isReversed ? value - step2 : value + step2;\n        constrain(next);\n      },\n      stepDown: function stepDown() {\n        var step2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : oneStep;\n        var next = isReversed ? value + step2 : value - step2;\n        constrain(next);\n      },\n      reset: function reset() {\n        constrain(defaultValue || 0);\n      },\n      stepTo: function stepTo(value2) {\n        constrain(value2);\n      }\n    };\n  }, [constrain, isReversed, value, oneStep, defaultValue]);\n  var onKeyDown = (0, import_react3.useCallback)(function (event) {\n    var state2 = stateRef.current;\n    var keyMap = {\n      ArrowRight: function ArrowRight() {\n        return actions.stepUp();\n      },\n      ArrowUp: function ArrowUp() {\n        return actions.stepUp();\n      },\n      ArrowLeft: function ArrowLeft() {\n        return actions.stepDown();\n      },\n      ArrowDown: function ArrowDown() {\n        return actions.stepDown();\n      },\n      PageUp: function PageUp() {\n        return actions.stepUp(tenSteps);\n      },\n      PageDown: function PageDown() {\n        return actions.stepDown(tenSteps);\n      },\n      Home: function Home() {\n        return constrain(state2.min);\n      },\n      End: function End() {\n        return constrain(state2.max);\n      }\n    };\n    var action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      state2.eventSource = \"keyboard\";\n    }\n  }, [actions, constrain, tenSteps, stateRef]);\n  var valueText = (_a = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _a : ariaValueText;\n  var thumbSize = (0, import_react_use_size2.useSize)(thumbRef);\n  var _ref23 = (0, import_react3.useMemo)(function () {\n      var state2 = stateRef.current;\n      var thumbRect = thumbSize != null ? thumbSize : {\n        width: 0,\n        height: 0\n      };\n      return getStyles({\n        isReversed: isReversed,\n        orientation: state2.orientation,\n        thumbRects: [thumbRect],\n        thumbPercents: [thumbPercent]\n      });\n    }, [isReversed, thumbSize, thumbPercent, stateRef]),\n    getThumbStyle = _ref23.getThumbStyle,\n    rootStyle = _ref23.rootStyle,\n    trackStyle = _ref23.trackStyle,\n    innerTrackStyle = _ref23.innerTrackStyle;\n  var focusThumb = (0, import_react3.useCallback)(function () {\n    var state2 = stateRef.current;\n    if (state2.focusThumbOnChange) {\n      setTimeout(function () {\n        var _a2;\n        return (_a2 = thumbRef.current) == null ? void 0 : _a2.focus();\n      });\n    }\n  }, [stateRef]);\n  (0, import_react_use_update_effect2.useUpdateEffect)(function () {\n    var state2 = stateRef.current;\n    focusThumb();\n    if (state2.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(state2.value);\n    }\n  }, [value, onChangeEnd]);\n  function setValueFromPointer(event) {\n    var nextValue = getValueFromPointer(event);\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue);\n    }\n  }\n  (0, import_react_use_pan_event2.usePanEvent)(rootRef, {\n    onPanSessionStart: function onPanSessionStart(event) {\n      var state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(true);\n      focusThumb();\n      setValueFromPointer(event);\n      onChangeStart == null ? void 0 : onChangeStart(state2.value);\n    },\n    onPanSessionEnd: function onPanSessionEnd() {\n      var state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(state2.value);\n    },\n    onPan: function onPan(event) {\n      var state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setValueFromPointer(event);\n    }\n  });\n  var getRootProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, htmlProps, {\n      ref: (0, import_react_use_merge_refs2.mergeRefs)(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _objectSpread({}, props2.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  var getTrackProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs2.mergeRefs)(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _objectSpread({}, props2.style, trackStyle)\n    });\n  }, [isDisabled, trackId, trackStyle]);\n  var getInnerTrackProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      style: _objectSpread({}, props2.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle]);\n  var getThumbProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: (0, import_react_use_merge_refs2.mergeRefs)(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? void 0 : ariaLabelledBy,\n      style: _objectSpread({}, props2.style, getThumbStyle(0)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, function () {\n        return setFocused(true);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function () {\n        return setFocused(false);\n      })\n    });\n  }, [isInteractive, thumbId, isDragging, valueText, min, max, value, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown]);\n  var getMarkerProps = (0, import_react3.useCallback)(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var isInRange = !(props2.value < min || props2.value > max);\n    var isHighlighted = value >= props2.value;\n    var markerPercent = (0, import_number_utils2.valueToPercent)(props2.value, min, max);\n    var markerStyle = _objectSpread({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient2({\n      orientation: orientation,\n      vertical: {\n        bottom: isReversed ? \"\".concat(100 - markerPercent, \"%\") : \"\".concat(markerPercent, \"%\")\n      },\n      horizontal: {\n        left: isReversed ? \"\".concat(100 - markerPercent, \"%\") : \"\".concat(markerPercent, \"%\")\n      }\n    }));\n    return _objectSpread({}, props2, {\n      ref: ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _objectSpread({}, props2.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  var getInputProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      type: \"hidden\",\n      value: value,\n      name: name\n    });\n  }, [name, value]);\n  var state = {\n    value: value,\n    isFocused: isFocused,\n    isDragging: isDragging\n  };\n  return {\n    state: state,\n    actions: actions,\n    getRootProps: getRootProps,\n    getTrackProps: getTrackProps,\n    getInnerTrackProps: getInnerTrackProps,\n    getThumbProps: getThumbProps,\n    getMarkerProps: getMarkerProps,\n    getInputProps: getInputProps\n  };\n}\nfunction orient2(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\n\n// src/slider.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar _ref24 = (0, import_react_context2.createContext)({\n    name: \"SliderContext\",\n    hookName: \"useSliderContext\",\n    providerName: \"<Slider />\"\n  }),\n  _ref25 = _slicedToArray(_ref24, 2),\n  _SliderProvider = _ref25[0],\n  _useSliderContext = _ref25[1];\nvar _ref26 = (0, import_react_context2.createContext)({\n    name: \"SliderStylesContext\",\n    hookName: \"useSliderStyles\",\n    providerName: \"<Slider />\"\n  }),\n  _ref27 = _slicedToArray(_ref26, 2),\n  SliderStylesProvider = _ref27[0],\n  _useSliderStyles = _ref27[1];\nvar _Slider = (0, import_system2.forwardRef)(function (props, ref) {\n  var sliderProps = _objectSpread({\n    orientation: \"horizontal\"\n  }, props);\n  var styles = (0, import_system2.useMultiStyleConfig)(\"Slider\", sliderProps);\n  var ownProps = (0, import_system2.omitThemingProps)(sliderProps);\n  var _ref28 = (0, import_system2.useTheme)(),\n    direction = _ref28.direction;\n  ownProps.direction = direction;\n  var _useSlider2 = _useSlider(ownProps),\n    getInputProps = _useSlider2.getInputProps,\n    getRootProps = _useSlider2.getRootProps,\n    context = _objectWithoutProperties(_useSlider2, [\"getInputProps\", \"getRootProps\"]);\n  var rootProps = getRootProps();\n  var inputProps = getInputProps({}, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(_SliderProvider, {\n    value: context,\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(SliderStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(import_system2.chakra.div, _objectSpread({}, rootProps, {\n        className: cx(\"chakra-slider\", sliderProps.className),\n        __css: styles.container,\n        children: [sliderProps.children, /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"input\", _objectSpread({}, inputProps))]\n      }))\n    })\n  });\n});\n_Slider.displayName = \"Slider\";\nvar _SliderThumb = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useSliderContext2 = _useSliderContext(),\n    getThumbProps = _useSliderContext2.getThumbProps;\n  var styles = _useSliderStyles();\n  var thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, _objectSpread({}, thumbProps, {\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb\n  }));\n});\n_SliderThumb.displayName = \"SliderThumb\";\nvar _SliderTrack = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useSliderContext3 = _useSliderContext(),\n    getTrackProps = _useSliderContext3.getTrackProps;\n  var styles = _useSliderStyles();\n  var trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, _objectSpread({}, trackProps, {\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track\n  }));\n});\n_SliderTrack.displayName = \"SliderTrack\";\nvar _SliderFilledTrack = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useSliderContext4 = _useSliderContext(),\n    getInnerTrackProps = _useSliderContext4.getInnerTrackProps;\n  var styles = _useSliderStyles();\n  var trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, _objectSpread({}, trackProps, {\n    className: cx(\"chakra-slider__filled-track\", props.className),\n    __css: styles.filledTrack\n  }));\n});\n_SliderFilledTrack.displayName = \"SliderFilledTrack\";\nvar _SliderMark = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useSliderContext5 = _useSliderContext(),\n    getMarkerProps = _useSliderContext5.getMarkerProps;\n  var styles = _useSliderStyles();\n  var markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, _objectSpread({}, markProps, {\n    className: cx(\"chakra-slider__marker\", props.className),\n    __css: styles.mark\n  }));\n});\n_SliderMark.displayName = \"SliderMark\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RangeSlider: _RangeSlider,\n  RangeSliderFilledTrack: _RangeSliderFilledTrack,\n  RangeSliderMark: _RangeSliderMark,\n  RangeSliderProvider: _RangeSliderProvider,\n  RangeSliderThumb: _RangeSliderThumb,\n  RangeSliderTrack: _RangeSliderTrack,\n  Slider: _Slider,\n  SliderFilledTrack: _SliderFilledTrack,\n  SliderMark: _SliderMark,\n  SliderProvider: _SliderProvider,\n  SliderThumb: _SliderThumb,\n  SliderTrack: _SliderTrack,\n  useRangeSlider: _useRangeSlider,\n  useRangeSliderContext: _useRangeSliderContext,\n  useRangeSliderStyles: _useRangeSliderStyles,\n  useSlider: _useSlider,\n  useSliderContext: _useSliderContext,\n  useSliderStyles: _useSliderStyles\n});","map":null,"metadata":{},"sourceType":"script"}
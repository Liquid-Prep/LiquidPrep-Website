{"ast":null,"code":"import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n  constructor() {\n    super(...arguments);\n    this.id = id++;\n  }\n  update() {\n    if (!this.node.presenceContext) return;\n    const {\n      isPresent,\n      onExitComplete,\n      custom\n    } = this.node.presenceContext;\n    const {\n      isPresent: prevIsPresent\n    } = this.node.prevPresenceContext || {};\n    if (!this.node.animationState || isPresent === prevIsPresent) {\n      return;\n    }\n    const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, {\n      custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom\n    });\n    if (onExitComplete && !isPresent) {\n      exitAnimation.then(() => onExitComplete(this.id));\n    }\n  }\n  mount() {\n    const {\n      register\n    } = this.node.presenceContext || {};\n    if (register) {\n      this.unmount = register(this.id);\n    }\n  }\n  unmount() {}\n}\nexport { ExitAnimationFeature };","map":{"version":3,"names":["AnimationType","Feature","id","ExitAnimationFeature","constructor","arguments","update","node","presenceContext","isPresent","onExitComplete","custom","prevIsPresent","prevPresenceContext","animationState","exitAnimation","setActive","Exit","getProps","then","mount","register","unmount"],"sources":["/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs"],"sourcesContent":["import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,OAAO,QAAQ,gBAAgB;AAExC,IAAIC,EAAE,GAAG,CAAC;AACV,MAAMC,oBAAoB,SAASF,OAAO,CAAC;EACvCG,WAAW,GAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACH,EAAE,GAAGA,EAAE,EAAE;EAClB;EACAI,MAAM,GAAG;IACL,IAAI,CAAC,IAAI,CAACC,IAAI,CAACC,eAAe,EAC1B;IACJ,MAAM;MAAEC,SAAS;MAAEC,cAAc;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACJ,IAAI,CAACC,eAAe;IACvE,MAAM;MAAEC,SAAS,EAAEG;IAAc,CAAC,GAAG,IAAI,CAACL,IAAI,CAACM,mBAAmB,IAAI,CAAC,CAAC;IACxE,IAAI,CAAC,IAAI,CAACN,IAAI,CAACO,cAAc,IAAIL,SAAS,KAAKG,aAAa,EAAE;MAC1D;IACJ;IACA,MAAMG,aAAa,GAAG,IAAI,CAACR,IAAI,CAACO,cAAc,CAACE,SAAS,CAAChB,aAAa,CAACiB,IAAI,EAAE,CAACR,SAAS,EAAE;MAAEE,MAAM,EAAEA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAG,IAAI,CAACJ,IAAI,CAACW,QAAQ,EAAE,CAACP;IAAO,CAAC,CAAC;IACjL,IAAID,cAAc,IAAI,CAACD,SAAS,EAAE;MAC9BM,aAAa,CAACI,IAAI,CAAC,MAAMT,cAAc,CAAC,IAAI,CAACR,EAAE,CAAC,CAAC;IACrD;EACJ;EACAkB,KAAK,GAAG;IACJ,MAAM;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACd,IAAI,CAACC,eAAe,IAAI,CAAC,CAAC;IACpD,IAAIa,QAAQ,EAAE;MACV,IAAI,CAACC,OAAO,GAAGD,QAAQ,CAAC,IAAI,CAACnB,EAAE,CAAC;IACpC;EACJ;EACAoB,OAAO,GAAG,CAAE;AAChB;AAEA,SAASnB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
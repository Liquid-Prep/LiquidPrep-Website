{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Spinner: function Spinner() {\n    return _Spinner;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/spinner.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar spin = (0, import_system.keyframes)({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar _Spinner = (0, import_system.forwardRef)(function (props, ref) {\n  var styles = (0, import_system.useStyleConfig)(\"Spinner\", props);\n  var _ref = (0, import_system.omitThemingProps)(props),\n    _ref$label = _ref.label,\n    label = _ref$label === void 0 ? \"Loading...\" : _ref$label,\n    _ref$thickness = _ref.thickness,\n    thickness = _ref$thickness === void 0 ? \"2px\" : _ref$thickness,\n    _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? \"0.45s\" : _ref$speed,\n    _ref$emptyColor = _ref.emptyColor,\n    emptyColor = _ref$emptyColor === void 0 ? \"transparent\" : _ref$emptyColor,\n    className = _ref.className,\n    rest = _objectWithoutProperties(_ref, [\"label\", \"thickness\", \"speed\", \"emptyColor\", \"className\"]);\n  var _className = (0, import_shared_utils.cx)(\"chakra-spinner\", className);\n  var spinnerStyles = _objectSpread({\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: \"\".concat(spin, \" \").concat(speed, \" linear infinite\")\n  }, styles);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, _objectSpread({\n    ref: ref,\n    __css: spinnerStyles,\n    className: _className\n  }, rest, {\n    children: label && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n      srOnly: true,\n      children: label\n    })\n  }));\n});\n_Spinner.displayName = \"Spinner\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Spinner: _Spinner\n});","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toESM = function __toESM(mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod);\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  assignRef: function assignRef() {\n    return _assignRef;\n  },\n  useAnimationState: function useAnimationState() {\n    return _useAnimationState;\n  },\n  useBoolean: function useBoolean() {\n    return _useBoolean;\n  },\n  useCallbackRef: function useCallbackRef() {\n    return _useCallbackRef;\n  },\n  useClipboard: function useClipboard() {\n    return _useClipboard;\n  },\n  useConst: function useConst() {\n    return _useConst;\n  },\n  useControllableProp: function useControllableProp() {\n    return _useControllableProp;\n  },\n  useControllableState: function useControllableState() {\n    return _useControllableState;\n  },\n  useDimensions: function useDimensions() {\n    return _useDimensions;\n  },\n  useDisclosure: function useDisclosure() {\n    return _useDisclosure;\n  },\n  useEventListener: function useEventListener() {\n    return _useEventListener;\n  },\n  useEventListenerMap: function useEventListenerMap() {\n    return _useEventListenerMap;\n  },\n  useFocusEffect: function useFocusEffect() {\n    return _useFocusEffect;\n  },\n  useFocusOnHide: function useFocusOnHide() {\n    return _useFocusOnHide;\n  },\n  useFocusOnPointerDown: function useFocusOnPointerDown() {\n    return _useFocusOnPointerDown;\n  },\n  useFocusOnShow: function useFocusOnShow() {\n    return _useFocusOnShow;\n  },\n  useForceUpdate: function useForceUpdate() {\n    return _useForceUpdate;\n  },\n  useId: function useId() {\n    return _useId;\n  },\n  useIds: function useIds() {\n    return _useIds;\n  },\n  useInterval: function useInterval() {\n    return _useInterval;\n  },\n  useLatestRef: function useLatestRef() {\n    return _useLatestRef;\n  },\n  useMergeRefs: function useMergeRefs() {\n    return _useMergeRefs;\n  },\n  useMouseDownRef: function useMouseDownRef() {\n    return _useMouseDownRef;\n  },\n  useOptionalPart: function useOptionalPart() {\n    return _useOptionalPart;\n  },\n  useOutsideClick: function useOutsideClick() {\n    return _useOutsideClick;\n  },\n  usePanGesture: function usePanGesture() {\n    return _usePanGesture;\n  },\n  usePointerEvent: function usePointerEvent() {\n    return _usePointerEvent;\n  },\n  usePrevious: function usePrevious() {\n    return _usePrevious;\n  },\n  useSafeLayoutEffect: function useSafeLayoutEffect() {\n    return _useSafeLayoutEffect;\n  },\n  useShortcut: function useShortcut() {\n    return _useShortcut;\n  },\n  useTimeout: function useTimeout() {\n    return _useTimeout;\n  },\n  useUnmountEffect: function useUnmountEffect() {\n    return _useUnmountEffect;\n  },\n  useUpdateEffect: function useUpdateEffect() {\n    return _useUpdateEffect;\n  },\n  useWhyDidYouUpdate: function useWhyDidYouUpdate() {\n    return _useWhyDidYouUpdate;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/use-animation-state.ts\nvar import_utils3 = require(\"@chakra-ui/utils\");\nvar import_react4 = require(\"react\");\n\n// src/use-event-listener.ts\nvar import_utils2 = require(\"@chakra-ui/utils\");\nvar import_react3 = require(\"react\");\n\n// src/use-callback-ref.ts\nvar import_react2 = require(\"react\");\n\n// src/use-safe-layout-effect.ts\nvar import_utils = require(\"@chakra-ui/utils\");\nvar import_react = require(\"react\");\nvar _useSafeLayoutEffect = import_utils.isBrowser ? import_react.useLayoutEffect : import_react.useEffect;\n\n// src/use-callback-ref.ts\nfunction _useCallbackRef(fn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var ref = (0, import_react2.useRef)(fn);\n  _useSafeLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return (0, import_react2.useCallback)(function () {\n    var _a2;\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_a = ref.current) == null ? void 0 : (_a2 = _a).call.apply(_a2, [ref].concat(args));\n  }, deps);\n}\n\n// src/use-event-listener.ts\nfunction _useEventListener(event, handler, env, options) {\n  var listener = _useCallbackRef(handler);\n  (0, import_react3.useEffect)(function () {\n    var _a;\n    var node = (_a = (0, import_utils2.runIfFn)(env)) != null ? _a : document;\n    if (!handler) {\n      return;\n    }\n    node.addEventListener(event, listener, options);\n    return function () {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, env, options, listener, handler]);\n  return function () {\n    var _a;\n    var node = (_a = (0, import_utils2.runIfFn)(env)) != null ? _a : document;\n    node.removeEventListener(event, listener, options);\n  };\n}\n\n// src/use-animation-state.ts\nfunction _useAnimationState(props) {\n  var isOpen = props.isOpen,\n    ref = props.ref;\n  var _ref = (0, import_react4.useState)(isOpen),\n    _ref2 = _slicedToArray(_ref, 2),\n    mounted = _ref2[0],\n    setMounted = _ref2[1];\n  var _ref3 = (0, import_react4.useState)(false),\n    _ref4 = _slicedToArray(_ref3, 2),\n    once = _ref4[0],\n    setOnce = _ref4[1];\n  (0, import_react4.useEffect)(function () {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  _useEventListener(\"animationend\", function () {\n    setMounted(isOpen);\n  }, function () {\n    return ref.current;\n  });\n  var hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete: function onComplete() {\n      var _a;\n      var win = (0, import_utils3.getOwnerWindow)(ref.current);\n      var evt = new win.CustomEvent(\"animationend\", {\n        bubbles: true\n      });\n      (_a = ref.current) == null ? void 0 : _a.dispatchEvent(evt);\n    }\n  };\n}\n\n// src/use-boolean.ts\nvar import_react5 = require(\"react\");\nfunction _useBoolean() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var _ref5 = (0, import_react5.useState)(initialState),\n    _ref6 = _slicedToArray(_ref5, 2),\n    value = _ref6[0],\n    setValue = _ref6[1];\n  var callbacks = (0, import_react5.useMemo)(function () {\n    return {\n      on: function on() {\n        return setValue(true);\n      },\n      off: function off() {\n        return setValue(false);\n      },\n      toggle: function toggle() {\n        return setValue(function (prev) {\n          return !prev;\n        });\n      }\n    };\n  }, []);\n  return [value, callbacks];\n}\n\n// src/use-clipboard.ts\nvar import_react6 = require(\"react\");\nvar import_copy_to_clipboard = __toESM(require(\"copy-to-clipboard\"));\nfunction _useClipboard(value) {\n  var optionsOrTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _ref7 = (0, import_react6.useState)(false),\n    _ref8 = _slicedToArray(_ref7, 2),\n    hasCopied = _ref8[0],\n    setHasCopied = _ref8[1];\n  var _ref9 = (0, import_react6.useState)(value),\n    _ref10 = _slicedToArray(_ref9, 2),\n    valueState = _ref10[0],\n    setValueState = _ref10[1];\n  (0, import_react6.useEffect)(function () {\n    return setValueState(value);\n  }, [value]);\n  var _ref11 = typeof optionsOrTimeout === \"number\" ? {\n      timeout: optionsOrTimeout\n    } : optionsOrTimeout,\n    _ref11$timeout = _ref11.timeout,\n    timeout = _ref11$timeout === void 0 ? 1500 : _ref11$timeout,\n    copyOptions = _objectWithoutProperties(_ref11, [\"timeout\"]);\n  var onCopy = (0, import_react6.useCallback)(function () {\n    var didCopy = (0, import_copy_to_clipboard.default)(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  (0, import_react6.useEffect)(function () {\n    var timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(function () {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\n\n// src/use-const.ts\nvar import_react7 = require(\"react\");\nfunction _useConst(init) {\n  var ref = (0, import_react7.useRef)(null);\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? init() : init;\n  }\n  return ref.current;\n}\n\n// src/use-controllable.ts\nvar import_utils4 = require(\"@chakra-ui/utils\");\nvar import_react8 = require(\"react\");\nfunction _useControllableProp(prop, state) {\n  var isControlled = prop !== void 0;\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nfunction _useControllableState(props) {\n  var valueProp = props.value,\n    defaultValue = props.defaultValue,\n    onChange = props.onChange,\n    _props$shouldUpdate = props.shouldUpdate,\n    shouldUpdate = _props$shouldUpdate === void 0 ? function (prev, next) {\n      return prev !== next;\n    } : _props$shouldUpdate;\n  var onChangeProp = _useCallbackRef(onChange);\n  var shouldUpdateProp = _useCallbackRef(shouldUpdate);\n  var _ref12 = (0, import_react8.useState)(defaultValue),\n    _ref13 = _slicedToArray(_ref12, 2),\n    valueState = _ref13[0],\n    setValue = _ref13[1];\n  var isControlled = valueProp !== void 0;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = (0, import_react8.useCallback)(function (next) {\n    var nextValue = (0, import_utils4.runIfFn)(next, value);\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [isControlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, updateValue];\n}\n\n// src/use-dimensions.ts\nvar import_utils5 = require(\"@chakra-ui/utils\");\nvar import_react9 = require(\"react\");\nfunction _useDimensions(ref, observe) {\n  var _ref14 = (0, import_react9.useState)(null),\n    _ref15 = _slicedToArray(_ref14, 2),\n    dimensions = _ref15[0],\n    setDimensions = _ref15[1];\n  var rafId = (0, import_react9.useRef)();\n  _useSafeLayoutEffect(function () {\n    function measure() {\n      var node = ref.current;\n      if (!node) return;\n      rafId.current = requestAnimationFrame(function () {\n        var boxModel = (0, import_utils5.getBox)(node);\n        setDimensions(boxModel);\n      });\n    }\n    measure();\n    if (observe) {\n      window.addEventListener(\"resize\", measure);\n      window.addEventListener(\"scroll\", measure);\n    }\n    return function () {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure);\n        window.removeEventListener(\"scroll\", measure);\n      }\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [observe]);\n  return dimensions;\n}\n\n// src/use-disclosure.ts\nvar import_utils6 = require(\"@chakra-ui/utils\");\n\n// src/use-id.ts\nvar import_react10 = require(\"react\");\nfunction _useId(idProp, prefix) {\n  var id = (0, import_react10.useId)();\n  return (0, import_react10.useMemo)(function () {\n    return idProp || [prefix, id].filter(Boolean).join(\"-\");\n  }, [idProp, prefix, id]);\n}\nfunction _useIds(idProp) {\n  for (var _len2 = arguments.length, prefixes = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    prefixes[_key2 - 1] = arguments[_key2];\n  }\n  var id = _useId(idProp);\n  return (0, import_react10.useMemo)(function () {\n    return prefixes.map(function (prefix) {\n      return \"\".concat(prefix, \"-\").concat(id);\n    });\n  }, [id, prefixes]);\n}\nfunction _useOptionalPart(partId) {\n  var _ref16 = (0, import_react10.useState)(null),\n    _ref17 = _slicedToArray(_ref16, 2),\n    id = _ref17[0],\n    setId = _ref17[1];\n  var ref = (0, import_react10.useCallback)(function (node) {\n    setId(node ? partId : null);\n  }, [partId]);\n  return {\n    ref: ref,\n    id: id,\n    isRendered: Boolean(id)\n  };\n}\n\n// src/use-disclosure.ts\nvar import_react11 = require(\"react\");\nfunction _useDisclosure() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var onCloseProp = props.onClose,\n    onOpenProp = props.onOpen,\n    isOpenProp = props.isOpen,\n    idProp = props.id;\n  var onOpenPropCallbackRef = _useCallbackRef(onOpenProp);\n  var onClosePropCallbackRef = _useCallbackRef(onCloseProp);\n  var _ref18 = (0, import_react11.useState)(props.defaultIsOpen || false),\n    _ref19 = _slicedToArray(_ref18, 2),\n    isOpenState = _ref19[0],\n    setIsOpen = _ref19[1];\n  var _useControllableProp2 = _useControllableProp(isOpenProp, isOpenState),\n    _useControllableProp3 = _slicedToArray(_useControllableProp2, 2),\n    isControlled = _useControllableProp3[0],\n    isOpen = _useControllableProp3[1];\n  var id = _useId(idProp, \"disclosure\");\n  var onClose = (0, import_react11.useCallback)(function () {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  var onOpen = (0, import_react11.useCallback)(function () {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  var onToggle = (0, import_react11.useCallback)(function () {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle,\n    isControlled: isControlled,\n    getButtonProps: function getButtonProps() {\n      var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _objectSpread({}, props2, {\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": id,\n        onClick: (0, import_utils6.callAllHandlers)(props2.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps() {\n      var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _objectSpread({}, props2, {\n        hidden: !isOpen,\n        id: id\n      });\n    }\n  };\n}\n\n// src/use-event-listener-map.ts\nvar import_utils7 = require(\"@chakra-ui/utils\");\nvar import_react12 = require(\"react\");\nfunction _useEventListenerMap() {\n  var listeners = (0, import_react12.useRef)( /* @__PURE__ */new Map());\n  var currentListeners = listeners.current;\n  var add = (0, import_react12.useCallback)(function (el, type, listener, options) {\n    var pointerEventListener = (0, import_utils7.wrapPointerEventHandler)(listener, type === \"pointerdown\");\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: (0, import_utils7.getPointerEventName)(type),\n      el: el,\n      options: options\n    });\n    el.addEventListener(type, pointerEventListener, options);\n  }, []);\n  var remove = (0, import_react12.useCallback)(function (el, type, listener, options) {\n    var _listeners$current$ge = listeners.current.get(listener),\n      pointerEventListener = _listeners$current$ge.__listener;\n    el.removeEventListener(type, pointerEventListener, options);\n    listeners.current.delete(pointerEventListener);\n  }, []);\n  (0, import_react12.useEffect)(function () {\n    return function () {\n      currentListeners.forEach(function (value, key) {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove, currentListeners]);\n  return {\n    add: add,\n    remove: remove\n  };\n}\n\n// src/use-focus-effect.ts\nvar import_utils8 = require(\"@chakra-ui/utils\");\n\n// src/use-update-effect.ts\nvar import_react13 = require(\"react\");\nvar _useUpdateEffect = function _useUpdateEffect(effect, deps) {\n  var renderCycleRef = (0, import_react13.useRef)(false);\n  var effectCycleRef = (0, import_react13.useRef)(false);\n  (0, import_react13.useEffect)(function () {\n    var isMounted = renderCycleRef.current;\n    var shouldRun = isMounted && effectCycleRef.current;\n    if (shouldRun) {\n      return effect();\n    }\n    effectCycleRef.current = true;\n  }, deps);\n  (0, import_react13.useEffect)(function () {\n    renderCycleRef.current = true;\n    return function () {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\n\n// src/use-focus-effect.ts\nfunction _useFocusEffect(ref, options) {\n  var shouldFocus = options.shouldFocus,\n    preventScroll = options.preventScroll;\n  _useUpdateEffect(function () {\n    var node = ref.current;\n    if (!node || !shouldFocus) return;\n    if (!(0, import_utils8.hasFocusWithin)(node)) {\n      (0, import_utils8.focus)(node, {\n        preventScroll: preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\n\n// src/use-focus-on-hide.ts\nvar import_utils9 = require(\"@chakra-ui/utils\");\nfunction preventReturnFocus(containerRef) {\n  var el = containerRef.current;\n  if (!el) return false;\n  var activeElement = (0, import_utils9.getActiveElement)(el);\n  if (!activeElement) return false;\n  if ((0, import_utils9.contains)(el, activeElement)) return false;\n  if ((0, import_utils9.isTabbable)(activeElement)) return true;\n  return false;\n}\nfunction _useFocusOnHide(containerRef, options) {\n  var shouldFocusProp = options.shouldFocus,\n    visible = options.visible,\n    focusRef = options.focusRef;\n  var shouldFocus = shouldFocusProp && !visible;\n  _useUpdateEffect(function () {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    var el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      (0, import_utils9.focus)(el, {\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n\n// src/use-focus-on-pointerdown.ts\nvar import_utils11 = require(\"@chakra-ui/utils\");\n\n// src/use-pointer-event.ts\nvar import_utils10 = require(\"@chakra-ui/utils\");\nfunction _usePointerEvent(env, eventName, handler, options) {\n  return _useEventListener((0, import_utils10.getPointerEventName)(eventName), (0, import_utils10.wrapPointerEventHandler)(handler, eventName === \"pointerdown\"), env, options);\n}\n\n// src/use-focus-on-pointerdown.ts\nfunction _useFocusOnPointerDown(props) {\n  var ref = props.ref,\n    elements = props.elements,\n    enabled = props.enabled;\n  var isSafari = (0, import_utils11.detectBrowser)(\"Safari\");\n  var doc = function doc() {\n    return (0, import_utils11.getOwnerDocument)(ref.current);\n  };\n  _usePointerEvent(doc, \"pointerdown\", function (event) {\n    if (!isSafari || !enabled) return;\n    var target = event.target;\n    var els = elements != null ? elements : [ref];\n    var isValidTarget = els.some(function (elementOrRef) {\n      var el = (0, import_utils11.isRefObject)(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (0, import_utils11.contains)(el, target);\n    });\n    if (!(0, import_utils11.isActiveElement)(target) && isValidTarget) {\n      event.preventDefault();\n      (0, import_utils11.focus)(target);\n    }\n  });\n}\n\n// src/use-focus-on-show.ts\nvar import_utils12 = require(\"@chakra-ui/utils\");\nvar import_react14 = require(\"react\");\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction _useFocusOnShow(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  var focusRef = options.focusRef,\n    preventScroll = options.preventScroll,\n    shouldFocus = options.shouldFocus,\n    visible = options.visible;\n  var element = (0, import_utils12.isRefObject)(target) ? target.current : target;\n  var autoFocusValue = shouldFocus && visible;\n  var autoFocusRef = (0, import_react14.useRef)(autoFocusValue);\n  var lastVisibleRef = (0, import_react14.useRef)(visible);\n  _useSafeLayoutEffect(function () {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  var onFocus = (0, import_react14.useCallback)(function () {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if ((0, import_utils12.contains)(element, document.activeElement)) return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      (0, import_utils12.focus)(focusRef.current, {\n        preventScroll: preventScroll,\n        nextTick: true\n      });\n    } else {\n      var tabbableEls = (0, import_utils12.getAllFocusable)(element);\n      if (tabbableEls.length > 0) {\n        (0, import_utils12.focus)(tabbableEls[0], {\n          preventScroll: preventScroll,\n          nextTick: true\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  _useUpdateEffect(function () {\n    onFocus();\n  }, [onFocus]);\n  _useEventListener(\"transitionend\", onFocus, element);\n}\n\n// src/use-force-update.ts\nvar import_react16 = require(\"react\");\n\n// src/use-unmount-effect.ts\nvar import_react15 = require(\"react\");\nfunction _useUnmountEffect(fn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return (0, import_react15.useEffect)(function () {\n    return function () {\n      return fn();\n    };\n  }, deps);\n}\n\n// src/use-force-update.ts\nfunction _useForceUpdate() {\n  var unloadingRef = (0, import_react16.useRef)(false);\n  var _ref20 = (0, import_react16.useState)(0),\n    _ref21 = _slicedToArray(_ref20, 2),\n    count = _ref21[0],\n    setCount = _ref21[1];\n  _useUnmountEffect(function () {\n    unloadingRef.current = true;\n  });\n  return (0, import_react16.useCallback)(function () {\n    if (!unloadingRef.current) {\n      setCount(count + 1);\n    }\n  }, [count]);\n}\n\n// src/use-interval.ts\nvar import_react17 = require(\"react\");\nfunction _useInterval(callback, delay) {\n  var fn = _useCallbackRef(callback);\n  (0, import_react17.useEffect)(function () {\n    var intervalId = null;\n    var tick = function tick() {\n      return fn();\n    };\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n    return function () {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\n\n// src/use-latest-ref.ts\nvar import_react18 = require(\"react\");\nfunction _useLatestRef(value) {\n  var ref = (0, import_react18.useRef)(null);\n  ref.current = value;\n  return ref;\n}\n\n// src/use-merge-refs.ts\nvar import_react19 = require(\"react\");\nfunction _assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\".concat(value, \"' to ref '\").concat(ref, \"'\"));\n  }\n}\nfunction _useMergeRefs() {\n  for (var _len3 = arguments.length, refs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    refs[_key3] = arguments[_key3];\n  }\n  return (0, import_react19.useMemo)(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    }\n    return function (node) {\n      refs.forEach(function (ref) {\n        if (ref) _assignRef(ref, node);\n      });\n    };\n  }, refs);\n}\n\n// src/use-mouse-down-ref.ts\nvar import_react20 = require(\"react\");\nfunction _useMouseDownRef() {\n  var shouldListen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var mouseDownRef = (0, import_react20.useRef)();\n  _useEventListener(\"mousedown\", function (event) {\n    if (shouldListen) {\n      mouseDownRef.current = event.target;\n    }\n  });\n  return mouseDownRef;\n}\n\n// src/use-outside-click.ts\nvar import_utils13 = require(\"@chakra-ui/utils\");\nvar import_react21 = require(\"react\");\nfunction _useOutsideClick(props) {\n  var ref = props.ref,\n    handler = props.handler,\n    _props$enabled = props.enabled,\n    enabled = _props$enabled === void 0 ? true : _props$enabled;\n  var savedHandler = _useCallbackRef(handler);\n  var stateRef = (0, import_react21.useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var state = stateRef.current;\n  (0, import_react21.useEffect)(function () {\n    if (!enabled) return;\n    var onPointerDown = function onPointerDown(e) {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n    var onMouseUp = function onMouseUp(event) {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    var onTouchEnd = function onTouchEnd(event) {\n      state.ignoreEmulatedMouseEvents = true;\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    var doc = (0, import_utils13.getOwnerDocument)(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return function () {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\nfunction isValidEvent(event, ref) {\n  var _a;\n  var target = event.target;\n  if (event.button > 0) return false;\n  if (target) {\n    var doc = (0, import_utils13.getOwnerDocument)(target);\n    if (!doc.contains(target)) return false;\n  }\n  return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n}\n\n// src/use-pan-gesture.ts\nvar import_utils14 = require(\"@chakra-ui/utils\");\nvar import_react22 = require(\"react\");\nfunction _usePanGesture(ref, props) {\n  var onPan = props.onPan,\n    onPanStart = props.onPanStart,\n    onPanEnd = props.onPanEnd,\n    onPanSessionStart = props.onPanSessionStart,\n    onPanSessionEnd = props.onPanSessionEnd,\n    threshold = props.threshold;\n  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  var panSession = (0, import_react22.useRef)(null);\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  (0, import_react22.useEffect)(function () {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlers);\n  });\n  function onPointerDown(event) {\n    panSession.current = new import_utils14.PanSession(event, handlers, threshold);\n  }\n  _usePointerEvent(function () {\n    return ref.current;\n  }, \"pointerdown\", hasPanEvents ? onPointerDown : import_utils14.noop);\n  _useUnmountEffect(function () {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.end();\n    panSession.current = null;\n  });\n}\n\n// src/use-previous.ts\nvar import_react23 = require(\"react\");\nfunction _usePrevious(value) {\n  var ref = (0, import_react23.useRef)();\n  (0, import_react23.useEffect)(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// src/use-shortcut.ts\nvar import_react24 = require(\"react\");\nfunction isPrintableCharacter(event) {\n  var key = event.key;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\nfunction _useShortcut() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$timeout = props.timeout,\n    timeout = _props$timeout === void 0 ? 300 : _props$timeout,\n    _props$preventDefault = props.preventDefault,\n    preventDefault = _props$preventDefault === void 0 ? function () {\n      return true;\n    } : _props$preventDefault;\n  var _ref22 = (0, import_react24.useState)([]),\n    _ref23 = _slicedToArray(_ref22, 2),\n    keys = _ref23[0],\n    setKeys = _ref23[1];\n  var timeoutRef = (0, import_react24.useRef)();\n  var flush = function flush() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  var clearKeysAfterDelay = function clearKeysAfterDelay() {\n    flush();\n    timeoutRef.current = setTimeout(function () {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n  (0, import_react24.useEffect)(function () {\n    return flush;\n  }, []);\n  function onKeyDown(fn) {\n    return function (event) {\n      if (event.key === \"Backspace\") {\n        var keysCopy = _toConsumableArray(keys);\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n      if (isPrintableCharacter(event)) {\n        var _keysCopy = keys.concat(event.key);\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        setKeys(_keysCopy);\n        fn(_keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n  return onKeyDown;\n}\n\n// src/use-timeout.ts\nvar import_react25 = require(\"react\");\nfunction _useTimeout(callback, delay) {\n  var fn = _useCallbackRef(callback);\n  (0, import_react25.useEffect)(function () {\n    if (delay == null) return void 0;\n    var timeoutId = null;\n    timeoutId = window.setTimeout(function () {\n      fn();\n    }, delay);\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [delay, fn]);\n}\n\n// src/use-why-update.ts\nvar import_react26 = require(\"react\");\nfunction _useWhyDidYouUpdate(name, props) {\n  var previousProps = (0, import_react26.useRef)();\n  (0, import_react26.useEffect)(function () {\n    if (previousProps.current) {\n      var allKeys = Object.keys(_objectSpread({}, previousProps.current, props));\n      var changesObj = {};\n      allKeys.forEach(function (key) {\n        if (previousProps.current[key] !== props[key]) {\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key]\n          };\n        }\n      });\n      if (Object.keys(changesObj).length) {\n        console.log(\"[why-did-you-update]\", name, changesObj);\n      }\n    }\n    previousProps.current = props;\n  });\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  assignRef: _assignRef,\n  useAnimationState: _useAnimationState,\n  useBoolean: _useBoolean,\n  useCallbackRef: _useCallbackRef,\n  useClipboard: _useClipboard,\n  useConst: _useConst,\n  useControllableProp: _useControllableProp,\n  useControllableState: _useControllableState,\n  useDimensions: _useDimensions,\n  useDisclosure: _useDisclosure,\n  useEventListener: _useEventListener,\n  useEventListenerMap: _useEventListenerMap,\n  useFocusEffect: _useFocusEffect,\n  useFocusOnHide: _useFocusOnHide,\n  useFocusOnPointerDown: _useFocusOnPointerDown,\n  useFocusOnShow: _useFocusOnShow,\n  useForceUpdate: _useForceUpdate,\n  useId: _useId,\n  useIds: _useIds,\n  useInterval: _useInterval,\n  useLatestRef: _useLatestRef,\n  useMergeRefs: _useMergeRefs,\n  useMouseDownRef: _useMouseDownRef,\n  useOptionalPart: _useOptionalPart,\n  useOutsideClick: _useOutsideClick,\n  usePanGesture: _usePanGesture,\n  usePointerEvent: _usePointerEvent,\n  usePrevious: _usePrevious,\n  useSafeLayoutEffect: _useSafeLayoutEffect,\n  useShortcut: _useShortcut,\n  useTimeout: _useTimeout,\n  useUnmountEffect: _useUnmountEffect,\n  useUpdateEffect: _useUpdateEffect,\n  useWhyDidYouUpdate: _useWhyDidYouUpdate\n});","map":null,"metadata":{},"sourceType":"script"}
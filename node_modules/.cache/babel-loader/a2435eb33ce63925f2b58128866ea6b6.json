{"ast":null,"code":"import { PanEvent } from \"./chunk-OT5ZKXS2.mjs\";\n\n// src/use-pan-event.ts\nimport { addPointerEvent } from \"@chakra-ui/event-utils\";\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\";\nimport { useEffect, useRef } from \"react\";\nfunction usePanEvent(ref, options) {\n  var onPan = options.onPan,\n    onPanStart = options.onPanStart,\n    onPanEnd = options.onPanEnd,\n    onPanSessionStart = options.onPanSessionStart,\n    onPanSessionEnd = options.onPanSessionEnd,\n    threshold = options.threshold;\n  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  var panSession = useRef(null);\n  var handlersRef = useLatestRef({\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  });\n  useEffect(function () {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlersRef.current);\n  });\n  useEffect(function () {\n    var node = ref.current;\n    if (!node || !hasPanEvents) return;\n    function onPointerDown(event) {\n      panSession.current = new PanEvent(event, handlersRef.current, threshold);\n    }\n    return addPointerEvent(node, \"pointerdown\", onPointerDown);\n  }, [ref, hasPanEvents, handlersRef, threshold]);\n  useEffect(function () {\n    return function () {\n      var _a;\n      (_a = panSession.current) == null ? void 0 : _a.end();\n      panSession.current = null;\n    };\n  }, []);\n}\nexport { usePanEvent };","map":null,"metadata":{},"sourceType":"module"}
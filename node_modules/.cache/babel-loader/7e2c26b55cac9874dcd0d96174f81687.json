{"ast":null,"code":"import _objectSpread from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { useTheme } from \"./chunk-NLMMK76H.mjs\";\n\n// src/hooks.ts\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nfunction useChakra() {\n  var colorModeResult = useColorMode();\n  var theme = useTheme();\n  return _objectSpread({}, colorModeResult, {\n    theme: theme\n  });\n}\nfunction getBreakpointValue(theme, value, fallback) {\n  var _a, _b;\n  if (value == null) return value;\n  var getValue = function getValue(val) {\n    var _a2, _b2;\n    return (_b2 = (_a2 = theme.__breakpoints) == null ? void 0 : _a2.asArray) == null ? void 0 : _b2[val];\n  };\n  return (_b = (_a = getValue(value)) != null ? _a : getValue(fallback)) != null ? _b : fallback;\n}\nfunction getTokenValue(theme, value, fallback) {\n  var _a, _b;\n  if (value == null) return value;\n  var getValue = function getValue(val) {\n    var _a2, _b2;\n    return (_b2 = (_a2 = theme.__cssMap) == null ? void 0 : _a2[val]) == null ? void 0 : _b2.value;\n  };\n  return (_b = (_a = getValue(value)) != null ? _a : getValue(fallback)) != null ? _b : fallback;\n}\nfunction useToken(scale, token, fallback) {\n  var theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  var _token = Array.isArray(token) ? token : [token];\n  var _fallback = Array.isArray(fallback) ? fallback : [fallback];\n  return function (theme) {\n    var fallbackArr = _fallback.filter(Boolean);\n    var result = _token.map(function (token2, index) {\n      var _a, _b;\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, (_a = fallbackArr[index]) != null ? _a : token2);\n      }\n      var path = \"\".concat(scale, \".\").concat(token2);\n      return getTokenValue(theme, path, (_b = fallbackArr[index]) != null ? _b : token2);\n    });\n    return Array.isArray(token) ? result : result[0];\n  };\n}\nexport { useChakra, useToken, getToken };","map":null,"metadata":{},"sourceType":"module"}
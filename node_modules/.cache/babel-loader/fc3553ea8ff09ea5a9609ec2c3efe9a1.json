{"ast":null,"code":"import _objectSpread from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { useChakra } from \"./chunk-7V3ZYTH7.mjs\";\n\n// src/use-style-config.ts\nimport { resolveStyleConfig } from \"@chakra-ui/styled-system\";\nimport { mergeThemeOverride } from \"@chakra-ui/theme-utils\";\nimport { filterUndefined, memoizedGet as get, mergeWith, omit } from \"@chakra-ui/utils\";\nimport { useRef } from \"react\";\nimport isEqual from \"react-fast-compare\";\nfunction useStyleConfigImpl(themeKey) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _a;\n  var styleConfigProp = props.styleConfig,\n    rest = _objectWithoutProperties(props, [\"styleConfig\"]);\n  var _useChakra = useChakra(),\n    theme = _useChakra.theme,\n    colorMode = _useChakra.colorMode;\n  var themeStyleConfig = themeKey ? get(theme, \"components.\".concat(themeKey)) : void 0;\n  var styleConfig = styleConfigProp || themeStyleConfig;\n  var mergedProps = mergeWith({\n    theme: theme,\n    colorMode: colorMode\n  }, (_a = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _a : {}, filterUndefined(omit(rest, [\"children\"])));\n  var stylesRef = useRef({});\n  if (styleConfig) {\n    var getStyles = resolveStyleConfig(styleConfig);\n    var styles = getStyles(mergedProps);\n    var isStyleEqual = isEqual(stylesRef.current, styles);\n    if (!isStyleEqual) {\n      stylesRef.current = styles;\n    }\n  }\n  return stylesRef.current;\n}\nfunction useStyleConfig(themeKey) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useMultiStyleConfig(themeKey) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useComponentStyles__unstable(themeKey, props) {\n  var _a;\n  var baseConfig = props.baseConfig,\n    restProps = _objectWithoutProperties(props, [\"baseConfig\"]);\n  var _useChakra2 = useChakra(),\n    theme = _useChakra2.theme;\n  var overrides = (_a = theme.components) == null ? void 0 : _a[themeKey];\n  var styleConfig = overrides ? mergeThemeOverride(overrides, baseConfig) : baseConfig;\n  return useStyleConfigImpl(null, _objectSpread({}, restProps, {\n    styleConfig: styleConfig\n  }));\n}\nexport { useStyleConfig, useMultiStyleConfig, useComponentStyles__unstable };","map":null,"metadata":{},"sourceType":"module"}
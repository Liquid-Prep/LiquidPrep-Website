{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  addPrefix: function addPrefix() {\n    return _addPrefix;\n  },\n  anatomy: function anatomy() {\n    return import_anatomy.anatomy;\n  },\n  blacken: function blacken() {\n    return _blacken;\n  },\n  calc: function calc() {\n    return _calc;\n  },\n  complementary: function complementary() {\n    return _complementary;\n  },\n  contrast: function contrast() {\n    return _contrast;\n  },\n  createBreakpoints: function createBreakpoints() {\n    return _createBreakpoints;\n  },\n  cssVar: function cssVar() {\n    return _cssVar;\n  },\n  darken: function darken() {\n    return _darken;\n  },\n  generateStripe: function generateStripe() {\n    return _generateStripe;\n  },\n  getColor: function getColor() {\n    return _getColor;\n  },\n  isAccessible: function isAccessible() {\n    return _isAccessible;\n  },\n  isDark: function isDark() {\n    return _isDark;\n  },\n  isDecimal: function isDecimal() {\n    return _isDecimal;\n  },\n  isLight: function isLight() {\n    return _isLight;\n  },\n  isReadable: function isReadable() {\n    return _isReadable;\n  },\n  lighten: function lighten() {\n    return _lighten;\n  },\n  mode: function mode() {\n    return _mode;\n  },\n  orient: function orient() {\n    return _orient;\n  },\n  randomColor: function randomColor() {\n    return _randomColor;\n  },\n  readability: function readability() {\n    return _readability;\n  },\n  toVar: function toVar() {\n    return _toVar;\n  },\n  toVarRef: function toVarRef() {\n    return _toVarRef;\n  },\n  tone: function tone() {\n    return _tone;\n  },\n  transparentize: function transparentize() {\n    return _transparentize;\n  },\n  whiten: function whiten() {\n    return _whiten;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_anatomy = require(\"@chakra-ui/anatomy\");\n\n// src/color.ts\nvar import_color2k = require(\"color2k\");\n\n// ../../../node_modules/.pnpm/dlv@1.1.3/node_modules/dlv/dist/dlv.es.js\nfunction dlv_es_default(t, e, l, n, r) {\n  for (e = e.split ? e.split(\".\") : e, n = 0; n < e.length; n++) t = t ? t[e[n]] : r;\n  return t === r ? l : t;\n}\n\n// src/color.ts\nvar isEmptyObject = function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n};\nvar _getColor = function _getColor(theme, color, fallback) {\n  var hex = dlv_es_default(theme, \"colors.\".concat(color), color);\n  try {\n    (0, import_color2k.toHex)(hex);\n    return hex;\n  } catch (_unused) {\n    return fallback != null ? fallback : \"#000000\";\n  }\n};\nvar getBrightness = function getBrightness(color) {\n  var _ref = (0, import_color2k.parseToRgba)(color),\n    _ref2 = _slicedToArray(_ref, 3),\n    r = _ref2[0],\n    g = _ref2[1],\n    b = _ref2[2];\n  return (r * 299 + g * 587 + b * 114) / 1e3;\n};\nvar _tone = function _tone(color) {\n  return function (theme) {\n    var hex = _getColor(theme, color);\n    var brightness = getBrightness(hex);\n    var isDark2 = brightness < 128;\n    return isDark2 ? \"dark\" : \"light\";\n  };\n};\nvar _isDark = function _isDark(color) {\n  return function (theme) {\n    return _tone(color)(theme) === \"dark\";\n  };\n};\nvar _isLight = function _isLight(color) {\n  return function (theme) {\n    return _tone(color)(theme) === \"light\";\n  };\n};\nvar _transparentize = function _transparentize(color, opacity) {\n  return function (theme) {\n    var raw = _getColor(theme, color);\n    return (0, import_color2k.transparentize)(raw, 1 - opacity);\n  };\n};\nvar _whiten = function _whiten(color, amount) {\n  return function (theme) {\n    var raw = _getColor(theme, color);\n    return (0, import_color2k.toHex)((0, import_color2k.mix)(raw, \"#fff\", amount));\n  };\n};\nvar _blacken = function _blacken(color, amount) {\n  return function (theme) {\n    var raw = _getColor(theme, color);\n    return (0, import_color2k.toHex)((0, import_color2k.mix)(raw, \"#000\", amount / 100));\n  };\n};\nvar _darken = function _darken(color, amount) {\n  return function (theme) {\n    var raw = _getColor(theme, color);\n    return (0, import_color2k.toHex)((0, import_color2k.darken)(raw, amount / 100));\n  };\n};\nvar _lighten = function _lighten(color, amount) {\n  return function (theme) {\n    var raw = _getColor(theme, color);\n    (0, import_color2k.toHex)((0, import_color2k.lighten)(raw, amount / 100));\n  };\n};\nvar _contrast = function _contrast(fg, bg) {\n  return function (theme) {\n    return (0, import_color2k.getContrast)(_getColor(theme, bg), _getColor(theme, fg));\n  };\n};\nvar _isAccessible = function _isAccessible(textColor, bgColor, options) {\n  return function (theme) {\n    return _isReadable(_getColor(theme, bgColor), _getColor(theme, textColor), options);\n  };\n};\nfunction _isReadable(color1, color2) {\n  var wcag2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    level: \"AA\",\n    size: \"small\"\n  };\n  var _a, _b;\n  var readabilityLevel = _readability(color1, color2);\n  switch (((_a = wcag2.level) != null ? _a : \"AA\") + ((_b = wcag2.size) != null ? _b : \"small\")) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      return readabilityLevel >= 4.5;\n    case \"AAlarge\":\n      return readabilityLevel >= 3;\n    case \"AAAsmall\":\n      return readabilityLevel >= 7;\n    default:\n      return false;\n  }\n}\nfunction _readability(color1, color2) {\n  return (Math.max((0, import_color2k.getLuminance)(color1), (0, import_color2k.getLuminance)(color2)) + 0.05) / (Math.min((0, import_color2k.getLuminance)(color1), (0, import_color2k.getLuminance)(color2)) + 0.05);\n}\nvar _complementary = function _complementary(color) {\n  return function (theme) {\n    var raw = _getColor(theme, color);\n    var hsl = (0, import_color2k.parseToHsla)(raw);\n    var complementHsl = Object.assign(hsl, [(hsl[0] + 180) % 360]);\n    return (0, import_color2k.toHex)((0, import_color2k.hsla).apply(void 0, _toConsumableArray(complementHsl)));\n  };\n};\nfunction _generateStripe() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"1rem\";\n  var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"rgba(255, 255, 255, 0.15)\";\n  return {\n    backgroundImage: \"linear-gradient(\\n    45deg,\\n    \".concat(color, \" 25%,\\n    transparent 25%,\\n    transparent 50%,\\n    \").concat(color, \" 50%,\\n    \").concat(color, \" 75%,\\n    transparent 75%,\\n    transparent\\n  )\"),\n    backgroundSize: \"\".concat(size, \" \").concat(size)\n  };\n}\nvar randomHex = function randomHex() {\n  return \"#\".concat(Math.floor(Math.random() * 16777215).toString(16).padEnd(6, \"0\"));\n};\nfunction _randomColor(opts) {\n  var fallback = randomHex();\n  if (!opts || isEmptyObject(opts)) {\n    return fallback;\n  }\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n  return fallback;\n}\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n  for (var i = 0; i < str.length; i += 1) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var color = \"#\";\n  for (var j = 0; j < 3; j += 1) {\n    var value = hash >> j * 8 & 255;\n    color += \"00\".concat(value.toString(16)).substr(-2);\n  }\n  return color;\n}\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n  for (var i = 0; i < str.length; i += 1) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\n// src/component.ts\nfunction _mode(light, dark) {\n  return function (props) {\n    return props.colorMode === \"dark\" ? dark : light;\n  };\n}\nfunction _orient(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  if (!orientation) return {};\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n\n// src/create-breakpoints.ts\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar _createBreakpoints = function _createBreakpoints(config) {\n  (0, import_shared_utils.warn)({\n    condition: true,\n    message: [\"[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon\", \"simply pass the breakpoints as an object. Remove the createBreakpoints(..) call\"].join(\"\")\n  });\n  return _objectSpread({\n    base: \"0em\"\n  }, config);\n};\n\n// src/css-calc.ts\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nfunction toRef(operand) {\n  if ((0, import_shared_utils2.isObject)(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nvar toExpr = function toExpr(operator) {\n  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    operands[_key - 1] = arguments[_key];\n  }\n  return operands.map(toRef).join(\" \".concat(operator, \" \")).replace(/calc/g, \"\");\n};\nvar _add = function add() {\n  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    operands[_key2] = arguments[_key2];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"+\"].concat(operands)), \")\");\n};\nvar _subtract = function subtract() {\n  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    operands[_key3] = arguments[_key3];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"-\"].concat(operands)), \")\");\n};\nvar _multiply = function multiply() {\n  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    operands[_key4] = arguments[_key4];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"*\"].concat(operands)), \")\");\n};\nvar _divide = function divide() {\n  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    operands[_key5] = arguments[_key5];\n  }\n  return \"calc(\".concat(toExpr.apply(void 0, [\"/\"].concat(operands)), \")\");\n};\nvar _negate = function negate(x) {\n  var value = toRef(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : \"-\".concat(value);\n  }\n  return _multiply(value, -1);\n};\nvar _calc = Object.assign(function (x) {\n  return {\n    add: function add() {\n      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        operands[_key6] = arguments[_key6];\n      }\n      return _calc(_add.apply(void 0, [x].concat(operands)));\n    },\n    subtract: function subtract() {\n      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        operands[_key7] = arguments[_key7];\n      }\n      return _calc(_subtract.apply(void 0, [x].concat(operands)));\n    },\n    multiply: function multiply() {\n      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        operands[_key8] = arguments[_key8];\n      }\n      return _calc(_multiply.apply(void 0, [x].concat(operands)));\n    },\n    divide: function divide() {\n      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        operands[_key9] = arguments[_key9];\n      }\n      return _calc(_divide.apply(void 0, [x].concat(operands)));\n    },\n    negate: function negate() {\n      return _calc(_negate(x));\n    },\n    toString: function toString() {\n      return x.toString();\n    }\n  };\n}, {\n  add: _add,\n  subtract: _subtract,\n  multiply: _multiply,\n  divide: _divide,\n  negate: _negate\n});\n\n// src/css-var.ts\nfunction _isDecimal(value) {\n  return !Number.isInteger(parseFloat(value.toString()));\n}\nfunction replaceWhiteSpace(value) {\n  var replaceValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  var valueStr = replaceWhiteSpace(value.toString());\n  if (valueStr.includes(\"\\\\.\")) return value;\n  return _isDecimal(value) ? valueStr.replace(\".\", \"\\\\.\") : value;\n}\nfunction _addPrefix(value) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return [prefix, escape(value)].filter(Boolean).join(\"-\");\n}\nfunction _toVarRef(name, fallback) {\n  return \"var(\".concat(escape(name)).concat(fallback ? \", \".concat(fallback) : \"\", \")\");\n}\nfunction _toVar(value) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return \"--\".concat(_addPrefix(value, prefix));\n}\nfunction _cssVar(name, options) {\n  var cssVariable = _toVar(name, options == null ? void 0 : options.prefix);\n  return {\n    variable: cssVariable,\n    reference: _toVarRef(cssVariable, getFallback(options == null ? void 0 : options.fallback))\n  };\n}\nfunction getFallback(fallback) {\n  if (typeof fallback === \"string\") return fallback;\n  return fallback == null ? void 0 : fallback.reference;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  addPrefix: _addPrefix,\n  anatomy: anatomy,\n  blacken: _blacken,\n  calc: _calc,\n  complementary: _complementary,\n  contrast: _contrast,\n  createBreakpoints: _createBreakpoints,\n  cssVar: _cssVar,\n  darken: _darken,\n  generateStripe: _generateStripe,\n  getColor: _getColor,\n  isAccessible: _isAccessible,\n  isDark: _isDark,\n  isDecimal: _isDecimal,\n  isLight: _isLight,\n  isReadable: _isReadable,\n  lighten: _lighten,\n  mode: _mode,\n  orient: _orient,\n  randomColor: _randomColor,\n  readability: _readability,\n  toVar: _toVar,\n  toVarRef: _toVarRef,\n  tone: _tone,\n  transparentize: _transparentize,\n  whiten: _whiten\n});","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  CircularProgress: function CircularProgress() {\n    return _CircularProgress;\n  },\n  CircularProgressLabel: function CircularProgressLabel() {\n    return _CircularProgressLabel;\n  },\n  Progress: function Progress() {\n    return _Progress;\n  },\n  ProgressLabel: function ProgressLabel() {\n    return _ProgressLabel;\n  },\n  useProgressStyles: function useProgressStyles() {\n    return _useProgressStyles;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/circular-progress.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\n\n// src/progress.utils.tsx\nvar import_system = require(\"@chakra-ui/system\");\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nvar spin = (0, import_system.keyframes)({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = (0, import_system.keyframes)({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = (0, import_system.keyframes)({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nvar stripe = (0, import_system.keyframes)({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\nfunction getProgressProps(options) {\n  var _options$value = options.value,\n    value = _options$value === void 0 ? 0 : _options$value,\n    min = options.min,\n    max = options.max,\n    valueText = options.valueText,\n    getValueText = options.getValueText,\n    isIndeterminate = options.isIndeterminate,\n    _options$role = options.role,\n    role = _options$role === void 0 ? \"progressbar\" : _options$role;\n  var percent = valueToPercent(value, min, max);\n  var getAriaValueText = function getAriaValueText() {\n    if (value == null) return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: role\n    },\n    percent: percent,\n    value: value\n  };\n}\n\n// src/shape.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar Shape = function Shape(props) {\n  var size = props.size,\n    isIndeterminate = props.isIndeterminate,\n    rest = _objectWithoutProperties(props, [\"size\", \"isIndeterminate\"]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system2.chakra.svg, _objectSpread({\n    viewBox: \"0 0 100 100\",\n    __css: {\n      width: size,\n      height: size,\n      animation: isIndeterminate ? \"\".concat(rotate, \" 2s linear infinite\") : void 0\n    }\n  }, rest));\n};\nShape.displayName = \"Shape\";\n\n// src/circle.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar Circle = function Circle(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system3.chakra.circle, _objectSpread({\n    cx: 50,\n    cy: 50,\n    r: 42,\n    fill: \"transparent\"\n  }, props));\n};\nCircle.displayName = \"Circle\";\n\n// src/circular-progress.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar _CircularProgress = (0, import_system4.forwardRef)(function (props, ref) {\n  var _a;\n  var _props$size = props.size,\n    size = _props$size === void 0 ? \"48px\" : _props$size,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    valueText = props.valueText,\n    getValueText = props.getValueText,\n    value = props.value,\n    capIsRound = props.capIsRound,\n    children = props.children,\n    _props$thickness = props.thickness,\n    thickness = _props$thickness === void 0 ? \"10px\" : _props$thickness,\n    _props$color = props.color,\n    color = _props$color === void 0 ? \"#0078d4\" : _props$color,\n    _props$trackColor = props.trackColor,\n    trackColor = _props$trackColor === void 0 ? \"#edebe9\" : _props$trackColor,\n    isIndeterminate = props.isIndeterminate,\n    rest = _objectWithoutProperties(props, [\"size\", \"max\", \"min\", \"valueText\", \"getValueText\", \"value\", \"capIsRound\", \"children\", \"thickness\", \"color\", \"trackColor\", \"isIndeterminate\"]);\n  var progress2 = getProgressProps({\n    min: min,\n    max: max,\n    value: value,\n    valueText: valueText,\n    getValueText: getValueText,\n    isIndeterminate: isIndeterminate\n  });\n  var determinant = isIndeterminate ? void 0 : ((_a = progress2.percent) != null ? _a : 0) * 2.64;\n  var strokeDasharray = determinant == null ? void 0 : \"\".concat(determinant, \" \").concat(264 - determinant);\n  var indicatorProps = isIndeterminate ? {\n    css: {\n      animation: \"\".concat(spin, \" 1.5s linear infinite\")\n    }\n  } : {\n    strokeDashoffset: 66,\n    strokeDasharray: strokeDasharray,\n    transitionProperty: \"stroke-dasharray, stroke\",\n    transitionDuration: \"0.6s\",\n    transitionTimingFunction: \"ease\"\n  };\n  var rootStyles = {\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    fontSize: size\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsxs)(import_system4.chakra.div, _objectSpread({\n    ref: ref,\n    className: \"chakra-progress\"\n  }, progress2.bind, rest, {\n    __css: rootStyles,\n    children: [/* @__PURE__ */(0, import_jsx_runtime3.jsxs)(Shape, {\n      size: size,\n      isIndeterminate: isIndeterminate,\n      children: [/* @__PURE__ */(0, import_jsx_runtime3.jsx)(Circle, {\n        stroke: trackColor,\n        strokeWidth: thickness,\n        className: \"chakra-progress__track\"\n      }), /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Circle, _objectSpread({\n        stroke: color,\n        strokeWidth: thickness,\n        className: \"chakra-progress__indicator\",\n        strokeLinecap: capIsRound ? \"round\" : void 0,\n        opacity: progress2.value === 0 && !isIndeterminate ? 0 : void 0\n      }, indicatorProps))]\n    }), children]\n  }));\n});\n_CircularProgress.displayName = \"CircularProgress\";\n\n// src/progress.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar _ref = (0, import_react_context.createContext)({\n    name: \"ProgressStylesContext\",\n    errorMessage: \"useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Progress />\\\" \"\n  }),\n  _ref2 = _slicedToArray(_ref, 2),\n  ProgressStylesProvider = _ref2[0],\n  _useProgressStyles = _ref2[1];\nvar ProgressFilledTrack = (0, import_system5.forwardRef)(function (props, ref) {\n  var min = props.min,\n    max = props.max,\n    value = props.value,\n    isIndeterminate = props.isIndeterminate,\n    role = props.role,\n    rest = _objectWithoutProperties(props, [\"min\", \"max\", \"value\", \"isIndeterminate\", \"role\"]);\n  var progress2 = getProgressProps({\n    value: value,\n    min: min,\n    max: max,\n    isIndeterminate: isIndeterminate,\n    role: role\n  });\n  var styles = _useProgressStyles();\n  var trackStyles = _objectSpread({\n    height: \"100%\"\n  }, styles.filledTrack);\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system5.chakra.div, _objectSpread({\n    ref: ref,\n    style: _objectSpread({\n      width: \"\".concat(progress2.percent, \"%\")\n    }, rest.style)\n  }, progress2.bind, rest, {\n    __css: trackStyles\n  }));\n});\nvar _Progress = (0, import_system5.forwardRef)(function (props, ref) {\n  var _a;\n  var _ref3 = (0, import_system5.omitThemingProps)(props),\n    value = _ref3.value,\n    _ref3$min = _ref3.min,\n    min = _ref3$min === void 0 ? 0 : _ref3$min,\n    _ref3$max = _ref3.max,\n    max = _ref3$max === void 0 ? 100 : _ref3$max,\n    hasStripe = _ref3.hasStripe,\n    isAnimated = _ref3.isAnimated,\n    children = _ref3.children,\n    propBorderRadius = _ref3.borderRadius,\n    isIndeterminate = _ref3.isIndeterminate,\n    ariaLabel = _ref3[\"aria-label\"],\n    ariaLabelledBy = _ref3[\"aria-labelledby\"],\n    ariaValueText = _ref3[\"aria-valuetext\"],\n    title = _ref3.title,\n    role = _ref3.role,\n    rest = _objectWithoutProperties(_ref3, [\"value\", \"min\", \"max\", \"hasStripe\", \"isAnimated\", \"children\", \"borderRadius\", \"isIndeterminate\", \"aria-label\", \"aria-labelledby\", \"aria-valuetext\", \"title\", \"role\"]);\n  var styles = (0, import_system5.useMultiStyleConfig)(\"Progress\", props);\n  var borderRadius = propBorderRadius != null ? propBorderRadius : (_a = styles.track) == null ? void 0 : _a.borderRadius;\n  var stripeAnimation = {\n    animation: \"\".concat(stripe, \" 1s linear infinite\")\n  };\n  var shouldAddStripe = !isIndeterminate && hasStripe;\n  var shouldAnimateStripe = shouldAddStripe && isAnimated;\n  var css = _objectSpread({}, shouldAnimateStripe && stripeAnimation, isIndeterminate && {\n    position: \"absolute\",\n    willChange: \"left\",\n    minWidth: \"50%\",\n    animation: \"\".concat(progress, \" 1s ease infinite normal none running\")\n  });\n  var trackStyles = _objectSpread({\n    overflow: \"hidden\",\n    position: \"relative\"\n  }, styles.track);\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system5.chakra.div, _objectSpread({\n    ref: ref,\n    borderRadius: borderRadius,\n    __css: trackStyles\n  }, rest, {\n    children: /* @__PURE__ */(0, import_jsx_runtime4.jsxs)(ProgressStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */(0, import_jsx_runtime4.jsx)(ProgressFilledTrack, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-valuetext\": ariaValueText,\n        min: min,\n        max: max,\n        value: value,\n        isIndeterminate: isIndeterminate,\n        css: css,\n        borderRadius: borderRadius,\n        title: title,\n        role: role\n      }), children]\n    })\n  }));\n});\n_Progress.displayName = \"Progress\";\n\n// src/progress-label.tsx\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar _ProgressLabel = function _ProgressLabel(props) {\n  var styles = _useProgressStyles();\n  var labelStyles = _objectSpread({\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }, styles.label);\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system6.chakra.div, _objectSpread({}, props, {\n    __css: labelStyles\n  }));\n};\n_ProgressLabel.displayName = \"ProgressLabel\";\n\n// src/circular-progress-label.tsx\nvar import_system7 = require(\"@chakra-ui/system\");\nvar _CircularProgressLabel = (0, import_system7.chakra)(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\n_CircularProgressLabel.displayName = \"CircularProgressLabel\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  CircularProgress: _CircularProgress,\n  CircularProgressLabel: _CircularProgressLabel,\n  Progress: _Progress,\n  ProgressLabel: _ProgressLabel,\n  useProgressStyles: _useProgressStyles\n});","map":null,"metadata":{},"sourceType":"script"}
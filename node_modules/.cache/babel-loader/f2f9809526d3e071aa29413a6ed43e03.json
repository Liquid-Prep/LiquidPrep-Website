{"ast":null,"code":"import _objectSpread from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n// src/chakra-provider.tsx\nimport { ChakraProvider as BaseChakraProvider } from \"@chakra-ui/provider\";\nimport { theme as defaultTheme, baseTheme } from \"@chakra-ui/theme\";\nimport { ToastProvider, ToastOptionProvider } from \"@chakra-ui/toast\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar createChakraProvider = function createChakraProvider(providerTheme) {\n  return function ChakraProvider2(_ref) {\n    var children = _ref.children,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? providerTheme : _ref$theme,\n      toastOptions = _ref.toastOptions,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"theme\", \"toastOptions\"]);\n    return /* @__PURE__ */jsxs(BaseChakraProvider, _objectSpread({\n      theme: theme\n    }, restProps, {\n      children: [/* @__PURE__ */jsx(ToastOptionProvider, {\n        value: toastOptions == null ? void 0 : toastOptions.defaultOptions,\n        children: children\n      }), /* @__PURE__ */jsx(ToastProvider, _objectSpread({}, toastOptions))]\n    }));\n  };\n};\nvar ChakraProvider = createChakraProvider(defaultTheme);\nvar ChakraBaseProvider = createChakraProvider(baseTheme);\nexport { ChakraProvider, ChakraBaseProvider };","map":null,"metadata":{},"sourceType":"module"}
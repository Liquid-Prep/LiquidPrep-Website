{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _classCallCheck = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _slicedToArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _toConsumableArray = require(\"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __reExport = function __reExport(target, mod, secondTarget) {\n  return __copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\");\n};\nvar __toESM = function __toESM(mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod);\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  PanSession: function PanSession() {\n    return _PanSession;\n  },\n  __DEV__: function __DEV__() {\n    return _DEV__;\n  },\n  __TEST__: function __TEST__() {\n    return _TEST__;\n  },\n  addDomEvent: function addDomEvent() {\n    return _addDomEvent;\n  },\n  addItem: function addItem() {\n    return _addItem;\n  },\n  addPointerEvent: function addPointerEvent() {\n    return _addPointerEvent;\n  },\n  analyzeBreakpoints: function analyzeBreakpoints() {\n    return _analyzeBreakpoints;\n  },\n  ariaAttr: function ariaAttr() {\n    return _ariaAttr;\n  },\n  arrayToObjectNotation: function arrayToObjectNotation() {\n    return _arrayToObjectNotation;\n  },\n  breakpoints: function breakpoints() {\n    return _breakpoints;\n  },\n  callAll: function callAll() {\n    return _callAll;\n  },\n  callAllHandlers: function callAllHandlers() {\n    return _callAllHandlers;\n  },\n  canUseDOM: function canUseDOM() {\n    return _canUseDOM;\n  },\n  chunk: function chunk() {\n    return _chunk;\n  },\n  clampValue: function clampValue() {\n    return _clampValue;\n  },\n  closest: function closest() {\n    return _closest;\n  },\n  compose: function compose() {\n    return _compose;\n  },\n  contains: function contains() {\n    return _contains;\n  },\n  countDecimalPlaces: function countDecimalPlaces() {\n    return _countDecimalPlaces;\n  },\n  cx: function cx() {\n    return _cx;\n  },\n  dataAttr: function dataAttr() {\n    return _dataAttr;\n  },\n  detectBrowser: function detectBrowser() {\n    return _detectBrowser;\n  },\n  detectDeviceType: function detectDeviceType() {\n    return _detectDeviceType;\n  },\n  detectOS: function detectOS() {\n    return _detectOS;\n  },\n  detectTouch: function detectTouch() {\n    return _detectTouch;\n  },\n  determineLazyBehavior: function determineLazyBehavior() {\n    return _determineLazyBehavior;\n  },\n  distance: function distance() {\n    return _distance;\n  },\n  error: function error() {\n    return _error;\n  },\n  extractEventInfo: function extractEventInfo() {\n    return _extractEventInfo;\n  },\n  filterUndefined: function filterUndefined() {\n    return _filterUndefined;\n  },\n  flatten: function flatten() {\n    return _flatten;\n  },\n  focus: function focus() {\n    return _focus;\n  },\n  focusNextTabbable: function focusNextTabbable() {\n    return _focusNextTabbable;\n  },\n  focusPreviousTabbable: function focusPreviousTabbable() {\n    return _focusPreviousTabbable;\n  },\n  fromEntries: function fromEntries() {\n    return _fromEntries;\n  },\n  get: function get() {\n    return _get;\n  },\n  getActiveElement: function getActiveElement() {\n    return _getActiveElement;\n  },\n  getAllFocusable: function getAllFocusable() {\n    return _getAllFocusable;\n  },\n  getAllTabbable: function getAllTabbable() {\n    return _getAllTabbable;\n  },\n  getCSSVar: function getCSSVar() {\n    return _getCSSVar;\n  },\n  getEventWindow: function getEventWindow() {\n    return _getEventWindow;\n  },\n  getFirstFocusable: function getFirstFocusable() {\n    return _getFirstFocusable;\n  },\n  getFirstItem: function getFirstItem() {\n    return _getFirstItem;\n  },\n  getFirstTabbableIn: function getFirstTabbableIn() {\n    return _getFirstTabbableIn;\n  },\n  getLastItem: function getLastItem() {\n    return _getLastItem;\n  },\n  getLastTabbableIn: function getLastTabbableIn() {\n    return _getLastTabbableIn;\n  },\n  getNextIndex: function getNextIndex() {\n    return _getNextIndex;\n  },\n  getNextItem: function getNextItem() {\n    return _getNextItem;\n  },\n  getNextItemFromSearch: function getNextItemFromSearch() {\n    return _getNextItemFromSearch;\n  },\n  getNextTabbable: function getNextTabbable() {\n    return _getNextTabbable;\n  },\n  getOwnerDocument: function getOwnerDocument() {\n    return _getOwnerDocument;\n  },\n  getOwnerWindow: function getOwnerWindow() {\n    return _getOwnerWindow;\n  },\n  getPointerEventName: function getPointerEventName() {\n    return _getPointerEventName;\n  },\n  getPrevIndex: function getPrevIndex() {\n    return _getPrevIndex;\n  },\n  getPrevItem: function getPrevItem() {\n    return _getPrevItem;\n  },\n  getPreviousTabbable: function getPreviousTabbable() {\n    return _getPreviousTabbable;\n  },\n  getRelatedTarget: function getRelatedTarget() {\n    return _getRelatedTarget;\n  },\n  getViewportPointFromEvent: function getViewportPointFromEvent() {\n    return _getViewportPointFromEvent;\n  },\n  getWithDefault: function getWithDefault() {\n    return _getWithDefault;\n  },\n  hasDisplayNone: function hasDisplayNone() {\n    return _hasDisplayNone;\n  },\n  hasFocusWithin: function hasFocusWithin() {\n    return _hasFocusWithin;\n  },\n  hasNegativeTabIndex: function hasNegativeTabIndex() {\n    return _hasNegativeTabIndex;\n  },\n  hasTabIndex: function hasTabIndex() {\n    return _hasTabIndex;\n  },\n  isActiveElement: function isActiveElement() {\n    return _isActiveElement;\n  },\n  isArray: function isArray() {\n    return _isArray;\n  },\n  isBrowser: function isBrowser() {\n    return _isBrowser;\n  },\n  isContentEditable: function isContentEditable() {\n    return _isContentEditable;\n  },\n  isCssVar: function isCssVar() {\n    return _isCssVar;\n  },\n  isCustomBreakpoint: function isCustomBreakpoint() {\n    return _isCustomBreakpoint;\n  },\n  isDefined: function isDefined() {\n    return _isDefined;\n  },\n  isDisabled: function isDisabled() {\n    return _isDisabled;\n  },\n  isElement: function isElement() {\n    return _isElement;\n  },\n  isEmpty: function isEmpty() {\n    return _isEmpty;\n  },\n  isEmptyArray: function isEmptyArray() {\n    return _isEmptyArray;\n  },\n  isEmptyObject: function isEmptyObject() {\n    return _isEmptyObject;\n  },\n  isFocusable: function isFocusable() {\n    return _isFocusable;\n  },\n  isFunction: function isFunction() {\n    return _isFunction;\n  },\n  isHTMLElement: function isHTMLElement() {\n    return _isHTMLElement;\n  },\n  isHidden: function isHidden() {\n    return _isHidden;\n  },\n  isInputElement: function isInputElement() {\n    return _isInputElement;\n  },\n  isInputEvent: function isInputEvent() {\n    return _isInputEvent;\n  },\n  isMouseEvent: function isMouseEvent() {\n    return _isMouseEvent;\n  },\n  isMultiTouchEvent: function isMultiTouchEvent() {\n    return _isMultiTouchEvent;\n  },\n  isNotEmptyObject: function isNotEmptyObject() {\n    return _isNotEmptyObject;\n  },\n  isNotNumber: function isNotNumber() {\n    return _isNotNumber;\n  },\n  isNull: function isNull() {\n    return _isNull;\n  },\n  isNumber: function isNumber() {\n    return _isNumber;\n  },\n  isNumeric: function isNumeric() {\n    return _isNumeric;\n  },\n  isObject: function isObject() {\n    return _isObject;\n  },\n  isRefObject: function isRefObject() {\n    return _isRefObject;\n  },\n  isResponsiveObjectLike: function isResponsiveObjectLike() {\n    return _isResponsiveObjectLike;\n  },\n  isRightClick: function isRightClick() {\n    return _isRightClick;\n  },\n  isString: function isString() {\n    return _isString;\n  },\n  isTabbable: function isTabbable() {\n    return _isTabbable;\n  },\n  isTouchEvent: function isTouchEvent() {\n    return _isTouchEvent;\n  },\n  isUndefined: function isUndefined() {\n    return _isUndefined;\n  },\n  mapResponsive: function mapResponsive() {\n    return _mapResponsive;\n  },\n  maxSafeInteger: function maxSafeInteger() {\n    return _maxSafeInteger;\n  },\n  memoize: function memoize() {\n    return _memoize;\n  },\n  memoizedGet: function memoizedGet() {\n    return _memoizedGet;\n  },\n  mergeWith: function mergeWith() {\n    return import_lodash.default;\n  },\n  minSafeInteger: function minSafeInteger() {\n    return _minSafeInteger;\n  },\n  noop: function noop() {\n    return _noop;\n  },\n  normalizeEventKey: function normalizeEventKey() {\n    return _normalizeEventKey;\n  },\n  objectFilter: function objectFilter() {\n    return _objectFilter;\n  },\n  objectKeys: function objectKeys() {\n    return _objectKeys;\n  },\n  objectToArrayNotation: function objectToArrayNotation() {\n    return _objectToArrayNotation;\n  },\n  omit: function omit() {\n    return _omit;\n  },\n  once: function once() {\n    return _once;\n  },\n  percentToValue: function percentToValue() {\n    return _percentToValue;\n  },\n  pick: function pick() {\n    return _pick;\n  },\n  pipe: function pipe() {\n    return _pipe;\n  },\n  px: function px() {\n    return _px;\n  },\n  removeIndex: function removeIndex() {\n    return _removeIndex;\n  },\n  removeItem: function removeItem() {\n    return _removeItem;\n  },\n  roundValueToStep: function roundValueToStep() {\n    return _roundValueToStep;\n  },\n  runIfFn: function runIfFn() {\n    return _runIfFn;\n  },\n  split: function split() {\n    return _split;\n  },\n  toMediaQueryString: function toMediaQueryString() {\n    return _toMediaQueryString;\n  },\n  toPrecision: function toPrecision() {\n    return _toPrecision;\n  },\n  valueToPercent: function valueToPercent() {\n    return _valueToPercent;\n  },\n  walkObject: function walkObject() {\n    return _walkObject;\n  },\n  warn: function warn() {\n    return _warn;\n  },\n  wrapPointerEventHandler: function wrapPointerEventHandler() {\n    return _wrapPointerEventHandler;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n__reExport(src_exports, require(\"css-box-model\"), module.exports);\n\n// src/array.ts\nfunction _getFirstItem(array) {\n  return array != null && array.length ? array[0] : void 0;\n}\nfunction _getLastItem(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction _getPrevItem(index, array) {\n  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var prevIndex = _getPrevIndex(index, array.length, loop);\n  return array[prevIndex];\n}\nfunction _getNextItem(index, array) {\n  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var nextIndex = _getNextIndex(index, array.length, 1, loop);\n  return array[nextIndex];\n}\nfunction _removeIndex(array, index) {\n  return array.filter(function (_, idx) {\n    return idx !== index;\n  });\n}\nfunction _addItem(array, item) {\n  return [].concat(_toConsumableArray(array), [item]);\n}\nfunction _removeItem(array, item) {\n  return array.filter(function (eachItem) {\n    return eachItem !== item;\n  });\n}\nfunction _getNextIndex(currentIndex, length) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var loop = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var lastIndex = length - 1;\n  if (currentIndex === -1) {\n    return step > 0 ? 0 : lastIndex;\n  }\n  var nextIndex = currentIndex + step;\n  if (nextIndex < 0) {\n    return loop ? lastIndex : 0;\n  }\n  if (nextIndex >= length) {\n    if (loop) return 0;\n    return currentIndex > length ? length : currentIndex;\n  }\n  return nextIndex;\n}\nfunction _getPrevIndex(index, count) {\n  var loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return _getNextIndex(index, count, -1, loop);\n}\nfunction _chunk(array, size) {\n  return array.reduce(function (rows, currentValue, index) {\n    if (index % size === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n    return rows;\n  }, []);\n}\nfunction _getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    var foundItem = items.find(function (item) {\n      return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n    });\n    return foundItem;\n  }\n  var matchingItems = items.filter(function (item) {\n    return itemToString(item).toLowerCase().startsWith(searchString.toLowerCase());\n  });\n  if (matchingItems.length > 0) {\n    var nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      var currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\n\n// src/assertion.ts\nfunction _isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction _isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nfunction _isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n}\nfunction _isArray(value) {\n  return Array.isArray(value);\n}\nfunction _isEmptyArray(value) {\n  return _isArray(value) && value.length === 0;\n}\nfunction _isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction _isDefined(value) {\n  return typeof value !== \"undefined\" && value !== void 0;\n}\nfunction _isUndefined(value) {\n  return typeof value === \"undefined\" || value === void 0;\n}\nfunction _isObject(value) {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !_isArray(value);\n}\nfunction _isEmptyObject(value) {\n  return _isObject(value) && Object.keys(value).length === 0;\n}\nfunction _isNotEmptyObject(value) {\n  return value && !_isEmptyObject(value);\n}\nfunction _isNull(value) {\n  return value == null;\n}\nfunction _isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction _isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n}\nfunction _isEmpty(value) {\n  if (_isArray(value)) return _isEmptyArray(value);\n  if (_isObject(value)) return _isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}\nvar _DEV__ = process.env.NODE_ENV !== \"production\";\nvar _TEST__ = process.env.NODE_ENV === \"test\";\nfunction _isRefObject(val) {\n  return \"current\" in val;\n}\nfunction _isInputEvent(value) {\n  return value && _isObject(value) && _isObject(value.target);\n}\n\n// src/object.ts\nvar import_lodash = __toESM(require(\"lodash.mergewith\"));\nfunction _omit(object, keys2) {\n  var result = {};\n  Object.keys(object).forEach(function (key) {\n    if (keys2.includes(key)) return;\n    result[key] = object[key];\n  });\n  return result;\n}\nfunction _pick(object, keys2) {\n  var result = {};\n  keys2.forEach(function (key) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  });\n  return result;\n}\nfunction _split(object, keys2) {\n  var picked = {};\n  var omitted = {};\n  Object.keys(object).forEach(function (key) {\n    if (keys2.includes(key)) {\n      picked[key] = object[key];\n    } else {\n      omitted[key] = object[key];\n    }\n  });\n  return [picked, omitted];\n}\nfunction _get(obj, path, fallback, index) {\n  var key = typeof path === \"string\" ? path.split(\".\") : [path];\n  for (index = 0; index < key.length; index += 1) {\n    if (!obj) break;\n    obj = obj[key[index]];\n  }\n  return obj === void 0 ? fallback : obj;\n}\nvar _memoize = function _memoize(fn) {\n  var cache = /* @__PURE__ */new WeakMap();\n  var memoizedFn = function memoizedFn(obj, path, fallback, index) {\n    if (typeof obj === \"undefined\") {\n      return fn(obj, path, fallback);\n    }\n    if (!cache.has(obj)) {\n      cache.set(obj, /* @__PURE__ */new Map());\n    }\n    var map = cache.get(obj);\n    if (map.has(path)) {\n      return map.get(path);\n    }\n    var value = fn(obj, path, fallback, index);\n    map.set(path, value);\n    return value;\n  };\n  return memoizedFn;\n};\nvar _memoizedGet = _memoize(_get);\nfunction _getWithDefault(path, scale) {\n  return _memoizedGet(scale, path, path);\n}\nfunction _objectFilter(object, fn) {\n  var result = {};\n  Object.keys(object).forEach(function (key) {\n    var value = object[key];\n    var shouldPass = fn(value, key, object);\n    if (shouldPass) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nvar _filterUndefined = function _filterUndefined(object) {\n  return _objectFilter(object, function (val) {\n    return val !== null && val !== void 0;\n  });\n};\nvar _objectKeys = function _objectKeys(obj) {\n  return Object.keys(obj);\n};\nvar _fromEntries = function _fromEntries(entries) {\n  return entries.reduce(function (carry, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    carry[key] = value;\n    return carry;\n  }, {});\n};\nvar _getCSSVar = function _getCSSVar(theme, scale, value) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = theme.__cssMap) == null ? void 0 : _a[\"\".concat(scale, \".\").concat(value)]) == null ? void 0 : _b.varRef) != null ? _c : value;\n};\n\n// src/breakpoint.ts\nfunction analyzeCSSValue(value) {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit: unit\n  };\n}\nfunction _px(value) {\n  if (value == null) return value;\n  var _analyzeCSSValue = analyzeCSSValue(value),\n    unitless = _analyzeCSSValue.unitless;\n  return unitless || _isNumber(value) ? \"\".concat(value, \"px\") : value;\n}\nvar sortByBreakpointValue = function sortByBreakpointValue(a, b) {\n  return parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\n};\nvar sortBps = function sortBps(breakpoints2) {\n  return _fromEntries(Object.entries(breakpoints2).sort(sortByBreakpointValue));\n};\nfunction normalize(breakpoints2) {\n  var sorted = sortBps(breakpoints2);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints2) {\n  var value = Object.keys(sortBps(breakpoints2));\n  return new Set(value);\n}\nfunction subtract(value) {\n  var _a;\n  if (!value) return value;\n  value = (_a = _px(value)) != null ? _a : value;\n  var factor = value.endsWith(\"px\") ? -0.02 : -0.01;\n  return _isNumber(value) ? \"\".concat(value + factor) : value.replace(/([0-9]+\\.?[0-9]*)/, function (m) {\n    return \"\".concat(parseFloat(m) + factor);\n  });\n}\nfunction _toMediaQueryString(min, max) {\n  var query = [\"@media screen\"];\n  if (min) query.push(\"and\", \"(min-width: \".concat(_px(min), \")\"));\n  if (max) query.push(\"and\", \"(max-width: \".concat(_px(max), \")\"));\n  return query.join(\" \");\n}\nfunction _analyzeBreakpoints(breakpoints2) {\n  var _a;\n  if (!breakpoints2) return null;\n  breakpoints2.base = (_a = breakpoints2.base) != null ? _a : \"0px\";\n  var normalized = normalize(breakpoints2);\n  var queries = Object.entries(breakpoints2).sort(sortByBreakpointValue).map(function (_ref3, index, entry) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      breakpoint = _ref4[0],\n      minW = _ref4[1];\n    var _a2;\n    var _ref5 = (_a2 = entry[index + 1]) != null ? _a2 : [],\n      _ref6 = _slicedToArray(_ref5, 2),\n      maxW = _ref6[1];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint: breakpoint,\n      minW: minW,\n      maxW: maxW,\n      maxWQuery: _toMediaQueryString(null, maxW),\n      minWQuery: _toMediaQueryString(minW),\n      minMaxQuery: _toMediaQueryString(minW, maxW)\n    };\n  });\n  var _keys = keys(breakpoints2);\n  var _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized: normalized,\n    isResponsive: function isResponsive(test) {\n      var keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every(function (key) {\n        return _keys.has(key);\n      });\n    },\n    asObject: sortBps(breakpoints2),\n    asArray: normalize(breakpoints2),\n    details: queries,\n    media: [null].concat(_toConsumableArray(normalized.map(function (minW) {\n      return _toMediaQueryString(minW);\n    }).slice(1))),\n    toArrayValue: function toArrayValue(test) {\n      if (!_isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      var result = _keysArr.map(function (bp) {\n        var _a2;\n        return (_a2 = test[bp]) != null ? _a2 : null;\n      });\n      while (_getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    toObjectValue: function toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce(function (acc, value, index) {\n        var key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\n\n// src/dom.ts\nfunction _isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction _isHTMLElement(el) {\n  var _a;\n  if (!_isElement(el)) {\n    return false;\n  }\n  var win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction _getOwnerWindow(node) {\n  var _a, _b;\n  return _isElement(node) ? (_b = (_a = _getOwnerDocument(node)) == null ? void 0 : _a.defaultView) != null ? _b : window : window;\n}\nfunction _getOwnerDocument(node) {\n  var _a;\n  return _isElement(node) ? (_a = node.ownerDocument) != null ? _a : document : document;\n}\nfunction _getEventWindow(event) {\n  var _a;\n  return (_a = event.view) != null ? _a : window;\n}\nfunction _canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar _isBrowser = /* @__PURE__ */_canUseDOM();\nvar _dataAttr = function _dataAttr(condition) {\n  return condition ? \"\" : void 0;\n};\nvar _ariaAttr = function _ariaAttr(condition) {\n  return condition ? true : void 0;\n};\nvar _cx = function _cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\nfunction _getActiveElement(node) {\n  var doc = _getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nfunction _contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\nfunction _addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\nfunction _normalizeEventKey(event) {\n  var key = event.key,\n    keyCode = event.keyCode;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\".concat(key) : key;\n  return eventKey;\n}\nfunction _getRelatedTarget(event) {\n  var _a, _b;\n  var target = (_a = event.target) != null ? _a : event.currentTarget;\n  var activeElement = _getActiveElement(target);\n  return (_b = event.relatedTarget) != null ? _b : activeElement;\n}\nfunction _isRightClick(event) {\n  return event.button !== 0;\n}\n\n// src/tabbable.ts\nvar _hasDisplayNone = function _hasDisplayNone(element) {\n  return window.getComputedStyle(element).display === \"none\";\n};\nvar _hasTabIndex = function _hasTabIndex(element) {\n  return element.hasAttribute(\"tabindex\");\n};\nvar _hasNegativeTabIndex = function _hasNegativeTabIndex(element) {\n  return _hasTabIndex(element) && element.tabIndex === -1;\n};\nfunction _isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction _isInputElement(element) {\n  return _isHTMLElement(element) && element.localName === \"input\" && \"select\" in element;\n}\nfunction _isActiveElement(element) {\n  var doc = _isHTMLElement(element) ? _getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction _hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nfunction _isHidden(element) {\n  if (element.parentElement && _isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nfunction _isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction _isFocusable(element) {\n  if (!_isHTMLElement(element) || _isHidden(element) || _isDisabled(element)) {\n    return false;\n  }\n  var localName = element.localName;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: function a() {\n      return element.hasAttribute(\"href\");\n    },\n    audio: function audio() {\n      return element.hasAttribute(\"controls\");\n    },\n    video: function video() {\n      return element.hasAttribute(\"controls\");\n    }\n  };\n  if (localName in others) {\n    return others[localName]();\n  }\n  if (_isContentEditable(element)) return true;\n  return _hasTabIndex(element);\n}\nfunction _isTabbable(element) {\n  if (!element) return false;\n  return _isHTMLElement(element) && _isFocusable(element) && !_hasNegativeTabIndex(element);\n}\n\n// src/dom-query.ts\nvar focusableElList = [\"input:not(:disabled):not([disabled])\", \"select:not(:disabled):not([disabled])\", \"textarea:not(:disabled):not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not(:disabled):not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nvar isVisible = function isVisible(el) {\n  return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\nfunction _getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(function (el) {\n    return _isFocusable(el) && isVisible(el);\n  });\n}\nfunction _getFirstFocusable(container) {\n  var allFocusable = _getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction _getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(_isTabbable);\n  if (_isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n  return allTabbable;\n}\nfunction _getFirstTabbableIn(container, fallbackToFocusable) {\n  var _getAllTabbable2 = _getAllTabbable(container, fallbackToFocusable),\n    _getAllTabbable3 = _slicedToArray(_getAllTabbable2, 1),\n    first = _getAllTabbable3[0];\n  return first || null;\n}\nfunction _getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = _getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction _getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = _getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(_isTabbable) || allFocusable.find(_isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction _getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = _getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(_isTabbable) || allFocusable.find(_isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction _focusNextTabbable(container, fallbackToFocusable) {\n  var nextTabbable = _getNextTabbable(container, fallbackToFocusable);\n  if (nextTabbable && _isHTMLElement(nextTabbable)) {\n    nextTabbable.focus();\n  }\n}\nfunction _focusPreviousTabbable(container, fallbackToFocusable) {\n  var previousTabbable = _getPreviousTabbable(container, fallbackToFocusable);\n  if (previousTabbable && _isHTMLElement(previousTabbable)) {\n    previousTabbable.focus();\n  }\n}\nfunction matches(element, selectors) {\n  if (\"matches\" in element) return element.matches(selectors);\n  if (\"msMatchesSelector\" in element) return element.msMatchesSelector(selectors);\n  return element.webkitMatchesSelector(selectors);\n}\nfunction _closest(element, selectors) {\n  if (\"closest\" in element) return element.closest(selectors);\n  do {\n    if (matches(element, selectors)) return element;\n    element = element.parentElement || element.parentNode;\n  } while (element !== null && element.nodeType === 1);\n  return null;\n}\n\n// src/function.ts\nfunction _runIfFn(valueOrFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  return _isFunction(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;\n}\nfunction _callAllHandlers() {\n  for (var _len3 = arguments.length, fns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    fns[_key3] = arguments[_key3];\n  }\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction _callAll() {\n  for (var _len4 = arguments.length, fns = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n  return function mergedFn(arg) {\n    fns.forEach(function (fn) {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\nvar _compose = function _compose(fn1) {\n  for (var _len5 = arguments.length, fns = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    fns[_key5 - 1] = arguments[_key5];\n  }\n  return fns.reduce(function (f1, f2) {\n    return function () {\n      return f1(f2.apply(void 0, arguments));\n    };\n  }, fn1);\n};\nfunction _once(fn) {\n  var result;\n  return function func() {\n    if (fn) {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      result = fn.apply(this, args);\n      fn = null;\n    }\n    return result;\n  };\n}\nvar _noop = function _noop() {};\nvar _warn = /* @__PURE__ */_once(function (options) {\n  return function () {\n    var condition = options.condition,\n      message = options.message;\n    if (condition && _DEV__) {\n      console.warn(message);\n    }\n  };\n});\nvar _error = /* @__PURE__ */_once(function (options) {\n  return function () {\n    var condition = options.condition,\n      message = options.message;\n    if (condition && _DEV__) {\n      console.error(message);\n    }\n  };\n});\nvar _pipe = function _pipe() {\n  for (var _len7 = arguments.length, fns = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    fns[_key7] = arguments[_key7];\n  }\n  return function (v) {\n    return fns.reduce(function (a, b) {\n      return b(a);\n    }, v);\n  };\n};\nvar distance1D = function distance1D(a, b) {\n  return Math.abs(a - b);\n};\nvar isPoint = function isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n};\nfunction _distance(a, b) {\n  if (_isNumber(a) && _isNumber(b)) {\n    return distance1D(a, b);\n  }\n  if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));\n  }\n  return 0;\n}\n\n// src/focus.ts\nfunction _focus(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$isActive = options.isActive,\n    isActive = _options$isActive === void 0 ? _isActiveElement : _options$isActive,\n    nextTick = options.nextTick,\n    _options$preventScrol = options.preventScroll,\n    preventScroll = _options$preventScrol === void 0 ? true : _options$preventScrol,\n    _options$selectTextIf = options.selectTextIfInput,\n    selectTextIfInput = _options$selectTextIf === void 0 ? true : _options$selectTextIf;\n  if (!element || isActive(element)) return -1;\n  function triggerFocus() {\n    if (!element) {\n      _warn({\n        condition: true,\n        message: \"[chakra-ui]: can't call focus() on `null` or `undefined` element\"\n      });\n      return;\n    }\n    if (supportsPreventScroll()) {\n      element.focus({\n        preventScroll: preventScroll\n      });\n    } else {\n      element.focus();\n      if (preventScroll) {\n        var scrollableElements = getScrollableElements(element);\n        restoreScrollPosition(scrollableElements);\n      }\n    }\n    if (selectTextIfInput) {\n      if (_isInputElement(element)) {\n        element.select();\n      } else if (\"setSelectionRange\" in element) {\n        var el = element;\n        el.setSelectionRange(el.value.length, el.value.length);\n      }\n    }\n  }\n  if (nextTick) {\n    return requestAnimationFrame(triggerFocus);\n  }\n  triggerFocus();\n  return -1;\n}\nvar supportsPreventScrollCached = null;\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n    try {\n      var div = document.createElement(\"div\");\n      div.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n      });\n    } catch (e) {}\n  }\n  return supportsPreventScrollCached;\n}\nfunction getScrollableElements(element) {\n  var _a;\n  var doc = _getOwnerDocument(element);\n  var win = (_a = doc.defaultView) != null ? _a : window;\n  var parent = element.parentNode;\n  var scrollableElements = [];\n  var rootScrollingElement = doc.scrollingElement || doc.documentElement;\n  while (parent instanceof win.HTMLElement && parent !== rootScrollingElement) {\n    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n    parent = parent.parentNode;\n  }\n  if (rootScrollingElement instanceof win.HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n  return scrollableElements;\n}\nfunction restoreScrollPosition(scrollableElements) {\n  var _iterator2 = _createForOfIteratorHelper(scrollableElements),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _step2.value,\n        element = _step2$value.element,\n        scrollTop = _step2$value.scrollTop,\n        scrollLeft = _step2$value.scrollLeft;\n      element.scrollTop = scrollTop;\n      element.scrollLeft = scrollLeft;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n\n// src/flatten.ts\nfunction _flatten(target) {\n  var maxDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n  if (!_isObject(target) && !Array.isArray(target) || !maxDepth) {\n    return target;\n  }\n  return Object.entries(target).reduce(function (result, _ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n      key = _ref8[0],\n      value = _ref8[1];\n    if (_isObject(value) || _isArray(value)) {\n      Object.entries(_flatten(value, maxDepth - 1)).forEach(function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n          childKey = _ref10[0],\n          childValue = _ref10[1];\n        result[\"\".concat(key, \".\").concat(childKey)] = childValue;\n      });\n    } else {\n      result[key] = value;\n    }\n    return result;\n  }, {});\n}\n\n// src/lazy.ts\nfunction _determineLazyBehavior(options) {\n  var hasBeenSelected = options.hasBeenSelected,\n    isLazy = options.isLazy,\n    isSelected = options.isSelected,\n    _options$lazyBehavior = options.lazyBehavior,\n    lazyBehavior = _options$lazyBehavior === void 0 ? \"unmount\" : _options$lazyBehavior;\n  if (!isLazy) return true;\n  if (isSelected) return true;\n  if (lazyBehavior === \"keepMounted\" && hasBeenSelected) return true;\n  return false;\n}\n\n// src/number.ts\nvar _minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar _maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\nfunction toNumber(value) {\n  var num = parseFloat(value);\n  return _isNotNumber(num) ? 0 : num;\n}\nfunction _toPrecision(value, precision) {\n  var nextValue = toNumber(value);\n  var scaleFactor = Math.pow(10, precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\nfunction _countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  var e = 1;\n  var p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nfunction _valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction _percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction _roundValueToStep(value, from, step) {\n  var nextValue = Math.round((value - from) / step) * step + from;\n  var precision = _countDecimalPlaces(step);\n  return _toPrecision(nextValue, precision);\n}\nfunction _clampValue(value, min, max) {\n  if (value == null) return value;\n  _warn({\n    condition: max < min,\n    message: \"clamp: max cannot be less than min\"\n  });\n  return Math.min(Math.max(value, min), max);\n}\n\n// src/pan-event.ts\nvar import_framesync = __toESM(require(\"framesync\"));\n\n// src/pointer-event.ts\nfunction _isMouseEvent(event) {\n  var win = _getEventWindow(event);\n  if (typeof win.PointerEvent !== \"undefined\" && event instanceof win.PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n  return event instanceof win.MouseEvent;\n}\nfunction _isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\nfunction filterPrimaryPointer(eventHandler) {\n  return function (event) {\n    var win = _getEventWindow(event);\n    var isMouseEvent2 = event instanceof win.MouseEvent;\n    var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\nfunction pointFromTouch(e) {\n  var pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n  var point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[\"\".concat(pointType, \"X\")],\n    y: point[\"\".concat(pointType, \"Y\")]\n  };\n}\nfunction pointFromMouse(point) {\n  var pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    x: point[\"\".concat(pointType, \"X\")],\n    y: point[\"\".concat(pointType, \"Y\")]\n  };\n}\nfunction _extractEventInfo(event) {\n  var pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    point: _isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\nfunction _getViewportPointFromEvent(event) {\n  return _extractEventInfo(event, \"client\");\n}\nvar _wrapPointerEventHandler = function _wrapPointerEventHandler(handler) {\n  var shouldFilterPrimaryPointer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var listener = function listener(event) {\n    return handler(event, _extractEventInfo(event));\n  };\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n};\nvar supportsPointerEvents = function supportsPointerEvents() {\n  return _isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function supportsTouchEvents() {\n  return _isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function supportsMouseEvents() {\n  return _isBrowser && window.onmousedown === null;\n};\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\nfunction _getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  }\n  if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  }\n  if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n  return name;\n}\nfunction _addPointerEvent(target, eventName, handler, options) {\n  return _addDomEvent(target, _getPointerEventName(eventName), _wrapPointerEventHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction _isMultiTouchEvent(event) {\n  return _isTouchEvent(event) && event.touches.length > 1;\n}\n\n// src/pan-event.ts\nvar _PanSession = /*#__PURE__*/function () {\n  function _PanSession(event, handlers, threshold) {\n    var _this = this;\n    _classCallCheck(this, _PanSession);\n    __publicField(this, \"history\", []);\n    __publicField(this, \"startEvent\", null);\n    __publicField(this, \"lastEvent\", null);\n    __publicField(this, \"lastEventInfo\", null);\n    __publicField(this, \"handlers\", {});\n    __publicField(this, \"removeListeners\", _noop);\n    __publicField(this, \"threshold\", 3);\n    __publicField(this, \"win\");\n    __publicField(this, \"updatePoint\", function () {\n      if (!(_this.lastEvent && _this.lastEventInfo)) return;\n      var info = getPanInfo(_this.lastEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null;\n      var isDistancePastThreshold = _distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= _this.threshold;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var _ref11 = (0, import_framesync.getFrameData)(),\n        timestamp = _ref11.timestamp;\n      _this.history.push(_objectSpread({}, info.point, {\n        timestamp: timestamp\n      }));\n      var _this$handlers = _this.handlers,\n        onStart = _this$handlers.onStart,\n        onMove = _this$handlers.onMove;\n      if (!isPanStarted) {\n        onStart == null ? void 0 : onStart(_this.lastEvent, info);\n        _this.startEvent = _this.lastEvent;\n      }\n      onMove == null ? void 0 : onMove(_this.lastEvent, info);\n    });\n    __publicField(this, \"onPointerMove\", function (event, info) {\n      _this.lastEvent = event;\n      _this.lastEventInfo = info;\n      if (_isMouseEvent(event) && event.buttons === 0) {\n        _this.onPointerUp(event, info);\n        return;\n      }\n      import_framesync.default.update(_this.updatePoint, true);\n    });\n    __publicField(this, \"onPointerUp\", function (event, info) {\n      var panInfo = getPanInfo(info, _this.history);\n      var _this$handlers2 = _this.handlers,\n        onEnd = _this$handlers2.onEnd,\n        onSessionEnd = _this$handlers2.onSessionEnd;\n      onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n      _this.end();\n      if (!onEnd || !_this.startEvent) return;\n      onEnd == null ? void 0 : onEnd(event, panInfo);\n    });\n    this.win = _getEventWindow(event);\n    if (_isMultiTouchEvent(event)) return;\n    this.handlers = handlers;\n    if (threshold) {\n      this.threshold = threshold;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    var info = _extractEventInfo(event);\n    var _ref12 = (0, import_framesync.getFrameData)(),\n      timestamp = _ref12.timestamp;\n    this.history = [_objectSpread({}, info.point, {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart == null ? void 0 : onSessionStart(event, getPanInfo(info, this.history));\n    this.removeListeners = _pipe(_addPointerEvent(this.win, \"pointermove\", this.onPointerMove), _addPointerEvent(this.win, \"pointerup\", this.onPointerUp), _addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n  _createClass(_PanSession, [{\n    key: \"updateHandlers\",\n    value: function updateHandlers(handlers) {\n      this.handlers = handlers;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var _a;\n      (_a = this.removeListeners) == null ? void 0 : _a.call(this);\n      import_framesync.cancelSync.update(this.updatePoint);\n    }\n  }]);\n  return _PanSession;\n}();\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\nfunction startPanPoint(history) {\n  return history[0];\n}\nfunction lastPanPoint(history) {\n  return history[history.length - 1];\n}\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtractPoint(info.point, lastPanPoint(history)),\n    offset: subtractPoint(info.point, startPanPoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\nvar toMilliseconds = function toMilliseconds(seconds) {\n  return seconds * 1e3;\n};\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\n\n// src/responsive.ts\nvar _breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]);\nfunction _mapResponsive(prop, mapper) {\n  if (_isArray(prop)) {\n    return prop.map(function (item) {\n      if (item === null) {\n        return null;\n      }\n      return mapper(item);\n    });\n  }\n  if (_isObject(prop)) {\n    return _objectKeys(prop).reduce(function (result, key) {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction _objectToArrayNotation(obj) {\n  var bps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _breakpoints;\n  var result = bps.map(function (br) {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  while (_getLastItem(result) === null) {\n    result.pop();\n  }\n  return result;\n}\nfunction _arrayToObjectNotation(values) {\n  var bps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _breakpoints;\n  var result = {};\n  values.forEach(function (value, index) {\n    var key = bps[index];\n    if (value == null) return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction _isResponsiveObjectLike(obj) {\n  var bps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _breakpoints;\n  var keys2 = Object.keys(obj);\n  return keys2.length > 0 && keys2.every(function (key) {\n    return bps.includes(key);\n  });\n}\nvar _isCustomBreakpoint = function _isCustomBreakpoint(maybeBreakpoint) {\n  return Number.isNaN(Number(maybeBreakpoint));\n};\n\n// src/user-agent.ts\nfunction getUserAgentBrowser(navigator) {\n  var ua = navigator.userAgent,\n    vendor = navigator.vendor;\n  var android = /(android)/i.test(ua);\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n    case android:\n      return \"AOSP\";\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n    default:\n      return null;\n  }\n}\nfunction getUserAgentOS(navigator) {\n  var ua = navigator.userAgent,\n    platform = navigator.platform;\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n    case /Win/.test(platform):\n      return \"Windows\";\n    case /Mac/.test(platform):\n      return \"Mac\";\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n    default:\n      return null;\n  }\n}\nfunction _detectDeviceType(navigator) {\n  var ua = navigator.userAgent;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\nfunction _detectOS(os) {\n  if (!_isBrowser) return false;\n  return getUserAgentOS(window.navigator) === os;\n}\nfunction _detectBrowser(browser) {\n  if (!_isBrowser) return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\nfunction _detectTouch() {\n  if (!_isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}\n\n// src/walk-object.ts\nfunction _walkObject(target, predicate) {\n  function inner(value) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    if (_isArray(value)) {\n      return value.map(function (item, index) {\n        return inner(item, [].concat(_toConsumableArray(path), [String(index)]));\n      });\n    }\n    if (_isObject(value)) {\n      return _fromEntries(Object.entries(value).map(function (_ref13) {\n        var _ref14 = _slicedToArray(_ref13, 2),\n          key = _ref14[0],\n          child = _ref14[1];\n        return [key, inner(child, [].concat(_toConsumableArray(path), [key]))];\n      }));\n    }\n    return predicate(value, path);\n  }\n  return inner(target);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  PanSession: _PanSession,\n  __DEV__: _DEV__,\n  __TEST__: _TEST__,\n  addDomEvent: _addDomEvent,\n  addItem: _addItem,\n  addPointerEvent: _addPointerEvent,\n  analyzeBreakpoints: _analyzeBreakpoints,\n  ariaAttr: _ariaAttr,\n  arrayToObjectNotation: _arrayToObjectNotation,\n  breakpoints: _breakpoints,\n  callAll: _callAll,\n  callAllHandlers: _callAllHandlers,\n  canUseDOM: _canUseDOM,\n  chunk: _chunk,\n  clampValue: _clampValue,\n  closest: _closest,\n  compose: _compose,\n  contains: _contains,\n  countDecimalPlaces: _countDecimalPlaces,\n  cx: _cx,\n  dataAttr: _dataAttr,\n  detectBrowser: _detectBrowser,\n  detectDeviceType: _detectDeviceType,\n  detectOS: _detectOS,\n  detectTouch: _detectTouch,\n  determineLazyBehavior: _determineLazyBehavior,\n  distance: _distance,\n  error: _error,\n  extractEventInfo: _extractEventInfo,\n  filterUndefined: _filterUndefined,\n  flatten: _flatten,\n  focus: _focus,\n  focusNextTabbable: _focusNextTabbable,\n  focusPreviousTabbable: _focusPreviousTabbable,\n  fromEntries: _fromEntries,\n  get: _get,\n  getActiveElement: _getActiveElement,\n  getAllFocusable: _getAllFocusable,\n  getAllTabbable: _getAllTabbable,\n  getCSSVar: _getCSSVar,\n  getEventWindow: _getEventWindow,\n  getFirstFocusable: _getFirstFocusable,\n  getFirstItem: _getFirstItem,\n  getFirstTabbableIn: _getFirstTabbableIn,\n  getLastItem: _getLastItem,\n  getLastTabbableIn: _getLastTabbableIn,\n  getNextIndex: _getNextIndex,\n  getNextItem: _getNextItem,\n  getNextItemFromSearch: _getNextItemFromSearch,\n  getNextTabbable: _getNextTabbable,\n  getOwnerDocument: _getOwnerDocument,\n  getOwnerWindow: _getOwnerWindow,\n  getPointerEventName: _getPointerEventName,\n  getPrevIndex: _getPrevIndex,\n  getPrevItem: _getPrevItem,\n  getPreviousTabbable: _getPreviousTabbable,\n  getRelatedTarget: _getRelatedTarget,\n  getViewportPointFromEvent: _getViewportPointFromEvent,\n  getWithDefault: _getWithDefault,\n  hasDisplayNone: _hasDisplayNone,\n  hasFocusWithin: _hasFocusWithin,\n  hasNegativeTabIndex: _hasNegativeTabIndex,\n  hasTabIndex: _hasTabIndex,\n  isActiveElement: _isActiveElement,\n  isArray: _isArray,\n  isBrowser: _isBrowser,\n  isContentEditable: _isContentEditable,\n  isCssVar: _isCssVar,\n  isCustomBreakpoint: _isCustomBreakpoint,\n  isDefined: _isDefined,\n  isDisabled: _isDisabled,\n  isElement: _isElement,\n  isEmpty: _isEmpty,\n  isEmptyArray: _isEmptyArray,\n  isEmptyObject: _isEmptyObject,\n  isFocusable: _isFocusable,\n  isFunction: _isFunction,\n  isHTMLElement: _isHTMLElement,\n  isHidden: _isHidden,\n  isInputElement: _isInputElement,\n  isInputEvent: _isInputEvent,\n  isMouseEvent: _isMouseEvent,\n  isMultiTouchEvent: _isMultiTouchEvent,\n  isNotEmptyObject: _isNotEmptyObject,\n  isNotNumber: _isNotNumber,\n  isNull: _isNull,\n  isNumber: _isNumber,\n  isNumeric: _isNumeric,\n  isObject: _isObject,\n  isRefObject: _isRefObject,\n  isResponsiveObjectLike: _isResponsiveObjectLike,\n  isRightClick: _isRightClick,\n  isString: _isString,\n  isTabbable: _isTabbable,\n  isTouchEvent: _isTouchEvent,\n  isUndefined: _isUndefined,\n  mapResponsive: _mapResponsive,\n  maxSafeInteger: _maxSafeInteger,\n  memoize: _memoize,\n  memoizedGet: _memoizedGet,\n  mergeWith: mergeWith,\n  minSafeInteger: _minSafeInteger,\n  noop: _noop,\n  normalizeEventKey: _normalizeEventKey,\n  objectFilter: _objectFilter,\n  objectKeys: _objectKeys,\n  objectToArrayNotation: _objectToArrayNotation,\n  omit: _omit,\n  once: _once,\n  percentToValue: _percentToValue,\n  pick: _pick,\n  pipe: _pipe,\n  px: _px,\n  removeIndex: _removeIndex,\n  removeItem: _removeItem,\n  roundValueToStep: _roundValueToStep,\n  runIfFn: _runIfFn,\n  split: _split,\n  toMediaQueryString: _toMediaQueryString,\n  toPrecision: _toPrecision,\n  valueToPercent: _valueToPercent,\n  walkObject: _walkObject,\n  warn: _warn,\n  wrapPointerEventHandler: _wrapPointerEventHandler\n});","map":null,"metadata":{},"sourceType":"script"}
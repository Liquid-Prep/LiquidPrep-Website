{"ast":null,"code":"// src/index.ts\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nvar isDom = function isDom() {\n  return typeof window !== \"undefined\";\n};\nfunction getPlatform() {\n  var _a;\n  var agent = navigator.userAgentData;\n  return (_a = agent == null ? void 0 : agent.platform) != null ? _a : navigator.platform;\n}\nvar vn = function vn(v) {\n  return isDom() && v.test(navigator.vendor);\n};\nvar pt = function pt(v) {\n  return isDom() && v.test(getPlatform());\n};\nvar isApple = function isApple() {\n  return pt(/mac|iphone|ipad|ipod/i);\n};\nvar isSafari = function isSafari() {\n  return isApple() && vn(/apple/i);\n};\nfunction useFocusOnPointerDown(props) {\n  var ref = props.ref,\n    elements = props.elements,\n    enabled = props.enabled;\n  var doc = function doc() {\n    var _a, _b;\n    return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n  };\n  useEventListener(doc, \"pointerdown\", function (event) {\n    if (!isSafari() || !enabled) return;\n    var target = event.target;\n    var els = elements != null ? elements : [ref];\n    var isValidTarget = els.some(function (elementOrRef) {\n      var el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (el == null ? void 0 : el.contains(target)) || el === target;\n    });\n    if (doc().activeElement !== target && isValidTarget) {\n      event.preventDefault();\n      target.focus();\n    }\n  });\n}\nexport { useFocusOnPointerDown };","map":null,"metadata":{},"sourceType":"module"}
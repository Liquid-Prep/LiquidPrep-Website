{"ast":null,"code":"import _defineProperty from \"/Users/maniksoomro/Documents/LiquidPrep-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n// src/components/alert.ts\nimport { alertAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar } from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar _createMultiStyleConf = createMultiStyleConfigHelpers(parts.keys),\n  definePartsStyle = _createMultiStyleConf.definePartsStyle,\n  defineMultiStyleConfig = _createMultiStyleConf.defineMultiStyleConfig;\nvar $fg = cssVar(\"alert-fg\");\nvar $bg = cssVar(\"alert-bg\");\nvar baseStyle = definePartsStyle({\n  container: {\n    bg: $bg.reference,\n    px: \"4\",\n    py: \"3\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: \"6\",\n    marginEnd: \"2\"\n  },\n  description: {\n    lineHeight: \"6\"\n  },\n  icon: {\n    color: $fg.reference,\n    flexShrink: 0,\n    marginEnd: \"3\",\n    w: \"5\",\n    h: \"6\"\n  },\n  spinner: {\n    color: $fg.reference,\n    flexShrink: 0,\n    marginEnd: \"3\",\n    w: \"5\",\n    h: \"5\"\n  }\n});\nfunction getBg(props) {\n  var theme = props.theme,\n    c = props.colorScheme;\n  var darkBg = transparentize(\"\".concat(c, \".200\"), 0.16)(theme);\n  return {\n    light: \"colors.\".concat(c, \".100\"),\n    dark: darkBg\n  };\n}\nvar variantSubtle = definePartsStyle(function (props) {\n  var _dark, _container;\n  var c = props.colorScheme;\n  var bg = getBg(props);\n  return {\n    container: (_container = {}, _defineProperty(_container, $fg.variable, \"colors.\".concat(c, \".500\")), _defineProperty(_container, $bg.variable, bg.light), _defineProperty(_container, \"_dark\", (_dark = {}, _defineProperty(_dark, $fg.variable, \"colors.\".concat(c, \".200\")), _defineProperty(_dark, $bg.variable, bg.dark), _dark)), _container)\n  };\n});\nvar variantLeftAccent = definePartsStyle(function (props) {\n  var _dark2, _container2;\n  var c = props.colorScheme;\n  var bg = getBg(props);\n  return {\n    container: (_container2 = {}, _defineProperty(_container2, $fg.variable, \"colors.\".concat(c, \".500\")), _defineProperty(_container2, $bg.variable, bg.light), _defineProperty(_container2, \"_dark\", (_dark2 = {}, _defineProperty(_dark2, $fg.variable, \"colors.\".concat(c, \".200\")), _defineProperty(_dark2, $bg.variable, bg.dark), _dark2)), _defineProperty(_container2, \"paddingStart\", \"3\"), _defineProperty(_container2, \"borderStartWidth\", \"4px\"), _defineProperty(_container2, \"borderStartColor\", $fg.reference), _container2)\n  };\n});\nvar variantTopAccent = definePartsStyle(function (props) {\n  var _dark3, _container3;\n  var c = props.colorScheme;\n  var bg = getBg(props);\n  return {\n    container: (_container3 = {}, _defineProperty(_container3, $fg.variable, \"colors.\".concat(c, \".500\")), _defineProperty(_container3, $bg.variable, bg.light), _defineProperty(_container3, \"_dark\", (_dark3 = {}, _defineProperty(_dark3, $fg.variable, \"colors.\".concat(c, \".200\")), _defineProperty(_dark3, $bg.variable, bg.dark), _dark3)), _defineProperty(_container3, \"pt\", \"2\"), _defineProperty(_container3, \"borderTopWidth\", \"4px\"), _defineProperty(_container3, \"borderTopColor\", $fg.reference), _container3)\n  };\n});\nvar variantSolid = definePartsStyle(function (props) {\n  var _dark4, _container4;\n  var c = props.colorScheme;\n  return {\n    container: (_container4 = {}, _defineProperty(_container4, $fg.variable, \"colors.white\"), _defineProperty(_container4, $bg.variable, \"colors.\".concat(c, \".500\")), _defineProperty(_container4, \"_dark\", (_dark4 = {}, _defineProperty(_dark4, $fg.variable, \"colors.gray.900\"), _defineProperty(_dark4, $bg.variable, \"colors.\".concat(c, \".200\")), _dark4)), _defineProperty(_container4, \"color\", $fg.reference), _container4)\n  };\n});\nvar variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid\n};\nvar alertTheme = defineMultiStyleConfig({\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"blue\"\n  }\n});\nexport { alertTheme };","map":null,"metadata":{},"sourceType":"module"}
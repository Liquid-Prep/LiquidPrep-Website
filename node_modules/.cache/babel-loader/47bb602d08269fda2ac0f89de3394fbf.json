{"ast":null,"code":"// src/use-event-listeners.ts\nimport { useCallback, useEffect, useRef } from \"react\";\nfunction useEventListeners() {\n  var listeners = useRef( /* @__PURE__ */new Map());\n  var currentListeners = listeners.current;\n  var add = useCallback(function (el, type, listener, options) {\n    listeners.current.set(listener, {\n      type: type,\n      el: el,\n      options: options\n    });\n    el.addEventListener(type, listener, options);\n  }, []);\n  var remove = useCallback(function (el, type, listener, options) {\n    el.removeEventListener(type, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  useEffect(function () {\n    return function () {\n      currentListeners.forEach(function (value, key) {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove, currentListeners]);\n  return {\n    add: add,\n    remove: remove\n  };\n}\nexport { useEventListeners };","map":null,"metadata":{},"sourceType":"module"}